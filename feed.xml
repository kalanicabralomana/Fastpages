<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://kcabralomana.github.io/Fastpages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kcabralomana.github.io/Fastpages/" rel="alternate" type="text/html" /><updated>2022-10-20T15:24:07-05:00</updated><id>https://kcabralomana.github.io/Fastpages/feed.xml</id><title type="html">Kalani Cabral-Omana</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Python Web API Endpoints using Jokes</title><link href="https://kcabralomana.github.io/Fastpages/techtalk/webapi" rel="alternate" type="text/html" title="Python Web API Endpoints using Jokes" /><published>2022-10-17T00:00:00-05:00</published><updated>2022-10-17T00:00:00-05:00</updated><id>https://kcabralomana.github.io/Fastpages/techtalk/PBL-webapi_tutorial</id><author><name></name></author><category term="3.B" /><category term="5.A" /><category term="5.B" /><category term="C5.0" /><category term="C7.0" /><category term="C7.6" /><summary type="html"><![CDATA[A discussion on Web APIs. This is about creating a Web API (Jokes), and creating API that retains data as long as the Web Server is running. This is done using List and Dictionaries as the backend. Ultimately, this example could be extended by adding a database to the backend. However, for now, we are focussing on interaction of Frontend to Backend, this is called an Endpoint.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kcabralomana.github.io/Fastpages/images/python_restapi.png" /><media:content medium="image" url="https://kcabralomana.github.io/Fastpages/images/python_restapi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Internet 4.1</title><link href="https://kcabralomana.github.io/Fastpages/markdown/2022/10/16/unit-4.1-notes.html" rel="alternate" type="text/html" title="The Internet 4.1" /><published>2022-10-16T00:00:00-05:00</published><updated>2022-10-16T00:00:00-05:00</updated><id>https://kcabralomana.github.io/Fastpages/markdown/2022/10/16/unit-4.1-notes</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[Notes on College Board 4.1 The Internet and quiz]]></summary></entry><entry><title type="html">Program Design for Final Project</title><link href="https://kcabralomana.github.io/Fastpages/markdown/2022/10/09/final-overview.html" rel="alternate" type="text/html" title="Program Design for Final Project" /><published>2022-10-09T00:00:00-05:00</published><updated>2022-10-09T00:00:00-05:00</updated><id>https://kcabralomana.github.io/Fastpages/markdown/2022/10/09/final-overview</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[AP requirements for final group project]]></summary></entry><entry><title type="html">Identifying and Correcting Errors Unit 1.4</title><link href="https://kcabralomana.github.io/Fastpages/markdown/2022/10/07/unit-1.4-notes.html" rel="alternate" type="text/html" title="Identifying and Correcting Errors Unit 1.4" /><published>2022-10-07T00:00:00-05:00</published><updated>2022-10-07T00:00:00-05:00</updated><id>https://kcabralomana.github.io/Fastpages/markdown/2022/10/07/unit-1.4-notes</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[Notes on College Board 1.4 Identifying and Correcting Errors and quiz]]></summary></entry><entry><title type="html">API Implementation</title><link href="https://kcabralomana.github.io/Fastpages/apiimplementation" rel="alternate" type="text/html" title="API Implementation" /><published>2022-10-07T00:00:00-05:00</published><updated>2022-10-07T00:00:00-05:00</updated><id>https://kcabralomana.github.io/Fastpages/api-implementation</id><author><name></name></author><category term="code" /><summary type="html"><![CDATA[Implementing API]]></summary></entry></feed>