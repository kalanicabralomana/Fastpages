{
  
    
        "post0": {
            "title": "Tic tac toe",
            "content": "Tic Tac Toe . Tic Tac Toe . .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/06/06/tictactod.html",
            "relUrl": "/2023/06/06/tictactod.html",
            "date": " • Jun 6, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Python 2D Iteration and Animation",
            "content": "2D Programming and Resources . There are lots of applications for 2D data. Common terms in 2D are tabular data, row/columns, matrix, etc. Nested iterative loops are often used to find or discover each cell in a 2D array. . 2D samples and challenges in Jupyter. wget link:https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-05-16-DS-arrays_lab.ipynb- Mario animations in JS, these are markdown code examples. Assets metadata yml, wget and place in _data directory; sprite, download and place in images directory | Code to interact with Sprite Animations runtime, wget code | Game starters runtime, wget imperative code, wget oop code | . | . Python 2D array . Example of pre-populating 2D array and printing using 3 different styles . Candy Challenge:print a christmas tree and trunk | . &quot;&quot;&quot; * Creator: Nighthawk Coding Society 2D arrays &quot;&quot;&quot; # Classic nested loops using ij indexes, this shows 2 dimensions def print_matrix1(matrix): print(&quot;Classic nested loops using ij indexes&quot;) for i in range(len(matrix)): # outer loop (i), built on length of matrix (rows) for j in range(len(matrix[i])): # inner loop (j), built on length of items (columns) print(matrix[i][j], end=&quot; &quot;) # [i][j] is 2D representation, end changes newline to space print() # Enhanced nested for loops, row and col variables def print_matrix2(matrix): print(&quot;Enhanced nested for loops&quot;) for row in matrix: # short hand row iterator, index is not required for col in row: # short hand column iterator print(col, end=&quot; &quot;) print() # For loop with shortcut (*) row expansion def print_matrix3(matrix): print(&quot;For loop with shortcut (*) row expansion&quot;) for row in matrix: print(*row) # pythons has (*) that is one line expansion of row into columns def test_matrices(): # setup some text matrices keypad = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&quot; &quot;, 0, &quot; &quot;]] keyboard = [[&quot;`&quot;, 1, &quot; &quot;, 2, &quot; &quot;,3, &quot; &quot;, 4, &quot; &quot;, 5, &quot; &quot;, 6, &quot; &quot;, 7, &quot; &quot;, 8, &quot; &quot;, 9, &quot; &quot;, 0, &quot; &quot;, &quot;-&quot;,&quot; &quot;, &quot;=&quot;], [&quot; &quot;, &quot; &quot;, &quot;Q&quot;, &quot; &quot;, &quot;W&quot;, &quot; &quot;, &quot;E&quot;, &quot; &quot;, &quot;R&quot;, &quot; &quot;, &quot;T&quot;, &quot; &quot;, &quot;Y&quot;, &quot; &quot;, &quot;U&quot;, &quot; &quot;, &quot;I&quot;, &quot; &quot;, &quot; &quot;, &quot;O&quot;, &quot; &quot;, &quot;P&quot;, &quot; &quot;, &quot;[&quot;, &quot; &quot;, &quot;]&quot;, &quot; &quot;, &quot; &quot;], [&quot; &quot;, &quot; &quot;, &quot; &quot;, &quot;A&quot;, &quot; &quot;, &quot;S&quot;, &quot; &quot;, &quot;D&quot;, &quot; &quot;, &quot;F&quot;, &quot; &quot;, &quot;G&quot;, &quot; &quot;, &quot;H&quot;, &quot; &quot;, &quot;J&quot;, &quot; &quot;, &quot;K&quot;, &quot; &quot;, &quot;L&quot;, &quot; &quot;, &quot;;&quot;, &quot; &quot;, &quot;&#39;&quot;], [&quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot;Z&quot;, &quot; &quot;, &quot;X&quot;, &quot; &quot;, &quot;C&quot;, &quot; &quot;, &quot;V&quot;, &quot; &quot;, &quot;B&quot;, &quot; &quot;, &quot;N&quot;, &quot; &quot;, &quot;M&quot;, &quot; &quot;, &quot;,&quot;, &quot; &quot;, &quot;.&quot;, &quot; &quot;, &quot;/&quot;]] numbers = [ [0, 1], # binary [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], # decimal [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;] # hexadecimal ] # pack into a list of matrices with titles matrices = [ [&quot;Keypad&quot;, keypad], [&quot;Keyboard&quot;, keyboard], [&quot;Number Systems&quot;, numbers] ] # loop 2D matrix with returning list in [key, value] arrangement for title, matrix in matrices: # unpack title and matrix as variables # formatted message with concatenation print(title, len(matrix), &quot;x&quot;, &quot;~&quot; + str(len(matrix[0]))) # use three different methods print_matrix1(matrix) print_matrix2(matrix) print_matrix3(matrix) # blank link in between print() # tester section if __name__ == &quot;__main__&quot;: test_matrices() . Keypad 4 x ~3 Classic nested loops using ij indexes 1 2 3 4 5 6 7 8 9 0 Enhanced nested for loops 1 2 3 4 5 6 7 8 9 0 For loop with shortcut (*) row expansion 1 2 3 4 5 6 7 8 9 0 Keyboard 4 x ~24 Classic nested loops using ij indexes ` 1 2 3 4 5 6 7 8 9 0 - = Q W E R T Y U I O P [ ] A S D F G H J K L ; &#39; Z X C V B N M , . / Enhanced nested for loops ` 1 2 3 4 5 6 7 8 9 0 - = Q W E R T Y U I O P [ ] A S D F G H J K L ; &#39; Z X C V B N M , . / For loop with shortcut (*) row expansion ` 1 2 3 4 5 6 7 8 9 0 - = Q W E R T Y U I O P [ ] A S D F G H J K L ; &#39; Z X C V B N M , . / Number Systems 3 x ~2 Classic nested loops using ij indexes 0 1 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 A B C D E F Enhanced nested for loops 0 1 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 A B C D E F For loop with shortcut (*) row expansion 0 1 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 A B C D E F . JavaScript 2D array . Example below populate a 2D array. Key concepts are ij loop and assignments. Observe the object that is created in console. Learn the basics of iteration through 2D array in JavaScript. . Candy challenge:Work of pairs. Create one of the Python examples (christmas tree, keyboard, ...). Use the element.append to output within the notebook. As you work on JavaScript make sure your development enviornment is setup like JavaScript programmer. | . %%js /* * Creator: Nighthawk Coding Society Construct a two-dimensional array in JS */ var arr2D = []; var rows = 3; var cols = 4; // Loop to initialize 2D array elements for (var i = 0; i &lt; rows; i++) { arr2D[i]=[]; for (var j = 0; j &lt; cols; j++) { arr2D[i][j] = &quot;r:&quot; + i + &quot;c:&quot; + j; } } console.log(arr2D); element.append(arr2D); . Monkey Jumpers Poem . Here are some of the key parts of these arrays . Build ASCII monkeys, 5 different monkeys using ASCII Art for the &quot;Monkey Jumpers&quot; countdown poem | ANSII Color codes are added to each Monkey | Candy Challenge:Print monkeys horizontally versus vertically. | . &quot;&quot;&quot; * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series, featuring Monkey Jumpers Poem &quot;&quot;&quot; import time # used for delay from IPython.display import clear_output # jupyter specific clear def main(): # ANSI Color Codes Red = &quot; u001b[31m&quot; Green = &quot; u001b[32m&quot; Yellow = &quot; u001b[33m&quot; Blue = &quot; u001b[34m&quot; Magenta = &quot; u001b[35m&quot; &quot;&quot;&quot; 2D array data assignment &quot;&quot;&quot; monkeys = [ [ Red, &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, # [0][0] eyes &quot; _⏄_/ &quot;, # [0][1] chin &quot; --0-- &quot;, # [0][2] body &quot; ⎛ ⎞ &quot; # [0][3] legs ], [ Green, &quot; ʕ༼ ◕_◕ ༽ʔ &quot;, # [1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; &quot; ], [ Yellow, &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, # [2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; &quot; ], [ Blue, &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, # [3][0] &quot; ⍾ &quot;, &quot; ==3== &quot;, &quot; &quot; ], [ Magenta, &quot; (◕‿◕✿) &quot;, # [4][0] &quot; _⍾_/ &quot;, # [4][1] &quot; &quot;, # [4][2] &quot; &quot; # [4][3] ] ] &quot;&quot;&quot; 2D array program logic &quot;&quot;&quot; # cycles through 2D array backwards for i in range(len(monkeys), -1, -1): clear_output(wait=True) print(&quot;Nursery Rhyme&quot;) # identification message # this print statement shows current count of Monkeys # concatenation (+) of the loop variable and string to form a countdown message print(str(i) + &quot; little monkeys jumping on the bed...&quot;) # cycle through monkeys that are left in poem countdown for row in range(i - 1, -1, -1): # cycles through remaining monkeys in countdown # cycles through monkey part by part for col in range(len(monkeys[row])): # prints specific part of the monkey from the 2D cell print(monkeys[row][col] + &quot; &quot;) # this new line gives separation between stanza of poem print(&quot; u001b[0m&quot;) # reset color time.sleep(2) # out of all the loops, prints finishing messages clear_output(wait=True) print(&quot;No more monkeys jumping on the bed&quot;) print(&quot;0000000000000000000000000000000000&quot;) print(&quot; THE END &quot;) if __name__ == &quot;__main__&quot;: main() . No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END . Animation, the Energetic versus Lazy Programmer methods . Animation is done like the old Disney films, lots of little images put togehter. In these examples we eliminate using a 2D array, but simulate int with a sequence of print statements. . This 1st sequence is a lot of lines of code. | The 2nd takes the lazy programmer method to do the same. | Candy challenge:Make you own ASCII art animation. | . &quot;&quot;&quot; * Creator: Nighthawk Coding Society Sailing Ship Animation (long method) &quot;&quot;&quot; import time # used for delay from IPython.display import clear_output # jupyter specific clear # ANSI Color Codes Color34 = &quot; u001b[34m&quot; Color37 = &quot; u001b[37m&quot; # As you can see, its not very optimal def ship1(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) def ship2(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship3(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship4(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship5(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) def ship6(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship7(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship8(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) def ship9(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship10(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship11(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) def ship12(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship13(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship14(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship15(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) def ship16(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship17(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) def ship18(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ u001b[37m&quot;) def ship19(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) def ship20(): print(&quot; | &quot;) print(&quot; |/ &quot;) print(&quot; __ |__/ &quot;) print(&quot; ____/ &quot;) print(&quot; u001b[34m -- u001b[37m&quot;) clear_output(wait=True) time.sleep(.1) ship1() time.sleep(.5) clear_output(wait=True) ship2() time.sleep(.5) clear_output(wait=True) ship3() time.sleep(.5) clear_output(wait=True) ship4() time.sleep(.5) clear_output(wait=True) ship5() time.sleep(.5) clear_output(wait=True) ship6() time.sleep(.5) clear_output(wait=True) ship7() time.sleep(.5) clear_output(wait=True) ship8() time.sleep(.5) clear_output(wait=True) ship9() time.sleep(.5) clear_output(wait=True) ship10() time.sleep(.5) clear_output(wait=True) ship11() time.sleep(.5) clear_output(wait=True) ship12() time.sleep(.5) clear_output(wait=True) ship13() time.sleep(.5) clear_output(wait=True) ship14() time.sleep(.5) clear_output(wait=True) ship15() time.sleep(.5) clear_output(wait=True) ship16() time.sleep(.5) clear_output(wait=True) ship17() time.sleep(.5) clear_output(wait=True) ship18() time.sleep(.5) clear_output(wait=True) ship19() time.sleep(.5) clear_output(wait=True) ship20() time.sleep(.5) . | |/ __ |__/ ____/ -- . &quot;&quot;&quot; * Creator: Nighthawk Coding Society Sailing Ship Animation (programatic method) &quot;&quot;&quot; import time # used for delay from IPython.display import clear_output # jupyter specific clear # ANSI Color Codes OCEAN_COLOR = u&quot; u001B[34m u001B[2D&quot; SHIP_COLOR = u&quot; u001B[35m u001B[2D&quot; RESET_COLOR = u&quot; u001B[0m u001B[2D&quot; def ship_print(position): # print ship with colors and leading spaces according to position clear_output(wait=True) print(RESET_COLOR) sp = &quot; &quot; * position print(sp + &quot; | &quot;) print(sp + &quot; |/ &quot;) print(SHIP_COLOR, end=&quot;&quot;) print(sp + &quot; __ |__/ &quot;) print(sp + &quot; ____/ &quot;) print(OCEAN_COLOR + &quot;--&quot;*32 + RESET_COLOR) def ship(): # ship function, loop/controller for animation speed and times # loop control variables start = 0 # start at zero distance = 60 # how many times to repeat step = 2 # count by 2 # loop purpose is to animate ship sailing for position in range(start, distance, step): ship_print(position) # call to function with parameter time.sleep(.2) ship() # activate/call ship function . | |/ __ |__/ ____/ - . import time from IPython.display import clear_output PLANE_COLOR = u&quot; u001B[36m&quot; RESET_COLOR = u&quot; u001B[0m&quot; def printPlane(height): clear_output(wait=True) print(RESET_COLOR) sp = &quot; &quot; * (40 - height) print(sp + PLANE_COLOR + r&quot;[=====&gt;&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot;[ ( _____&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot; __ ,-&#39;// `--._&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot; [_/~||,--. @_ ___&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot; [_) |||()()() ~[|||&gt;&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot; [_ _||`--&#39; //&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot; / /`-. ___,--&#39;==(-&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot;[ (&quot; + RESET_COLOR) print(sp + PLANE_COLOR + r&quot;[=====&gt;&quot; + RESET_COLOR) def fly(): start = 40 distance = 0 step = -1 direction = 1 for position in range(start, distance, step): printPlane(position) time.sleep(.05) if position == distance + 1: direction = -1 elif position == start: direction = 1 position += step * direction fly() . [=====&gt; [ ( _____ __ ,-&#39;// `--._ [_/~||,--. @_ ___ [_) |||()()() ~[|||&gt; [_ _||`--&#39; // / /`-. ___,--&#39;==(- [ ( [=====&gt; .",
            "url": "https://kcabralomana.github.io/Fastpages/1.d/2.b/3.b/c3.1/2023/05/17/2023-2d-iteration.html",
            "relUrl": "/1.d/2.b/3.b/c3.1/2023/05/17/2023-2d-iteration.html",
            "date": " • May 17, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Final Blog Post for N@M Tri 3",
            "content": "Project: Ramen KJ . We made a Geoguesser inspired project. Geoguesser is an online geography game where players guess the location of a place based on Google Maps Street View images. By analyzing these images, players make educated guesses to earn points. The game offers various maps and themes, including landmarks and remote areas. Geoguesser enhances players’ geography knowledge, observational skills, and cultural familiarity. We emulated this game, but with a focus on our neighborhood 4s Ranch. . . Other Projects . . We viewed a different project where you were able to play certain cars and see the specifications of the car. It was a game like nitrotype where players would pick cs terms that matched the definition. The player would beable to boost if they got the answer correct or slow down if they get it wrong. They had cool features like a search tool to search for cars that users are interested in. they also had a review function where you could review on certain cars and the specifications of the car. . Art projects . . . After presenting I walked around the other projects and found my way into the photography room. I saw some really nice photos and found this one really cool. I really liked the contrast the ground creates with the crack spanning across. . Overall thoughts/Reflection . I really enjoyed Night at the Muesuem because we got to see all of our peers hard work and the excitement of being able to showcase our work. I think that its a great way to close out the year and show how much we have learned since we first stepped foot into AP CSP. It provided a unique opportunity to witness the culmination of our hard work and dedication. It allowed us to demonstrate our knowledge and skills while celebrating our achievements. We had a lot of fun and left the event feeling accomplished and eager to continue learning and creating in the future. In conclusion, Night at the Museum was an exceptional event that provided us with the opportunity to proudly present our Geoguesser-inspired project to our peers and teachers. It was a moment of celebration, not only for the successful completion of our endeavor but also for the knowledge and skills we acquired throughout the year. We left the event with a sense of accomplishment and an eagerness to continue exploring and creating meaningful projects in the future. . I remember from when I first entered this class I had no experience with code and how code works. I have grown and now know more than I ever thought I would learn. This class will always be special because we got the opportunity to go past the college board curriculum and learn more advanced level coding. I will never forget the frustration from all of the Sunday nights spent completing the hacks not know if I was fufilling the requirements. But I will also never forget the work that I have completed in this class especially the feeling when you finally get a code segment to work correctly. Although I will not be taking CSA next year I hope to take another coding class in the future or higher education. I hope to attend a 4 year and go into the medical field. Overall this year has been challenging yet fun, it was a great experience and helped me learn some lessons that i will take into my future in higher education .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2023/05/15/n@m3.html",
            "relUrl": "/markdown/final/2023/05/15/n@m3.html",
            "date": " • May 15, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "JavaScript Tutorial",
            "content": "JavaScript and Jupyter references . JavaScript is the most important language you need to learn as a frontend developer. Jupyter Notebooks is a convenient way to learn the language without the overhead of creating a full Website. Jupyter Notebooks had ChatGPT plugins to assist with design and troubleshooting problems. This Notebook has colors on HTML pages that were designed with a dark mode background. . JavaScript / Jupyter General References . W3Schools JS Reference - ChatGPT AI assistant for Chrome/Jupyter | Theme setup for Jupyter Article. Or do these commands from shell... Install pip: pip install jupyterthemes | Revert to original theme: jt -r | List themes: jt -l | Install with Theme, Name, Logo: jt -t onedork -T -N -kl | . | Chrome Dev Tools | . | Coding with jQuery . Jupyter Notebook GitHub, wget: https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2022-09-19-PBL-javascript_tutorial.ipynb | Markdown Fetch example in GitHub project for APCSP | HTML Static example in GitHub project for flask_portfolio | . | . output using HTML and CSS . Multiple cells are used to setup HTML in this lesson. Many of the JavaScript cells will use the output tag(s) to write into the HTML that has been setup. . %%html is used to setup HTML code block | &quot;style&quot; tag enables visuals customization | &quot;div&quot; tag is setup to receive data | . %%html &lt;html&gt; &lt;head&gt; &lt;style&gt; #output { background-color: #353b45; padding: 10px; border: 3px solid #ccc; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;output&quot;&gt; Hello! &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . . Hello! . output explored . There are several ways to ouput the classic introduction message: &quot;Hello, World!&quot; . Before you go further, open Console on your Browser. JavaScript developer leaves Console open all the time!!! | The function console.log() outputs to Console, this is often used for inspection or debugging. | &quot;Hello, World&quot; is a String literal. This is the referred to as Static text, as it does not change. Developer call this a hard coded string. | &quot;Hello, World&quot; literal is a parameter to console.log(), element.txt() and alert(). | The element.txt function is part of Jupyter Notebook %%js magic. This is convenient for Notebook and testing. | The alert command outputs the parameter to a dialog box, so you can see it in this Jupyter notebook. The alert commands are shown, but are commented out as the stop run all execution of the notebook. | Note, in a Web Application Debugging: An alert is often used for less savy Developers. Console is used by more savy developers; console often requires setting up a lot of outputs. Source level debugging is the most powerful solution for debugging and does not require alert or console commands. | . %%js // required to allow cell to be JavaScript enabled console.log(&quot;JavaScript/Jupyter Output Intro&quot;); // Browser Console output; debugging or tracing console.log(&quot;Hello, World!&quot;); console.log(&quot;Hello, World Again!&quot;); // Document Object Model (DOM) output; output to HTML, CSS which is standard for a Web Page // &lt;mark&gt;select element method&lt;/mark&gt;: DOM native JavaScript get, document.getElementByID document.getElementById(&quot;output&quot;).textContent = &quot;Hello, World!&quot;; // &lt;mark&gt;jQuery CSS-style method&lt;/mark&gt;: Tag for DOM selector, $(&#39;#output&#39;) $(&#39;#output&#39;).append(&#39;&lt;br&gt;&lt;b&gt;Hello World Again!&#39;); // br is break or new line, b is bold // Jupyter built in magic element for testing and convenience of development element.text(&quot;Hello, World!&quot;); // element is output option as part of %%js magic element.append(&#39;&lt;br&gt;&lt;b&gt;Hello World Again!&#39;); //alert(&quot;Hello, World!&quot;); . multiple outputs using one variable . This second example is a new sequence of code, two or more lines of code forms a sequence. This example defines a variable, thank goodness!!! In the previous example we were typing the string &quot;Hello, World&quot; over and over. Observe with the variable msg=&quot;Hello, World!&quot;; we type the string once and now use msg over and over. . The variable &quot;var msg =&quot; is used to capture the data | The console.log(msg) outputs to console, be sure to Inspect it! | The element.text() is part of Jupyter Notebooks and displays as output blow the code on this page. Until we build up some more interesting data for Web Site, we will not use be using the Python HTML, CSS technique. | The alert(msg) works the same as previous, but as the other commands uses msg as parameter. | . %%js console.log(&quot;Variable Definition&quot;); var msg = &quot;Hello, World!&quot;; // Use msg to output code to Console and Jupyter Notebook console.log(msg); //right click browser select Inspect, then select Console to view element.text(msg); //alert(msg); . output showing use of a function . This example passes the defined variable &quot;msg&quot; to the newly defined &quot;function logIt(output)&quot;. . There are multiple steps in this code.. The &quot;definition of the function&quot;: &quot;function logIt(output) {}&quot; and everything between curly braces is the definitions of the function. Passing a parameter is required when you call this function. | The &quot;call to the function:&quot;logIt(msg)&quot; is the call to the function, this actually runs the function. The variable &quot;msg&quot; is used a parameter when calling the logIt function. | . | Showing reuse of function... There are two calls to the logIt function | This is called Prodedural Abstraction, a term that means reusing the same code | . | . %%js console.log(&quot;Function Definition&quot;); /* Function: logIt * Parameter: output * Description: The parameter is &quot;output&quot; to console and jupyter page */ function logIt(output) { console.log(output); element.append(output + &quot;&lt;br&gt;&quot;); //alert(output); } // First sequence calling logIt function var msg = &quot;Hello, World!&quot;; logIt(msg); // Second sequence calling logIt function var msg = &quot;Hello, &lt;b&gt;Students&lt;/b&gt;!&quot; // replaces content of variable var classOf = &quot;Welcome CS class of 2023-2024.&quot; logIt(msg + &quot; &quot; + classOf); // concatenation of strings . output showing Loosely typed data . JavaScript is a loosely typed language, meaning you don&#39;t have to specify what type of information will be stored in a variable in advance. . To define a variable you prefix the name with var or const. The variable type is determined by JavaScript at runtime. | Python and many interpretive languages are loosely typed like JavaScript. This is considered programmer friendly. | Java which is a compiled language is strongly typed, thus you will see terms like String, Integer, Double, and Object in the source code. | In JavaScript, the typeof keyword returns the type of the variable. Become familiar with type as it is valuable in conversation and knowing type help you understand how to modify data. Each variable type will have built in methods to manage content within the data type. | . %%js console.log(&quot;Examine Data Types&quot;); // Function to add typeof to output function getType(output) { return typeof output + &quot;: &quot; + output; } // Function defintion function logIt(output) { console.log(getType(output)); // logs string console.info(output); // logs object element.append(getType(output) + &quot;&lt;br&gt;&quot;); // adds to Jupyter output //alert(getType(output)); } // Common Types element.append(&quot;Common Types &lt;br&gt;&quot;); logIt(&quot;Mr M&quot;); // String logIt(1997); // Number logIt(true); // Boolean element.append(&quot;&lt;br&gt;&quot;); // Object Type, this definition is often called a array or list element.append(&quot;Object Type, array &lt;br&gt;&quot;); var scores = [ 90, 80, 100 ]; logIt(scores); element.append(&quot;&lt;br&gt;&quot;); // Complex Object, this definition is often called hash, map, hashmap, or dictionary element.append(&quot;Object Type, hash or dictionary &lt;br&gt;&quot;); var person = { // key:value pairs seperated by comma &quot;name&quot;: &quot;Mr M&quot;, &quot;role&quot;: &quot;Teacher&quot; }; logIt(person); logIt(JSON.stringify(person)); //method used to convert this object into readable format . Build a Person object and JSON . JavaScript and other languages have special properties and syntax to store and represent data. In fact, a class in JavaScript is a special function. . Definition of class allows for a collection of data, the &quot;class Person&quot; allows programmer to retain name, github id, and class of a Person. | Instance of a class, the &quot;const teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977)&quot; makes an object &quot;teacher&quot; which is an object representation of &quot;class Person&quot;. | Setting and Getting properties After creating teacher and student objects, observe that properties can be changed/muted or extracted/accessed. | . %%html &lt;!-- load jQuery and tablesorter scripts --&gt; &lt;html&gt; &lt;head&gt; &lt;!-- load jQuery and tablesorter scripts --&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js&quot;&gt;&lt;/script&gt; &lt;style&gt; /* CSS-style selector maps to table id or other id&#39;s in HTML */ #jsonTable, #flaskTable { background-color: #353b45; padding: 10px; border: 3px solid #ccc; box-shadow: 0.8em 0.4em 0.4em grey; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- Table for writing and extracting jsonText --&gt; &lt;table id=&quot;jsonTable&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Classroom JSON Data&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td id=&quot;jsonText&quot;&gt;{&quot;classroom&quot;:[{&quot;type&quot;:&quot;object&quot;,&quot;name&quot;:&quot;sample&quot;,&quot;ghID&quot;:&quot;sample&quot;,&quot;classOf&quot;:2000,&quot;role&quot;:&quot;sample&quot;}]}&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; . . Classroom JSON Data . {&quot;classroom&quot;:[{&quot;type&quot;:&quot;object&quot;,&quot;name&quot;:&quot;sample&quot;,&quot;ghID&quot;:&quot;sample&quot;,&quot;classOf&quot;:2000,&quot;role&quot;:&quot;sample&quot;}]} | . . %%js console.log(&quot;Person objects&quot;); /* class: Person * Description: A collection of Person data */ class Person { /* method: constructor * parameters: name, ghID - GitHub ID, classOf - Graduation Class * description: returns object when &quot;new Person()&quot; is called with matching parameters * assignment: this.name, this.ghID, ... are properties retained in the returned object * default: role uses a default property, it is set to &quot;Student&quot; */ constructor(name, ghID, classOf, role=&quot;Student&quot;) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = role; } /* method: setter * parameters: role - role in classroom * description: this.role is updated from default value to value contained in role parameter */ setRole(role) { this.role = role; } /* method: getter * description: turns properties of object into JSON object * return value: JSON object */ getJSON() { const obj = {type: typeof this, name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } /* method: logIT * description: &quot;this&quot; Person object is logged to console */ logIt() { //Person Object console.info(this); //Log to Jupter element.append(&quot;Person object in JSON &lt;br&gt;&quot;); element.append(this.getJSON() + &quot;&lt;br&gt;&quot;); //alert(this.getJSON()); } } // make a new Person Object const teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript // update role to Teacher teacher.setRole(&quot;Teacher&quot;); // set the role teacher.logIt(); // log to console // make a new Person Object const student = new Person(&quot;Jane Doe&quot;, &quot;jane&quot;, 2007); // object type is easy to work with in JavaScript student.logIt(); // log to console . Build a Classroom Array/List of Persons and JSON . Many key elements are shown again. New elements include... . Building an Array, &quot;var students&quot; is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . %%js console.log(&quot;Classroom object&quot;); /* class: Person * Description: A collection of Person data */ class Person { /* method: constructor * parameters: name, ghID - GitHub ID, classOf - Graduation Class * description: returns object when &quot;new Person()&quot; is called with matching parameters * assignment: this.name, this.ghID, ... are properties retained in the returned object * default: this.role is a default property retained in object, it is set to &quot;Student&quot; */ constructor(name, ghID, classOf, role=&quot;Student&quot;) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = role; } /* method: setter * parameters: role - role in classroom * description: this.role is updated from default value to value contained in role parameter */ setRole(role) { this.role = role; } /* method: getter * description: turns properties of object into JSON object * return value: JSON object */ getJSON() { const obj = {type: typeof this, name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } /* method: logIT * description: &quot;this&quot; Person object is logged to console */ logIt() { //Person Object console.info(this); //Log to Jupter element.append(&quot;Person json &lt;br&gt;&quot;); element.append(this.getJSON() + &quot;&lt;br&gt;&quot;); //alert(this.getJSON()); } } /* class: Classroom * Description: A collection of Person objects */ class Classroom { /* method: constructor * parameters: teacher - a Person object, students - an array of Person objects * description: returns object when &quot;new Classroom()&quot; is called containing properties and methods of a Classroom * assignment: this.classroom, this.teacher, ... are properties retained in the returned object */ constructor(teacher, students) { /* spread: this.classroom contains Teacher object and all Student objects * map: this.json contains of map of all persons to JSON */ this.teacher = teacher; this.students = students; this.classroom = [teacher, ...students]; // ... spread option this.json = &#39;{&quot;classroom&quot;:[&#39; + this.classroom.map(person =&gt; person.getJSON()) + &#39;]}&#39;; } /* method: logIT * description: &quot;this&quot; Classroom object is logged to console */ logIt() { //Classroom object console.log(this); //Classroom json element.append(&quot;Classroom object in JSON&lt;br&gt;&quot;); element.append(this.json + &quot;&lt;br&gt;&quot;); //alert(this.json); } } /* function: constructCompSciClassroom * Description: Create data for Classroom and Person objects * Returns: A Classroom Object */ function constructCompSciClassroom() { // define a Teacher object const teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977, &quot;Teacher&quot;); // optional 4th parameter // define a student Array of Person objects const students = [ new Person(&quot;Anthony&quot;, &quot;tonyhieu&quot;, 2022), new Person(&quot;Bria&quot;, &quot;B-G101&quot;, 2023), new Person(&quot;Allie&quot;, &quot;xiaoa0&quot;, 2023), new Person(&quot;Tigran&quot;, &quot;Tigran7&quot;, 2023), new Person(&quot;Rebecca&quot;, &quot;Rebecca-123&quot;, 2023), new Person(&quot;Vidhi&quot;, &quot;VidhiKulkarni&quot;, 2024) ]; // make a CompSci classroom from formerly defined teacher and student objects return new Classroom(teacher, students); // returns object } // assigns &quot;compsci&quot; to the object returned by &quot;constructCompSciClassroom()&quot; function const compsci = constructCompSciClassroom(); // output of Objects and JSON in CompSci classroom compsci.logIt(); // enable sharing of data across jupyter cells $(&#39;#jsonText&#39;).text(compsci.json); // posts/embeds/writes compsci.json to HTML DOM element called jsonText . for loop to generate Table Rows in HTML output . This code extracts JSON text from HTML, that was placed in DOM in an earlier JavaScript cell, then it parses text into a JavaScript object. In addition, there is a for loop that iterates over the extracted object generating formated rows and columns in an HTML table. . Table generation is broken into parts... table data is obtained from a classroom array inside of the extracted object. | the JavaScript for loop allows the construction of a new row of data for each Person hash object inside of the the Array. | in the loop a table row &lt;tr&gt; ... &lt;/tr&gt; is created for each Hash object in the Array. | in the loop table data, a table column, &lt;td&gt; ... &lt;/td&gt; is created for name, ghID, classOf, and role within the Hash object. | . | . %%js console.log(&quot;Classroom Web Page&quot;); // extract JSON text from HTML page const jsonText = document.getElementById(&quot;jsonText&quot;).innerHTML; console.log(jsonText); element.append(&quot;Raw jsonText element embedded in HTML&lt;br&gt;&quot;); element.append( jsonText + &quot;&lt;br&gt;&quot;); // convert JSON text to Object const classroom = JSON.parse(jsonText).classroom; console.log(classroom); // from classroom object creates rows and columns in HTML table element.append(&quot;&lt;br&gt;Formatted data sample from jsonText &lt;br&gt;&quot;); for (var row of classroom) { element.append(row.ghID + &quot; &quot; + row.name + &#39;&lt;br&gt;&#39;); // tr for each row, a new line $(&#39;#classroom&#39;).append(&#39;&lt;tr&gt;&#39;) // td for each column of data $(&#39;#classroom&#39;).append(&#39;&lt;td&gt;&#39; + row.name + &#39;&lt;/td&gt;&#39;) $(&#39;#classroom&#39;).append(&#39;&lt;td&gt;&#39; + row.ghID + &#39;&lt;/td&gt;&#39;) $(&#39;#classroom&#39;).append(&#39;&lt;td&gt;&#39; + row.classOf + &#39;&lt;/td&gt;&#39;) $(&#39;#classroom&#39;).append(&#39;&lt;td&gt;&#39; + row.role + &#39;&lt;/td&gt;&#39;) // tr to end row $(&#39;#classroom&#39;).append(&#39;&lt;/tr&gt;&#39;); } . %%html &lt;head&gt; &lt;!-- load jQuery and DataTables syle and scripts --&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css&quot;&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;table id=&quot;flaskTable&quot; class=&quot;table&quot; style=&quot;width:100%&quot;&gt; &lt;thead id=&quot;flaskHead&quot;&gt; &lt;tr&gt; &lt;th&gt;ID&lt;/th&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;DOB&lt;/th&gt; &lt;th&gt;Age&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;flaskBody&quot;&gt;&lt;/tbody&gt; &lt;/table&gt; &lt;script&gt; $(document).ready(function() { fetch(&#39;https://flask.nighthawkcodingsociety.com/api/users/&#39;, { mode: &#39;cors&#39; }) .then(response =&gt; { if (!response.ok) { throw new Error(&#39;API response failed&#39;); } return response.json(); }) .then(data =&gt; { for (const row of data) { // BUG warning/resolution - DataTable requires row to be single append $(&#39;#flaskBody&#39;).append(&#39;&lt;tr&gt;&lt;td&gt;&#39; + row.id + &#39;&lt;/td&gt;&lt;td&gt;&#39; + row.name + &#39;&lt;/td&gt;&lt;td&gt;&#39; + row.dob + &#39;&lt;/td&gt;&lt;td&gt;&#39; + row.age + &#39;&lt;/td&gt;&lt;/tr&gt;&#39;); } // BUG warning - Jupyter does not show Datatable controls, works on deployed GitHub pages $(&quot;#flaskTable&quot;).DataTable(); }) .catch(error =&gt; { console.error(&#39;Error:&#39;, error); }); }); &lt;/script&gt; . . ID Name DOB Age . Hacks . One key to these hacks is to build confidence with me going into final grade, I would like to see each student adapt this frontend work in their final project. Second key is the finished work can serve as review for the course, notes for the future in relationship to frontend. . Adapt this tutorial to your own work | Consider what you need to work on to be stronger developer | Show something creative or unique, no cloning | Be ready to talk to Teacher for 5 to 10 minutes. Individually!!! | Show in Jupyter Notebook during discussion, show Theme and ChatGPT | Have a runtime final in GithHub Pages (or Fastpage) | . %%html &lt;html&gt; &lt;head&gt; &lt;title&gt;Bubble Sort&lt;/title&gt; &lt;script&gt; function bubbleSort() { var numbers = [4, 2, 9, 3]; // Array to be sorted var output = document.getElementById(&quot;output&quot;); var n = numbers.length; for (var i = 0; i &lt; n - 1; i++) { for (var j = 0; j &lt; n - i - 1; j++) { if (numbers[j] &gt; numbers[j + 1]) { var temp = numbers[j]; numbers[j] = numbers[j + 1]; numbers[j + 1] = temp; } } } output.innerHTML = &quot;Sorted List: &quot; + numbers.join(&quot;, &quot;); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;Bubble Sort&lt;/h2&gt; &lt;button onclick=&quot;bubbleSorst()&quot;&gt;Sort&lt;/button&gt;&lt;br&gt;&lt;br&gt; &lt;div id=&quot;output&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . Bubble Sort #2 . %%html &lt;html&gt; &lt;head&gt; &lt;title&gt;Bubble Sort #2&lt;/title&gt; &lt;script&gt; function bubbleSort() { var numbers = document.getElementById(&quot;numbers2&quot;).value.split(&quot;,&quot;); // assigns &#39;numbers&#39; to inputs var output = document.getElementById(&quot;output2&quot;); // assigns &#39;output&#39; to sorting steps and sorted list // convert strings to numbers numbers = numbers.map(Number); var n = numbers.length; // assigns &#39;n&#39; to number of elements in array // actual bubble sort process for (var i = 0; i &lt; n - 1; i++) { // each pass thru list for (var j = 0; j &lt; n - i - 1; j++) { // compares 2 adjacent elements if (numbers[j] &gt; numbers[j + 1]) { // swap elements if current &gt; next var temp = numbers[j]; // use temp variable to &quot;remove&quot; number then place back in numbers[j] = numbers[j + 1]; numbers[j + 1] = temp; } } // prints the current step after a pass output.innerHTML += &quot;Step &quot; + (i + 1) + &quot;: &quot; + numbers.join(&quot;, &quot;) + &quot;&lt;br&gt;&quot;; } // prints sorted list output.innerHTML += &quot;Sorted List: &quot; + numbers.join(&quot;, &quot;) + &quot;&lt;br&gt;&quot;; } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;Bubble Sort #2&lt;/h2&gt; &lt;label for=&quot;numbers2&quot;&gt;Enter numbers (separated by commas):&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;text&quot; id=&quot;numbers2&quot; name=&quot;numbers2&quot;&gt;&lt;br&gt; &lt;button onclick=&quot;bubbleSort()&quot;&gt;Sort&lt;/button&gt;&lt;br&gt;&lt;br&gt; &lt;!-- calls function --&gt; &lt;div id=&quot;output2&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . Bubble Sort #2 . Bubble Sort #2 . Enter numbers (separated by commas): Sort . APIs . %%html &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css&quot;&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;table id=&quot;table&quot; class=&quot;table&quot;&gt; &lt;thead id=&quot;head&quot;&gt; &lt;tr&gt; &lt;th&gt;ID&lt;/th&gt; &lt;th&gt;Breed&lt;/th&gt; &lt;th&gt;Other Names&lt;/th&gt; &lt;th&gt;Origin&lt;/th&gt; &lt;th&gt;Image&lt;/th&gt; &lt;th&gt;Info&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;body&quot;&gt;&lt;/tbody&gt; &lt;/table&gt; &lt;script&gt; const settings = { async: true, crossDomain: true, url: &#39;https://dog-breeds2.p.rapidapi.com/dog_breeds&#39;, method: &#39;GET&#39;, headers: { &#39;X-RapidAPI-Key&#39;: &#39;701410bf7emshbaf1fa99b2e4e5bp1c0ee6jsn8f8f51602e3f&#39;, &#39;X-RapidAPI-Host&#39;: &#39;dog-breeds2.p.rapidapi.com&#39; } }; $.ajax(settings).done(function (response) { console.log(response) for (const row of response) { $(&#39;#body&#39;).append(&#39;&lt;tr&gt;&lt;td&gt;&#39; + row.id + &#39;&lt;/td&gt;&lt;td&gt;&#39; + row.breed + &#39;&lt;/td&gt;&lt;td&gt;&#39; + row.meta.other_names + &#39;&lt;/td&gt;&lt;td&gt;&#39; + row.origin + &#39;&lt;/td&gt;&lt;td&gt;&#39; + &#39;&lt;img src=&quot;&#39; + row.img +&#39;&quot;&gt;&#39; + &#39;&lt;/td&gt;&lt;td&gt;&#39; + &#39;&lt;a href=&quot;&#39; + row.url + &#39;&quot;&gt;&#39; + row.url + &#39;&lt;/a&gt;&#39; + &#39;&lt;/td&gt;&lt;/tr&gt;&#39;); } $(&quot;#table&quot;).DataTable(); }); &lt;/script&gt; . . ID Breed Other Names Origin Image Info .",
            "url": "https://kcabralomana.github.io/Fastpages/techtalk/javascript",
            "relUrl": "/techtalk/javascript",
            "date": " • May 11, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "2020 MCQ",
            "content": "Reflection . . I scored a 66/67, 98% . Q11 . . My answer: (B) . Correct answer: (A) . This option is incorrect. TThe binary RGB triplet for light yellow is (11111111, 11111111, 11100000). I just need to work on my identification of binary numbers . Conclusion . Overall I am feeling ready for the MCQ for the AP exam. One thing I am worried about is the timing of the test. I need to fix my pacing for each question as I see myself taking longer on some questions. I also need to double check my answers since I see myself misinterpreting some questions. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/05/01/mcq2020.html",
            "relUrl": "/markdown/2023/05/01/mcq2020.html",
            "date": " • May 1, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Data Analysis Hacks",
            "content": "Hacks . make your own data using your brian, google or chatgpt, should look different than mine. | modify my code or write your own | output your data other than a bar graph. | write an 850+ word essay on how pandas, python or irl, affected your life. If AI score below 85%, then -1 grading point | answer the questions below, the more explained the better. | Questions . What are the two primary data structures in pandas and how do they differ? Series is one dimensional and dataframe is 2 dimensional | How do you read a CSV file into a pandas DataFrame? Pandas read_csv() function to read a CSV file. | How do you select a single column from a pandas DataFrame? df[&#39;column-name&#39;] | How do you filter rows in a pandas DataFrame based on a condition? df[df[&#39;column-name&#39;]=value] | How do you group rows in a pandas DataFrame by a particular column? df.groupby(&#39;name&#39;)[&#39;name&#39;] | How do you aggregate data in a pandas DataFrame using functions like sum and mean? df.groupby[&#39;column-name&#39;].mean() | How do you handle missing values in a pandas DataFrame? df.dropna() | How do you merge two pandas DataFrames together? pd.merge(left=dfname1, right=dfname2, left_on=&#39;column-name1&#39;, right_on=&#39;column-name2) | How do you export a pandas DataFrame to a CSV file? df.to_csv(&#39;file_name.csv&#39;) | What is the difference between a Series and a DataFrame in Pandas? Series is one dimensional and dataframe is 2 dimensional | import pandas as pd # read the CSV file df = pd.read_csv(&#39;datasets/books.csv&#39;) df = df.drop(columns=[&#39;bookID&#39;, &#39;isbn&#39;, &#39;isbn13&#39;, &#39;language_code&#39;, &#39;publication_date&#39;, &#39;publisher&#39;]) print(df.head()) . title 0 Harry Potter and the Half-Blood Prince (Harry ... 1 Harry Potter and the Order of the Phoenix (Har... 2 Harry Potter and the Chamber of Secrets (Harry... 3 Harry Potter and the Prisoner of Azkaban (Harr... 4 Harry Potter Boxed Set Books 1-5 (Harry Potte... authors average_rating num_pages ratings_count 0 J.K. Rowling/Mary GrandPré 4.57 652 2095690 1 J.K. Rowling/Mary GrandPré 4.49 870 2153167 2 J.K. Rowling 4.42 352 6333 3 J.K. Rowling/Mary GrandPré 4.56 435 2339585 4 J.K. Rowling/Mary GrandPré 4.78 2690 41428 text_reviews_count 0 27591 1 29221 2 244 3 36325 4 164 . import matplotlib.pyplot as plt rating_groups = [&#39;0-1&#39;, &#39;1-2&#39;, &#39;2-3&#39;, &#39;3-4&#39;, &#39;4-5&#39;] rating_counts = pd.cut(df[&#39;average_rating&#39;], bins=[0, 1, 2, 3, 4, df[&#39;average_rating&#39;].max()], labels=rating_groups, include_lowest=True).value_counts() plt.bar(rating_counts.index, rating_counts.values) plt.title(&#39;Number of books in each rating group&#39;) plt.xlabel(&#39;Rating group&#39;) plt.ylabel(&#39;Number of books&#39;) plt.show() # create a scatter plot of number of ratings vs. rating plt.scatter(df[&#39;ratings_count&#39;], df[&#39;average_rating&#39;]) plt.title(&#39;Ratings count VS Average rating&#39;) plt.xlabel(&#39;Ratings count&#39;) plt.ylabel(&#39;Average rating&#39;) plt.show() . Data Analysis/Predictive Analysis Hacks . How can Numpy and Pandas be used to preprocess data for predictive analysis? Pandas is a tool that is commonly utilized for the purpose of analyzing data, whereas Numpy is often preferred when dealing with numerical data due to its ability to perform diverse mathematical operations. Pandas offers a wider range of features to handle a greater variety of data types. Both Pandas and Numpy can be used to cleanse, standardize, and transform data to prepare it for predictive analysis. | . | What machine learning algorithms can be used for predictive analysis, and how do they differ? Linear regression is utilized to forecast continuous outcomes based on the linear association between the independent and dependent variables. Decision trees serve as a modeling tool for decisions and their probable outcomes. Random forests are particularly effective when handling large amounts of data. Neural networks are designed to mimic the workings of the human brain in terms of decision-making processes. Support vector machines are employed to identify the most optimal boundary between various classes within a dataset. | . | Can you discuss some real-world applications of predictive analysis in different industries? There are various scenarios in which predictions may be required, such as predicting the temperature or weather forecast, forecasting which team will emerge victorious in a sports game, predicting whether an individual has a medical condition or not based on an image or scan, determining whether a user will find a video appealing or not, and making predictions about stock market trends. | . | Can you explain the role of feature engineering in predictive analysis, and how it can improve model accuracy? Feature engineering is the process of selecting and manipulating variables in order to create a predictive analysis model. This technique can potentially enhance the accuracy of the model, as it enables the identification of crucial information that may be used to highlight patterns within the data. | . | How can machine learning models be deployed in real-time applications for predictive analysis? Real-time applications, such as TikTok, can utilize machine learning models to suggest videos that align with a user&#39;s interests. For instance, as a user interacts with the app by liking certain videos, a machine learning model can be employed to analyze their preferences and make recommendations based on that data. | . | Can you discuss some limitations of Numpy and Pandas, and when it might be necessary to use other data analysis tools? Pandas tends to utilize more memory compared to Numpy, which is generally more memory-efficient. Pandas exhibits better performance when working with a larger number of rows. However, when dealing with extremely large datasets, alternative tools may need to be considered. Additionally, the syntax of Pandas can be complex at times. Furthermore, Pandas has a steep learning curve, limited documentation, and is not compatible with 3D matrices. | . | How can predictive analysis be used to improve decision-making and optimize business processes? By enabling businesses to make more informed decisions, predictive analysis can facilitate the optimization of various business processes. This can be accomplished by forecasting the most probable outcomes for a business, which can, in turn, aid in the tailoring of customer experiences to increase profits. | . | Numpy Hacks . from skimage import io photo = io.imread(&#39;../images/waldo.jpg&#39;) type(photo) plt.imshow(photo) . &lt;matplotlib.image.AxesImage at 0x7ff4344637f0&gt; . import matplotlib.pyplot as plt plt.imshow(photo) photo.shape . (461, 700, 3) . plt.imshow(photo[210:350, 425:500]) . &lt;matplotlib.image.AxesImage at 0x7ff43431c6a0&gt; . Numpy functions . In the example below, np.arrange creates an array with even numbers between 0 and 10 with a step of 2. The resulting array has values [0, 2, 4, 6, 8]. It is particularly useful when you need to create an array with a sequence of values that have a regular spacing between them. This function can be used to create arrays of integers or floats, and the resulting array can be used for mathematical operations like addition, subtraction, multiplication, and division. It is also used in creating plots, animation, and simulations. . import numpy as np # create an array of even numbers between 0 and 10 (excluding 10) arr = np.arange(0, 10, 2) print(arr) . [0 2 4 6 8] . sin, cos, tan, natural log, and log10 of a 1D array. . array = np.array([1, 2, 3]) # calculate sin sinx_x = np.sin(array) print(sinx_x) # calculate cos cos_x = np.cos(array) print(cos_x) # calculate tan tanx_x = np.tan(array) print(tanx_x) # calculate natural log ln_x = np.log(array) print(ln_x) # calculate log10 log10_x = np.log10(array) print(log10_x) . [0.84147098 0.90929743 0.14112001] [ 0.54030231 -0.41614684 -0.9899925 ] [ 1.55740772 -2.18503986 -0.14254654] [0. 0.69314718 1.09861229] [0. 0.30103 0.47712125] .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/04/30/datahacksanalysis.html",
            "relUrl": "/2023/04/30/datahacksanalysis.html",
            "date": " • Apr 30, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Binarycalculator",
            "content": "Decimal to Binary Calculator . Input a decimal number: Binary : ___ Input a decimal number: Binary : ___ Choose an operation: + - * / Answer : ___ &lt;&gt; Binary Answer : ___",
            "url": "https://kcabralomana.github.io/Fastpages/2023/04/29/binarycalculator.html",
            "relUrl": "/2023/04/29/binarycalculator.html",
            "date": " • Apr 29, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Building Simulation/Interaction using Lists and Iteration - Student Copy",
            "content": "Vocabulary . Iteration - Repitition of a Process | For Loop - FOR LOOP repeats a function for a set number of times; I is the number of times repeated | While Loop - The while loop is used to repeat a section of code an unknown number of times until a specific condition is met | Initialization - What sets the counter variable to a starting value. For example (var i = 0) represents an initial value of 0. | Condition - Allows the computer to know whether or not to keep repeating the loop. | increment/decrement - Modifies the counter variable after each repetition. | Indexing / List Index - The position of an element in a list, starting from 0 | append, remove, pop - Various methods, append adds an element to the end, remove removes at an index, and pop removes the last item. | Elements [in a list] - An item in a list. | Nesting - Having one data type or function inside another data type or function, such as lists or loops. | array - Another name for a list, depends on the language | Key - the unique identifier associated with a value in a dictionary, such as name | Value - the data associated with a key in a dictionary, such as age | Pair - a key-value combination in a dictionary, such as a person&#39;s name + age | Mutable - the ability to be changed or modified | Tuple - an immutable ordered sequence of elements, similar to a list | Insertion - the process of adding a new key-value pair to a dictionary | Deletion - the process of removing a key-value pair from a dictionary | Keys method/keys() - a built-in Python function that returns a list of all keys in a dictionary | Values method/values() - a built-in Python function that returns a list of all values in a dictionary | Items method/items() - a built-in Python function that returns a list of all key-value pairs in a dictionary as tuples | Update method/update() - a built-in Python function that updates a dictionary with key-value pairs from another dictionary or iterable | Clear method/clear() - a built-in Python function that removes all key-value pairs from a dictionary | . Questions: . Give an example of iteration. An example of iteration is binary search, which is a searching algorithim that utilizes iteration to find a specific value. | What is the difference between a for loop and while loop? That is, when would you use a for loop and when would you use a while loop? For loop is when a certain condition needs to be repeated n number of times and a while loop keeps going until a certain condition is met. | In the APCSP AP exam, what number do indexes start with? important to know They start with 1. | Are dictionaries and lists mutable? Yes because the items in the dictionaries and lists are changeable. | Simulations/Interactions . Building a simulation o#r interaction using lists and iteration in VS Code can be accomplished using a few simple steps: . Define your data: First, you need to define the data that your simulation will be working with. This could be a list of numbers, a list of strings, or any other type of data that your simulation will be manipulating. . | Write your simulation code: Once you have defined your data, you can start writing the code for your simulation. This code will typically involve iterating over your list of data, performing some operation on each item in the list, and updating the list accordingly. . | Test your simulation: After you have written your simulation code, it is important to test it to make sure it is working as expected. You can do this by running your code and checking the output to see if it matches what you expect. . | Refine your simulation: Once you have tested your simulation, you may need to refine it based on the results. This could involve tweaking the code to make it more efficient, adding new features, or fixing any bugs that you have discovered. . | Why use simulations? . Simulations can be useful because they can emulate real world situations without needing excessive resources (ex: money), time, or equipment. For example, a simulation of the effectiveness of a new seatbelt or airbag can be performed by simulating car crashes. This would be better than doing it in real life because you wouldn&#39;t want to place people in cars and then crash them for obvious reasons. | However, simulatins do assume things about the real world and can have biases. They can be oversimplified because the real world often has more complications and factors that can affect something. In the case of our car crash simulation, other things can have a big impact, such as the weather and experience of the driver. However, these things can sometimes be held constant in the simulations. | . Questions: . Explain an example of something you could simulate. Weather and air traffic. | Why are simulations useful and important? They are useful and important because they help us predict real life scenarios, even if it may be a little bit inaccurate or bias. | Here&#39;s a simple example of a simulation in Python that uses lists and iteration to calculate the average of a list of numbers: . numbers = [1, 2, 3, 4, 5] # Initialize the sum and count variables sum = 0 count = 0 # Iterate over the list of numbers, adding each number to the sum for number in numbers: sum += number count += 1 # Calculate the average of the list of numbers average = sum / count # Print the average print(&quot;The average of the list is:&quot;, average) . The average of the list is: 3.0 . This code defines a list of numbers, iterates over the list to calculate the sum and count of the numbers, and then calculates the average by dividing the sum by the count. Finally, it prints the average to the console. . Lists . Iteration statements can be used to traverse a list | Knowldege of exisiting algorithms that use iteration can help in constructing new algorithms. Some are: Determining a minimum or maximum value in a list | Computing a sum or average of a list of numbers | . | . What are Lists? . Lists are a sequence of data that can have a finite number of values. | Each sequence is demarcated with an index, starting from 0. This is known as base 0 indexing | In memory, it is stored as a variable name with multiple pointers to each variable stored in a certain order | Lists can also be called arrays | Lists have methods that act upon the list and change them. This moves the pointers within RAM to change the parts of the list. | . Nested Lists . Uses of Nested lists . Placing lists within lists allows you to have arrays of similar data together, and create complexity. . Some uses include: . Creating 2d Arrays | Storing similar, but slightly different categories (sublists) | Create a matrix | . Iteration . Iterative statements are also called while loops, and they repeat themselves over and over until the condition for stopping is met. . In College Board&#39;s Pseudocode, the first is a REPEAT n TIMES loop, where the n represents some number. | . The second type of loop is a REPEAT UNTIL (condition) loop, where the loop will continue to run until a condition is met. . Conceptually, a while loop is very similar to an if conditional, except that a while is continually executed until it&#39;s no longer true and an if is only executed once. . Questions: . Describe a situation where you would need iteration. As mentioned before, a searching algorithim where a user has to perform binary search is a situation where iteration would be utilized. | Describe the difference between a &quot;REPEAT n TIMES&quot; loop VS a &quot;REPEAT UNTIL (condition)&quot; loop. it is important you know this for the AP Exam Repeat N Times is a for loops (repeated a certain number of times) and Repeat Until (condition) is a while loop where it keeps repeating until a condition is met. | Libaries . A software library contains procedures that may be used in creating new programs. | Existing code segments can come from internal or external sources, such as libaries or previously written code. | The use of libaries simplifies the task of creating complex programs. | . APIs . Application program interfaces (APIs) are specifications for how the procedures in a libary behave and can be used as documentation for an API/libary is necessary in understanding the behaviors provided by the API and how to use them. . A file that contains procedures that can be used in a program is considered a libary. . API provides specifications for how procedures in a library behave and can be used. | Many companies use APIs for programmers to interact with their products. | . Questions: . What are some libraries that we&#39;ve learned about? What are their advantages/disadvantages? Some libraries that we learned about is pandas and numpy. Their advantage is allowing us to easily access data analysis features into our code. Their disadvantage is that some libraries are limited. | Dictionaries . What are Dictionaries? . an unordered collection of key-value pairs, where each key is unique and associated with a specific value | known as associative arrays, maps, or hash tables in some programming languages | used to store and retrieve data efficiently, as they allow fast access to values based on their associated keys | useful for a wide range of tasks, such as storing, indexing, and counting | . What are the types of Dictionaries? . Ordered Dictionaries . Iterates over keys and values in the same order that the keys were inserted | If an entry is deleted and reinserted, then it will be moved to the end of the dictionary | Specially designed to keep its items ordered | Useful in situations where the order of insertion is important and when you need to process data in a specific order | If the order of the data is important, an ordered dictionary is the better choice | . How to create an ordered dictionary? . Import OrderedDict from collections | Create an empty ordered dictionary by instantiating OrderedDict without providing arguments to the constructor | Add key-value pairs to the dictionary by providing a key in square brackets ([]) and assigning a value to that key. | Print the ordered dictionary | Iterate over the items in the ordered dictionary | Regular Dictionaries . Mutable; can add, remove, and modify key-value pairs after they have been created | Used to store data values in key:value pairs | Can be iterated over using loops | If order is not important, a regular dictionary may provide better performance | . How to create a regular dictionary? . Create a variable name which will be the name of the dictionary | Assign the variable to an empty set of curly braces {} | Create a dictionary with the dict() OR empty curly brackets | Questions: . Compare and contrast lists and dictionaries. Dictionaries have keys and values and lists do not. | Do dictionary keys need to be unique? Yes. | folklore_album = { &quot;title&quot;: &quot;Folklore&quot;, &quot;artist&quot;: &quot;Taylor Swift&quot;, &quot;year&quot;: 2020, &quot;genre&quot;: [&quot;Alternative/Indie&quot;, &quot;Pop&quot;], &quot;tracks&quot;: { 1: [&quot;the 1&quot;, 7], 2: [&quot;cardigan&quot;, 9], 3: [&quot;the last great american dynasty&quot;, 7], 4: [&quot;exile (ft. Bon Iver)&quot;, 10], 5: [&quot;my tears ricochet&quot;, 7], 6: [&quot;mirrorball&quot;, 6], 7: [&quot;seven&quot;, 5], 8: [&quot;august&quot;, 7], 9: [&quot;this is me trying&quot;, 7], 10: [&quot;illicit affairs&quot;, 8], 11: [&quot;invisible string&quot;, 6], 12: [&quot;mad woman&quot;, 7], 13: [&quot;epiphany&quot;, 6], 14: [&quot;betty&quot;, 8], 15: [&quot;peace&quot;, 9], 16: [&quot;hoax&quot;, 7], 17: [&quot;the lakes&quot;, 6] } } # Printing the dictionary print(folklore_album) . {&#39;title&#39;: &#39;Folklore&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2020, &#39;genre&#39;: [&#39;Alternative/Indie&#39;, &#39;Pop&#39;], &#39;tracks&#39;: {1: [&#39;the 1&#39;, 7], 2: [&#39;cardigan&#39;, 19], 3: [&#39;the last great american dynasty&#39;, 7], 4: [&#39;exile (ft. Bon Iver)&#39;, 10], 5: [&#39;my tears ricochet&#39;, 7], 6: [&#39;mirrorball&#39;, 6], 7: [&#39;seven&#39;, 5], 8: [&#39;august&#39;, 7], 9: [&#39;this is me trying&#39;, 7], 10: [&#39;illicit affairs&#39;, 8], 11: [&#39;invisible string&#39;, 6], 12: [&#39;mad woman&#39;, 7], 13: [&#39;epiphany&#39;, 6], 14: [&#39;betty&#39;, 8], 15: [&#39;peace&#39;, 9], 16: [&#39;hoax&#39;, 7], 17: [&#39;the lakes&#39;, 6]}} . for i in folklore_album[&quot;tracks&quot;]: print(&quot;track #&quot; + str(i) + &quot;: &quot; + folklore_album[&quot;tracks&quot;][i][0]) print(&quot; my rating: &quot; + str(folklore_album[&quot;tracks&quot;][i][1]) + &quot;/10&quot;) . track #1: the 1 my rating: 7/10 track #2: cardigan my rating: 19/10 track #3: the last great american dynasty my rating: 7/10 track #4: exile (ft. Bon Iver) my rating: 10/10 track #5: my tears ricochet my rating: 7/10 track #6: mirrorball my rating: 6/10 track #7: seven my rating: 5/10 track #8: august my rating: 7/10 track #9: this is me trying my rating: 7/10 track #10: illicit affairs my rating: 8/10 track #11: invisible string my rating: 6/10 track #12: mad woman my rating: 7/10 track #13: epiphany my rating: 6/10 track #14: betty my rating: 8/10 track #15: peace my rating: 9/10 track #16: hoax my rating: 7/10 track #17: the lakes my rating: 6/10 . Code Examples . Reverse a list utilizing features of lists and iteration . original_list = [1, 2, 3, 4, 5] print(&quot;List before reverse : &quot;,original_list) reversed_list = [] for value in original_list: reversed_list = [value] + reversed_list # print(&quot;List after reverse : &quot;, reversed_list) . List before reverse : [1, 2, 3, 4, 5] . Similar to insertion sort, this algorithm takes an unsorted array and returns a sorted array. Unlike insertion sort where you iterate through the each element and move the smaller elements to the front, this algorithm starts at the beginning and swaps the position of every element in the array . list = [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] print(f&quot;array before sort {list}&quot;) def insertion_sort(list): for index in range(1,len(list)): # repeats through length of the array value = list[index] i = index - 1 while i &gt;= 0: if value &lt; list[i]: list[i+1] = list[i] # shift number in slot i to the right list[i] = value # shift value left into slot i i = i - 1 else: break IS = insertion_sort(list) # print(f&quot;array after sort {list}&quot;) . array before sort [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] . Here is a list comprehension example, using lists to create lists. . Below, only songs in the folklore album that have less than 7 characters in their titles are printed. . TS_folklore = [&quot;exile&quot;, &quot;my tears ricochet&quot;, &quot;this is me trying&quot;, &quot;illicit affairs&quot;, &quot;august&quot;, &quot;mirrorball&quot;, &quot;betty&quot;, &quot;mad woman&quot;, &quot;epiphany&quot;, &quot;peace&quot;, &quot;cardigan&quot;] # this list is only songs that have less than 10 characters in the title TS_folklore_updated = [x for x in TS_folklore if len(x) &lt; 7] print(&quot;These are the songs in Taylor Swift&#39;s folklore album that have less than 7 characters in their title&quot;) print(TS_folklore_updated) . These are the songs in Taylor Swift&#39;s folklore album that have less than 7 characters in their title [&#39;exile&#39;, &#39;august&#39;, &#39;betty&#39;, &#39;peace&#39;] . Below, only songs that have a rating greater than 7 will be printed. . TS_folklore_ratings = {&quot;exile&quot;: 8, &quot;my tears ricochet&quot;: 6, &quot;this is me trying&quot;: 7, &quot;illicit affairs&quot;: 8, &quot;august&quot;: 4, &quot;mirrorball&quot;: 3, &quot;betty&quot;: 6, &quot;mad woman&quot;: 6, &quot;epiphany&quot;: 2, &quot;peace&quot;: 10, &quot;cardigan&quot;: 10} TS_folklore_best = {k:v for (k,v) in TS_folklore_ratings.items() if v&gt;7} print(&quot;These are the songs in Taylor Swift&#39;s folklore album that I give a rating greater than 7&quot;) print(TS_folklore_best) . These are the songs in Taylor Swift&#39;s folklore album that I give a rating greater than 7 {&#39;exile&#39;: 8, &#39;illicit affairs&#39;: 8, &#39;peace&#39;: 10, &#39;cardigan&#39;: 10} . Questions: . How is list comprehension similar to iteration? They are similar in that both need repetition in the code until a specific condition is met. | Kahoot Score . On the kahoot, I got a 6/10. I am definitely going to continue studying lists, dictionaries, iterations, conditionals, etc through CB mc tests and reviewing key video concepts that the CB website offers. After each MC question, it shows what skill it was so I will be using that to my advantage. . My Own List/Dictionary With Various Sorting Algs . teams = [ (&#39;Liverpool&#39;, &#39;Premier League&#39;, 1892, &#39;Football&#39;, 100000000), (&#39;Golden State Warriors&#39;, &#39;NBA&#39;, 1946, &#39;Basketball&#39;, 150000000), (&#39;New York Yankees&#39;, &#39;MLB&#39;, 1901, &#39;Baseball&#39;, 120000000), (&#39;Toronto Maple Leafs&#39;, &#39;NHL&#39;, 1917, &#39;Ice Hockey&#39;, 80000000) ] # bubble sort teams by price ascending def bubble_sort(teams): n = len(teams) for i in range(n): for j in range(0, n-i-1): if teams[j][4] &gt; teams[j+1][4]: teams[j], teams[j+1] = teams[j+1], teams[j] return teams sorted_teams = bubble_sort(teams) print(&quot;Teams sorted by value:&quot;) for team in sorted_teams: print(team) # insertion sort teams by year of organization descending def insertion_sort(teams): for i in range(1, len(teams)): key = teams[i] j = i-1 while j &gt;=0 and key[2] &gt; teams[j][2]: teams[j+1] = teams[j] j -= 1 teams[j+1] = key return teams sorted_teams = insertion_sort(teams) print(&quot;Teams sorted by year of establishment:&quot;) for team in sorted_teams: print(team) # selection sort teams by league name alphabetical def selection_sort(teams): for i in range(len(teams)): min_index = i for j in range(i+1, len(teams)): if teams[j][0] &lt; teams[min_index][0]: min_index = j teams[i], teams[min_index] = teams[min_index], teams[i] return teams sorted_teams = selection_sort(teams) print(&quot;Teams sorted by team name:&quot;) for team in sorted_teams: print(team) . Teams sorted by value: (&#39;Toronto Maple Leafs&#39;, &#39;NHL&#39;, 1917, &#39;Ice Hockey&#39;, 80000000) (&#39;Liverpool&#39;, &#39;Premier League&#39;, 1892, &#39;Football&#39;, 100000000) (&#39;New York Yankees&#39;, &#39;MLB&#39;, 1901, &#39;Baseball&#39;, 120000000) (&#39;Golden State Warriors&#39;, &#39;NBA&#39;, 1946, &#39;Basketball&#39;, 150000000) Teams sorted by year of establishment: (&#39;Golden State Warriors&#39;, &#39;NBA&#39;, 1946, &#39;Basketball&#39;, 150000000) (&#39;Toronto Maple Leafs&#39;, &#39;NHL&#39;, 1917, &#39;Ice Hockey&#39;, 80000000) (&#39;New York Yankees&#39;, &#39;MLB&#39;, 1901, &#39;Baseball&#39;, 120000000) (&#39;Liverpool&#39;, &#39;Premier League&#39;, 1892, &#39;Football&#39;, 100000000) Teams sorted by team name: (&#39;Golden State Warriors&#39;, &#39;NBA&#39;, 1946, &#39;Basketball&#39;, 150000000) (&#39;Liverpool&#39;, &#39;Premier League&#39;, 1892, &#39;Football&#39;, 100000000) (&#39;New York Yankees&#39;, &#39;MLB&#39;, 1901, &#39;Baseball&#39;, 120000000) (&#39;Toronto Maple Leafs&#39;, &#39;NHL&#39;, 1917, &#39;Ice Hockey&#39;, 80000000) . My Own Simulation . import random # list of possible fruits and probabilities fruit_prob = {&#39;apple&#39;: 0.5, &#39;banana&#39;: 0.3, &#39;orange&#39;: 0.1, &#39;kiwi&#39;: 0.05, &#39;grape&#39;: 0.05} # list for days week_days = [&#39;Monday&#39;, &#39;Tuesday&#39;, &#39;Wednesday&#39;, &#39;Thursday&#39;, &#39;Friday&#39;, &#39;Saturday&#39;, &#39;Sunday&#39;] week_fruit = [] for day in week_days: fruit = random.choices(list(fruit_prob.keys()), list(fruit_prob.values()))[0] week_fruit.append(fruit) print(&quot;Fruit of the week available in store:&quot;) for day, fruit in zip(week_days, week_fruit): print(f&quot;{day}: {fruit}&quot;) . Fruit of the week available in store: Monday: orange Tuesday: banana Wednesday: apple Thursday: banana Friday: apple Saturday: apple Sunday: banana .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/04/28/buildingsim.html",
            "relUrl": "/2023/04/28/buildingsim.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Binary Math and Truth Tables",
            "content": "Binary Math Hacks . Question: How do you think we should find the difference of two binary numbers? The product? The quotient? What rules need to be followed for those operations? Look into all of this on the Internet and note down important information you find (0.45) . We should find the difference of two binary numbers by adding the 2&#39;s complement of the second number to the first number. Binary subtraction is just binary addition of a negative number. To find the difference, the overflow bit is discarded and the rest of the answer is taken as the solution. You can take the product of two binary numbers by shifting the multiplicand left appropriately for each non-zero bit in the multiplier, and then adding the shifted numbers together. You can take the quotient of two binary numbers by comparing the divisor and dividend. If the divisor is larger, place 0 as the quotient, then bring the second bit of the dividend down. If the divisor is smaller, multiply it with 1 and the result becomes the subtrahend. Then, subtract the subtrahend from the minuend to get the remainder. Then bring down the next number bit from the dividend portion and perform step 1 again. Repeat the same process until the remainder becomes zero or the whole dividend is divided. . Based on what you find online, fill out the tables below for subtracting, multiplying, and dividing binary numbers (0.45): Subtracting Rules: 0, 1, 1, 1, 0 Multiplying Rules: 1, 0, 0, 0 Dividing Rules: 1, 0 . EXTRA BINARY CALCULATOR . Binary Logic Hacks . Logic Gate Hacks . Answer these questions in your blog: . 1.How can logic gates be used to execute basic computer functions?(1-2 sentences) . Logic gates are the building blocks of digital circuits and can be used to execute basic computer functions by combining them to create more complex circuits that can perform logical operations such as AND, OR, NOT, and XOR, which are used in various computer operations like arithmetic, memory storage, and communication. . 2.What is the difference between boolean operations and logic gates?(1-2 sentences) . Boolean operations are mathematical operations that are performed on boolean values (true or false), while logic gates are physical electronic components that implement boolean functions and perform logical operations on binary inputs (0 or 1) to produce binary outputs. Boolean operations are an abstract concept, while logic gates are the physical implementation of boolean operations. . 3.Complete this quiz and correct any mistakes in your blog . Nothing to correct got all question right . . Github Pages Hacks . Github pages is a hosting service website. Search up another hosting service website other than Github&#39;s and write at least one benefit, advantage, or feature that is different from other hosting service websites. . One advantage of using Netlify as a hosting service is that it offers continuous deployment, which means that it automatically deploys updates to your website whenever you push changes to your Git repository. This makes the deployment process faster and more streamlined, without the need for manual intervention. Additionally, Netlify offers a range of features such as form handling, A/B testing, and built-in CDN, which make it a popular choice among developers for hosting static websites and applications. . API hacks . import requests url = &quot;https://iata-and-icao-codes.p.rapidapi.com/airlines&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;460f88d59amsh76ca8a31ce1e3e8p1980d4jsn45f1c423170f&quot;, &quot;X-RapidAPI-Host&quot;: &quot;iata-and-icao-codes.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) all = response.json() for x in all: for key, value in x.items(): if (key == &quot;name&quot;): print(&quot;Airline Name:&quot;, value) if (key == &quot;icao_code&quot;): print(&quot; ICAO Code:&quot;, value) . Airline Name: VASCO ICAO Code: VFC Airline Name: Branson Air Express ICAO Code: None Airline Name: Angara Airlines ICAO Code: AGU Airline Name: Star Peru ICAO Code: SRU Airline Name: Air Burkina ICAO Code: VBW Airline Name: Avianca ICAO Code: GLG Airline Name: Maya Island Air ICAO Code: MYD Airline Name: Albawings ICAO Code: AWT Airline Name: Blue Air ICAO Code: BMS Airline Name: Helvetic Airways ICAO Code: OAW Airline Name: Sun d&#39;Or Airlines ICAO Code: ERO Airline Name: Passaredo Linhas Aéreas ICAO Code: PTB Airline Name: Binter Cabo Verde ICAO Code: NTB Airline Name: Air Chathams ICAO Code: CVA Airline Name: Air Choice One ICAO Code: WBR Airline Name: Pacificair ICAO Code: None Airline Name: Air Inuit ICAO Code: AIE Airline Name: Jubba Airways ICAO Code: JBW Airline Name: Silver Airways ICAO Code: SIL Airline Name: Airline Urga ICAO Code: URG Airline Name: Air Philip ICAO Code: APV Airline Name: Avior Regional ICAO Code: RGR Airline Name: Air Antilles ICAO Code: GUY Airline Name: Tarco Aviation ICAO Code: TRQ Airline Name: Sichuan Airlines ICAO Code: CSC Airline Name: Malawi Airlines ICAO Code: MWI Airline Name: Boutique Air ICAO Code: BTQ Airline Name: Gazpromavia ICAO Code: GZP Airline Name: FlyDamas ICAO Code: FDK Airline Name: Kenn Borek Air ICAO Code: KBA Airline Name: Airnorth ICAO Code: ANT Airline Name: Star East Airlines ICAO Code: SEK Airline Name: Warbelows Air ICAO Code: WAV Airline Name: Airlink ICAO Code: LNK Airline Name: Bassaka Air ICAO Code: BSX Airline Name: Aeromexico Connect ICAO Code: SLI Airline Name: FlyOne ICAO Code: FIA Airline Name: FlyMontserrat ICAO Code: MNT Airline Name: SmartAvia ICAO Code: AUL Airline Name: ASL Airlines France ICAO Code: FPO Airline Name: Rutaca Airlines ICAO Code: RUC Airline Name: Canadian North ICAO Code: MPE Airline Name: TAG Airlines ICAO Code: TGU Airline Name: CemAir ICAO Code: KEM Airline Name: TUI fly Nordiс ICAO Code: BLX Airline Name: Air Timor ICAO Code: 586 Airline Name: Israir Airlines ICAO Code: ISR Airline Name: Solaseed Air ICAO Code: SNJ Airline Name: Aklak Air ICAO Code: AKK Airline Name: Niger Airlines ICAO Code: NIN Airline Name: Orbest ICAO Code: OBS Airline Name: Cham Wings Airlines ICAO Code: SAW Airline Name: ALROSA ICAO Code: DRU Airline Name: SaudiGulf ICAO Code: SGQ Airline Name: SmartLynx Airlines Estonia ICAO Code: MYX Airline Name: Madagasikara Airways ICAO Code: AYS Airline Name: Sylt Air ICAO Code: AWU Airline Name: First Air ICAO Code: FAB Airline Name: MAYAir ICAO Code: MYI Airline Name: Air Panama ICAO Code: PST Airline Name: Elite Airways ICAO Code: MNU Airline Name: RusLine ICAO Code: RLU Airline Name: Federal Airlines ICAO Code: FDR Airline Name: Windrose Airlines ICAO Code: WRC Airline Name: Mann Yadanarpon Airlines ICAO Code: MYP Airline Name: TransNusa ICAO Code: TNU Airline Name: Bering Air ICAO Code: BRG Airline Name: STP Airways ICAO Code: STP Airline Name: Fly Mid Africa ICAO Code: MFG Airline Name: BHAir ICAO Code: BGH Airline Name: EcoJet ICAO Code: ECO Airline Name: Myanmar Airways International ICAO Code: MMA Airline Name: Regional Air ICAO Code: REG Airline Name: Pacific Coastal Airlines ICAO Code: PCO Airline Name: Air Tindi ICAO Code: TID Airline Name: Afriqiyah Airways ICAO Code: AAW Airline Name: EWA Air ICAO Code: EWR Airline Name: LATAM Colombia ICAO Code: ARE Airline Name: PAL Express ICAO Code: GAP Airline Name: Jetstar Asia ICAO Code: JSA Airline Name: Air Arabia Maroc ICAO Code: MAC Airline Name: Fly540 ICAO Code: FFV Airline Name: IndiGo ICAO Code: IGO Airline Name: Jeju Air ICAO Code: JJA Airline Name: Lucky Air ICAO Code: LKE Airline Name: StarFlyer ICAO Code: SFJ Airline Name: TruJet ICAO Code: TRJ Airline Name: Ravn Alaska ICAO Code: RVF Airline Name: Eurowings ICAO Code: GWI Airline Name: Onur Air ICAO Code: OHY Airline Name: Interjet ICAO Code: AIJ Airline Name: Wright Air Service ICAO Code: WRT Airline Name: Fly All Ways ICAO Code: EDR Airline Name: Pan Pacific Airlines ICAO Code: AAV Airline Name: Congo Airways ICAO Code: CGA Airline Name: Air Changan ICAO Code: CGN Airline Name: Alliance Air ICAO Code: LLR Airline Name: Dana Air ICAO Code: DAN Airline Name: Cape Air ICAO Code: KAP Airline Name: Central Mountain Air ICAO Code: GLR Airline Name: Tropic Air ICAO Code: TOS Airline Name: Caicos Express Airways ICAO Code: CXE Airline Name: SATENA ICAO Code: NSE Airline Name: Air Moldova ICAO Code: MLD Airline Name: Avior Airlines ICAO Code: ROI Airline Name: Jet Airways ICAO Code: JAI Airline Name: Southern Airways Express ICAO Code: FDY Airline Name: National Airways Ethiopia ICAO Code: NAE Airline Name: Astra Airlines ICAO Code: AZI Airline Name: Azimuth ICAO Code: AZO Airline Name: HOP! ICAO Code: HOP Airline Name: Air Travel ICAO Code: HTU Airline Name: AeroLink ICAO Code: XAU Airline Name: Georgian Airways ICAO Code: TGZ Airline Name: Mandarin Airlines ICAO Code: MDA Airline Name: Aruba Airlines ICAO Code: ARU Airline Name: Air Algerie ICAO Code: DAH Airline Name: Aztec Airways ICAO Code: AZY Airline Name: Air Juan ICAO Code: None Airline Name: AlbaStar ICAO Code: LAV Airline Name: Alaska Airlines ICAO Code: ASA Airline Name: Royal Air Maroc ICAO Code: RAM Airline Name: Austral ICAO Code: AUT Airline Name: Africa World Airlines ICAO Code: AFW Airline Name: Venezolana ICAO Code: VNE Airline Name: La Compagnie ICAO Code: DJT Airline Name: Belavia ICAO Code: BRU Airline Name: Bhutan Airlines ICAO Code: BTN Airline Name: ZanAir ICAO Code: TAN Airline Name: EastAfrican ICAO Code: EXZ Airline Name: Uni Air ICAO Code: UIA Airline Name: Eritrean Airlines ICAO Code: ERT Airline Name: Iran Air Tours ICAO Code: IRB Airline Name: Seaborne Airlines ICAO Code: SBS Airline Name: Cambodia Bayon Airlines ICAO Code: BYC Airline Name: French Bee ICAO Code: FBU Airline Name: Biman Bangladesh Airlines ICAO Code: BBC Airline Name: Royal Brunei Airlines ICAO Code: RBA Airline Name: Nouvelair ICAO Code: LBT Airline Name: Okay Airways ICAO Code: OKA Airline Name: Air Botswana ICAO Code: BOT Airline Name: US-Bangla Airlines ICAO Code: UBG Airline Name: airBaltic ICAO Code: BTI Airline Name: flyCAA ICAO Code: FPY Airline Name: Caribbean Airlines ICAO Code: BWA Airline Name: TUI Airways ICAO Code: TOM Airline Name: Blue Bird Airways ICAO Code: BBG Airline Name: CEIBA Intercontinental ICAO Code: CEL Airline Name: Aegean Airlines ICAO Code: AEE Airline Name: Air Canada ICAO Code: ACA Airline Name: Air India ICAO Code: AIC Airline Name: Avianca ICAO Code: AVA Airline Name: British Airways ICAO Code: BAW Airline Name: American Airlines ICAO Code: AAL Airline Name: Finnair ICAO Code: FIN Airline Name: Aeromexico ICAO Code: AMX Airline Name: Alitalia ICAO Code: AZA Airline Name: Aerolineas Argentinas ICAO Code: ARG Airline Name: Air France ICAO Code: AFR Airline Name: Jetstar Pacific ICAO Code: PIC Airline Name: 9 Air ICAO Code: JYH Airline Name: AirAsia ICAO Code: AXM Airline Name: Air Busan ICAO Code: ABL Airline Name: Eastar Jet ICAO Code: ESR Airline Name: Skymark Airlines ICAO Code: SKY Airline Name: Spring Airlines ICAO Code: CQH Airline Name: Blue Panorama Airlines ICAO Code: BPA Airline Name: Flybe ICAO Code: BEE Airline Name: Azul ICAO Code: AZU Airline Name: Aereo Calafia ICAO Code: CFV Airline Name: jetBlue ICAO Code: JBU Airline Name: Trade Air ICAO Code: TDR Airline Name: AZUR Air ICAO Code: KTK Airline Name: Cinnamon Air ICAO Code: CIN Airline Name: Cronos Airlines ICAO Code: CRA Airline Name: Air China ICAO Code: CCA Airline Name: CM Airlines ICAO Code: OMT Airline Name: Corendon Dutch Airlines ICAO Code: CND Airline Name: Chalair Aviation ICAO Code: CLG Airline Name: PNG Air ICAO Code: TOK Airline Name: Lufthansa CityLine ICAO Code: CLH Airline Name: Grand China Air ICAO Code: GDC Airline Name: Coastal Aviation ICAO Code: CSV Airline Name: Alitalia CityLiner ICAO Code: CYL Airline Name: Cubana ICAO Code: CUB Airline Name: Copa Airlines ICAO Code: CMP Airline Name: China Airlines ICAO Code: CAL Airline Name: Cyprus Airways ICAO Code: CYP Airline Name: China Southern Airlines ICAO Code: CSN Airline Name: Severstal Air Company ICAO Code: SSF Airline Name: Daallo Airlines ICAO Code: DAO Airline Name: Norwegian Air International ICAO Code: IBK Airline Name: BRA ICAO Code: BRX Airline Name: Condor ICAO Code: None Airline Name: Norwegian ICAO Code: NAN Airline Name: Norwegian ICAO Code: NRS Airline Name: Thomas Cook Scandinavia ICAO Code: VKG Airline Name: Norwegian Air Argentina ICAO Code: NAA Airline Name: TAAG Angola ICAO Code: DTA Airline Name: SCAT Airlines ICAO Code: VSV Airline Name: Danish Air Transport ICAO Code: DTR Airline Name: Donghai Airlines ICAO Code: EPA Airline Name: New Gen Airways ICAO Code: VGO Airline Name: Enter Air ICAO Code: ENT Airline Name: Estelar Latinoamerica ICAO Code: ETR Airline Name: Equaflight ICAO Code: EKA Airline Name: Evelop! ICAO Code: EVE Airline Name: Wamos Air ICAO Code: PLM Airline Name: easyJet ICAO Code: EJU Airline Name: Ernest Airlines ICAO Code: ERN Airline Name: ANA Wings ICAO Code: AKX Airline Name: Aer Lingus ICAO Code: EIN Airline Name: Emirates ICAO Code: UAE Airline Name: Ellinair ICAO Code: ELB Airline Name: AirDolomiti ICAO Code: DLA Airline Name: Pegas Fly ICAO Code: KAR Airline Name: Iran Aseman Airlines ICAO Code: IRC Airline Name: TAME ICAO Code: TAE Airline Name: Serene Air ICAO Code: SEP Airline Name: Etihad Airways ICAO Code: ETD Airline Name: Safarilink Aviation ICAO Code: XLK Airline Name: flyadeal ICAO Code: FAD Airline Name: Air Flamenco ICAO Code: WAF Airline Name: FlyValan ICAO Code: FXP Airline Name: iFly ICAO Code: RSY Airline Name: Bulgaria Air ICAO Code: LZB Airline Name: Vivaair ICAO Code: VVC Airline Name: FAT Far Eastern Air Transport ICAO Code: FEA Airline Name: Ariana Afghan Airlines ICAO Code: AFG Airline Name: Icelandair ICAO Code: ICE Airline Name: Shanghai Airlines ICAO Code: CSH Airline Name: Fastjet Tanzania ICAO Code: FTZ Airline Name: Flybondi ICAO Code: FBD Airline Name: FlyPelican ICAO Code: FRE Airline Name: Flyest Lineas Aereas ICAO Code: None Airline Name: FlyEgypt ICAO Code: FEG Airline Name: Fly Tiwi ICAO Code: None Airline Name: Fuzhou Airlines ICAO Code: FZA Airline Name: Rossiya Airlines ICAO Code: SDM Airline Name: Ibex Airlines ICAO Code: IBX Airline Name: Firefly ICAO Code: FFM Airline Name: China Express Airlines ICAO Code: HXA Airline Name: Cathay Pacific ICAO Code: CPA Airline Name: SUN-AIR ICAO Code: SUS Airline Name: Fiji Airways ICAO Code: FJI Airline Name: Delta ICAO Code: DAL Airline Name: Chengdu Airlines ICAO Code: UEA Airline Name: Ruili Airlines ICAO Code: RLH Airline Name: Air Arabia Egypt ICAO Code: RBG Airline Name: Fastjet Zimbabwe ICAO Code: FJW Airline Name: FlySafair ICAO Code: SFR Airline Name: AirAsia X ICAO Code: XAX Airline Name: Nok Air ICAO Code: NOK Airline Name: Thai AirAsia ICAO Code: AIQ Airline Name: AirAsia Japan ICAO Code: WAJ Airline Name: Condor ICAO Code: CFG Airline Name: easyJet ICAO Code: EZS Airline Name: Eurowings ICAO Code: EWG Airline Name: Eurowings ICAO Code: EWE Airline Name: Norwegian ICAO Code: NAX Airline Name: Pobeda ICAO Code: PBD Airline Name: Ryanair ICAO Code: RYR Airline Name: GOL Linhas Aéreas ICAO Code: GLO Airline Name: Fly Corporate ICAO Code: None Airline Name: Flydubai ICAO Code: FDB Airline Name: Allegiant Air ICAO Code: AAY Airline Name: Flair Airlines ICAO Code: FLE Airline Name: Frontier Airlines ICAO Code: FFT Airline Name: Gowair Vacation Airlines ICAO Code: GWR Airline Name: Gulf Air ICAO Code: GFA Airline Name: Loong Air ICAO Code: CDC Airline Name: Air Greenland ICAO Code: GRL Airline Name: Germania Flug ICAO Code: GSW Airline Name: APG Airlines ICAO Code: RIV Airline Name: Sky Express Greece ICAO Code: SEH Airline Name: Aurigny ICAO Code: AUR Airline Name: Tianjin Airlines ICAO Code: GCR Airline Name: Air Guilin ICAO Code: CGH Airline Name: Avianca Guatemala ICAO Code: GUG Airline Name: Grant Aviation ICAO Code: GUN Airline Name: GX Airlines ICAO Code: CBG Airline Name: Colorful Guizhou Airlines ICAO Code: CGZ Airline Name: Air Rarotonga ICAO Code: RAR Airline Name: Thomas Cook Airlines Balearics ICAO Code: CTB Airline Name: Bulgarian Air Charter ICAO Code: BUC Airline Name: Ravn Alaska ICAO Code: RVF Airline Name: Eagle Air ICAO Code: FEI Airline Name: Taron Avia ICAO Code: TRV Airline Name: Hawaiian Airlines ICAO Code: HAL Airline Name: Asia Atlantic Airlines ICAO Code: AAQ Airline Name: Air Senegal ICAO Code: SZN Airline Name: Air Cote D&#39;Ivoire ICAO Code: VRE Airline Name: Taban Airlines ICAO Code: TBN Airline Name: Skippers Aviation ICAO Code: None Airline Name: Juneyao Airlines ICAO Code: DKH Airline Name: Hainan Airlines ICAO Code: CHH Airline Name: North-Wright Airways ICAO Code: NWL Airline Name: Hong Kong Airlines ICAO Code: CRK Airline Name: Uzbekistan Airways ICAO Code: UZB Airline Name: Aurora ICAO Code: SHU Airline Name: ATA Airlines ICAO Code: TBZ Airline Name: Island Air Express ICAO Code: EXP Airline Name: Izhavia ICAO Code: IZA Airline Name: Iraqi Airways ICAO Code: IAW Airline Name: Batik Air ICAO Code: BTK Airline Name: Solomon Airlines ICAO Code: SOL Airline Name: Fly Baghdad ICAO Code: FBA Airline Name: Air Kiribati ICAO Code: AKL Airline Name: Trigana Air Service ICAO Code: TGN Airline Name: NAM Air ICAO Code: LKN Airline Name: IrAero ICAO Code: IAE Airline Name: Qazaq Air ICAO Code: QAZ Airline Name: Iran Air ICAO Code: IRA Airline Name: Sepehran Airlines ICAO Code: SHI Airline Name: Caspian Airlines ICAO Code: CPN Airline Name: Yemenia ICAO Code: IYE Airline Name: Arkia ICAO Code: AIZ Airline Name: Azerbaijan Airlines ICAO Code: AHY Airline Name: Buta Airways ICAO Code: None Airline Name: Northwestern Air ICAO Code: PLR Airline Name: Badr Airlines ICAO Code: BDR Airline Name: Buffalo Airways ICAO Code: BFL Airline Name: Alaska Seaplanes ICAO Code: None Airline Name: Berjaya Air ICAO Code: BVT Airline Name: JetSmart ICAO Code: JAT Airline Name: Helijet ICAO Code: JBA Airline Name: Beijing Capital Airlines ICAO Code: CBJ Airline Name: Iberia ICAO Code: IBE Airline Name: Iberia Express ICAO Code: IBS Airline Name: Japan Air Commuter ICAO Code: JAC Airline Name: Air Seychelles ICAO Code: SEY Airline Name: Int&#39;Air Iles ICAO Code: IIA Airline Name: Harbour Air Seaplanes ICAO Code: HES Airline Name: AirAsia India ICAO Code: IAD Airline Name: Air Do ICAO Code: ADO Airline Name: Air India Express ICAO Code: AXB Airline Name: GoAir ICAO Code: GOW Airline Name: Jetstar Japan ICAO Code: JJP Airline Name: Spring Airlines Japan ICAO Code: SJO Airline Name: Tigerair Taiwan ICAO Code: TTW Airline Name: Wings Air ICAO Code: WON Airline Name: Air Italy ICAO Code: ISS Airline Name: Himalaya Airlines ICAO Code: HIM Airline Name: Transavia ICAO Code: TRA Airline Name: Sky Airline ICAO Code: SKU Airline Name: Air Arabia ICAO Code: ABY Airline Name: Jazeera Airways ICAO Code: JZR Airline Name: Jet Asia Airways ICAO Code: JAA Airline Name: Fuji Dream Airlines ICAO Code: FDA Airline Name: Meraj Airlines ICAO Code: MRJ Airline Name: Jambojet ICAO Code: None Airline Name: Joy Air ICAO Code: JOY Airline Name: Air Koryo ICAO Code: KOR Airline Name: Air Serbia ICAO Code: ASL Airline Name: Bearskin Airlines ICAO Code: BLS Airline Name: DAC Aviation ICAO Code: None Airline Name: InterCaribbean Airways ICAO Code: IWY Airline Name: Jubba Airways ICAO Code: JUB Airline Name: Taquan Air ICAO Code: TQN Airline Name: Cambodia Angkor Air ICAO Code: KHV Airline Name: Air KBZ ICAO Code: KBZ Airline Name: Drukair ICAO Code: DRK Airline Name: Air Astana ICAO Code: KZR Airline Name: Air Belgium ICAO Code: ABB Airline Name: KrasAvia ICAO Code: SSJ Airline Name: Air Malta ICAO Code: AMC Airline Name: China United Airlines ICAO Code: CUA Airline Name: Maroomba Airlines ICAO Code: None Airline Name: Komiaviatrans ICAO Code: KMA Airline Name: ASKY Airlines ICAO Code: SKK Airline Name: Cambodia Airways ICAO Code: KME Airline Name: Penair ICAO Code: PEN Airline Name: Kuwait Airways ICAO Code: KAC Airline Name: Korea Express Air ICAO Code: KEA Airline Name: Cayman Airways ICAO Code: CAY Airline Name: Kunming Airlines ICAO Code: KNA Airline Name: LASA Líneas Aéreas ICAO Code: None Airline Name: Mauritania Airlines International ICAO Code: MAI Airline Name: Luxair ICAO Code: LGL Airline Name: Liat ICAO Code: LIA Airline Name: Lao Skyway ICAO Code: LLL Airline Name: Miami Air International ICAO Code: BSK Airline Name: Loganair ICAO Code: LOG Airline Name: Libyan Airlines ICAO Code: LAA Airline Name: Avianca Costa Rica ICAO Code: LRC Airline Name: LongJiang Airlines ICAO Code: SNG Airline Name: Level ICAO Code: BOS Airline Name: EL AL ICAO Code: ELY Airline Name: Aero Mongolia ICAO Code: MNG Airline Name: Kenmore Air ICAO Code: KEN Airline Name: SkyJet Airlines ICAO Code: MSJ Airline Name: Motor Sich Airlines ICAO Code: MSI Airline Name: SilkAir ICAO Code: SLK Airline Name: Calm Air ICAO Code: CAV Airline Name: Hunnu Air ICAO Code: MML Airline Name: Egyptair ICAO Code: MSR Airline Name: Thomas Cook Airlines ICAO Code: TCX Airline Name: Air Mediterranean ICAO Code: MAR Airline Name: Mokulele Airlines ICAO Code: MHO Airline Name: MASwings ICAO Code: MWG Airline Name: Amakusa Airlines ICAO Code: AHX Airline Name: Nordwind Airlines ICAO Code: NWS Airline Name: Nolinor Aviation ICAO Code: NRL Airline Name: Novair ICAO Code: NVR Airline Name: Nesma Airlines ICAO Code: NSS Airline Name: Cobham Aviation Services Australia ICAO Code: JTE Airline Name: Nesma Airlines ICAO Code: NMA Airline Name: Air Vanuatu ICAO Code: AVN Airline Name: Al Naser Wings ICAO Code: NAD Airline Name: aero ICAO Code: NIG Airline Name: TAP Air Portugal ICAO Code: PGA Airline Name: Niger Airways ICAO Code: NWA Airline Name: Neos ICAO Code: NOS Airline Name: Nile Air ICAO Code: NIA Airline Name: SWISS ICAO Code: SWR Airline Name: Lufthansa ICAO Code: DLH Airline Name: LOT Polish ICAO Code: LOT Airline Name: EgyptAir Express ICAO Code: MSE Airline Name: LATAM Brasil ICAO Code: TAM Airline Name: Mango ICAO Code: MNO Airline Name: Japan Airlines ICAO Code: JAL Airline Name: Cathay Dragon ICAO Code: HDA Airline Name: LATAM Chile ICAO Code: LAN Airline Name: Malaysia Airlines ICAO Code: MAS Airline Name: LATAM Express ICAO Code: LXP Airline Name: LATAM Peru ICAO Code: LPE Airline Name: NORRA ICAO Code: FCM Airline Name: KLM ICAO Code: KLM Airline Name: Kenya Airways ICAO Code: KQA Airline Name: Middle East Airlines ICAO Code: MEA Airline Name: Xiamen Airlines ICAO Code: CXA Airline Name: China Eastern ICAO Code: CES Airline Name: Air Madagascar ICAO Code: MDG Airline Name: Air Mauritius ICAO Code: MAU Airline Name: Kulula ICAO Code: CAW Airline Name: Jetstar ICAO Code: JST Airline Name: Jin Air ICAO Code: JNA Airline Name: Lion Air ICAO Code: LNI Airline Name: Myway Airlines ICAO Code: MYW Airline Name: Peach ICAO Code: APJ Airline Name: Lanmei Airlines ICAO Code: MKR Airline Name: Vanilla Air ICAO Code: VNL Airline Name: Atlasglobal ICAO Code: KKK Airline Name: Jet2.com ICAO Code: EXS Airline Name: Spirit Airlines ICAO Code: NKS Airline Name: Air Japan ICAO Code: AJX Airline Name: Hebei Airlines ICAO Code: HBH Airline Name: Binter Canarias ICAO Code: IBB Airline Name: Karun Airlines ICAO Code: IRG Airline Name: Air Macau ICAO Code: AMU Airline Name: Air Iceland Connect ICAO Code: FXI Airline Name: Avianca Brazil ICAO Code: ONE Airline Name: Orenburzhye ICAO Code: ORG Airline Name: NOVA Airways ICAO Code: NOV Airline Name: Olympic Air ICAO Code: OAL Airline Name: BOA Boliviana de Aviación ICAO Code: BOV Airline Name: Oriental Air Bridge ICAO Code: ORC Airline Name: Cairo Aviation ICAO Code: CCE Airline Name: Laudamotion ICAO Code: LDM Airline Name: Overland Airways ICAO Code: OLA Airline Name: Originair ICAO Code: OGN Airline Name: Hinterland Aviation ICAO Code: HND Airline Name: Samoa Airways ICAO Code: PAO Airline Name: MIAT Mongolian Airlines ICAO Code: MGL Airline Name: Nauru Airlines ICAO Code: RON Airline Name: PassionAir ICAO Code: DIG Airline Name: Chongqing Airlines ICAO Code: CQN Airline Name: TUIfly Netherlands ICAO Code: TFL Airline Name: Skyward Express ICAO Code: SEW Airline Name: Andes Lineas Aereas ICAO Code: ANS Airline Name: Proflight Zambia ICAO Code: PFZ Airline Name: AirKenya ICAO Code: XAK Airline Name: Wingo ICAO Code: RPB Airline Name: Pascan Aviation ICAO Code: PSC Airline Name: Privilege Style ICAO Code: PVG Airline Name: SprintAir ICAO Code: SRN Airline Name: Peruvian Airlines ICAO Code: PVN Airline Name: PAL Airlines ICAO Code: PVL Airline Name: Pegasus Airlines ICAO Code: PGT Airline Name: Porter Airlines ICAO Code: POE Airline Name: People&#39;s Viennaline ICAO Code: PEV Airline Name: Bangkok Airways ICAO Code: BKP Airline Name: Phoenix Air ICAO Code: PHA Airline Name: Polar Airlines ICAO Code: RKA Airline Name: Air Saint Pierre ICAO Code: SPM Airline Name: PIA ICAO Code: PIA Airline Name: Southern Air Charter ICAO Code: SOA Airline Name: Canaryfly ICAO Code: CNF Airline Name: Philippine Airlines ICAO Code: PAL Airline Name: UIA ICAO Code: AUI Airline Name: Plus Ultra Lineas Aereas ICAO Code: PUE Airline Name: St Barth Commuter ICAO Code: SBU Airline Name: Precision Air ICAO Code: PRF Airline Name: Air Niugini ICAO Code: ANG Airline Name: Surinam Airways ICAO Code: SLM Airline Name: LATAM Paraguay ICAO Code: LAP Airline Name: Maldivian ICAO Code: DQA Airline Name: Anguilla Air Services ICAO Code: AXL Airline Name: 40 Mile Air ICAO Code: MLA Airline Name: SkyBahamas ICAO Code: SBM Airline Name: Trans Air Congo ICAO Code: TSG Airline Name: Qeshm Air ICAO Code: IRQ Airline Name: Camair-co ICAO Code: CRC Airline Name: JC International Airlines ICAO Code: JCC Airline Name: Bamboo Airways ICAO Code: BAV Airline Name: Air Kyrgyzstan ICAO Code: LYN Airline Name: Air Canada Express ICAO Code: JZA Airline Name: LASER Airlines ICAO Code: LER Airline Name: Monacair ICAO Code: None Airline Name: Skytrans ICAO Code: SKP Airline Name: Alliance Airlines ICAO Code: UTY Airline Name: Azur Air Ukraine ICAO Code: UTN Airline Name: Lao Airlines ICAO Code: LAO Airline Name: Qingdao Airlines ICAO Code: QDA Airline Name: Transair Senegal ICAO Code: GTS Airline Name: Yakutia Airlines ICAO Code: SYL Airline Name: DOT LT ICAO Code: DNU Airline Name: Nepal Airlines ICAO Code: RNA Airline Name: SyrianAir ICAO Code: SYR Airline Name: Atlantic Airways ICAO Code: FLI Airline Name: Rotana Jet ICAO Code: RJD Airline Name: Royal Flight ICAO Code: ABG Airline Name: Armenia Aircompany ICAO Code: NGT Airline Name: Kam Air ICAO Code: KMF Airline Name: Ryanair Sun ICAO Code: RYS Airline Name: UVT Aero ICAO Code: BUG Airline Name: Air Canada Rouge ICAO Code: ROU Airline Name: Royal Air Charter ICAO Code: RYL Airline Name: Regent Airways ICAO Code: RGE Airline Name: SANSA ICAO Code: LRS Airline Name: Aerolineas Sosa ICAO Code: NSO Airline Name: Azores Airlines ICAO Code: RZO Airline Name: Sunrise Airways ICAO Code: KSZ Airline Name: Croatia Airlines ICAO Code: CTN Airline Name: Asiana Airlines ICAO Code: AAR Airline Name: Japan Transocean Air ICAO Code: JTA Airline Name: S7 Airlines ICAO Code: SBI Airline Name: Qantas ICAO Code: QFA Airline Name: Qatar Airways ICAO Code: QTR Airline Name: Royal Jordanian ICAO Code: RJA Airline Name: Tarom ICAO Code: ROT Airline Name: CSA Czech Airlines ICAO Code: CSA Airline Name: Citilink ICAO Code: CTV Airline Name: Air Peace ICAO Code: APK Airline Name: airblue ICAO Code: ABQ Airline Name: Air Seoul ICAO Code: ASV Airline Name: West Air ICAO Code: CHB Airline Name: Indonesia AirAsia ICAO Code: AWQ Airline Name: JetLite ICAO Code: JLL Airline Name: Malindo Air ICAO Code: MXD Airline Name: SmartWings Czechia ICAO Code: TVS Airline Name: Volaris Costa Rica ICAO Code: VOC Airline Name: Jordan Aviation ICAO Code: JAV Airline Name: SalamAir ICAO Code: OMS Airline Name: Sounds Air ICAO Code: SDA Airline Name: Aircalin ICAO Code: ACI Airline Name: Shandong Airlines ICAO Code: CDG Airline Name: Sudan Airways ICAO Code: SUD Airline Name: XL Airways France ICAO Code: XLF Airline Name: Tassili Airlines ICAO Code: DTH Airline Name: Sharp Airlines ICAO Code: SHA Airline Name: Flybe ICAO Code: BCI Airline Name: Sriwijaya Air ICAO Code: SJY Airline Name: Air Cairo ICAO Code: MSC Airline Name: SATA Air Acores ICAO Code: SAT Airline Name: Sky Pasada ICAO Code: WCC Airline Name: SundAir ICAO Code: SDR Airline Name: Corsair International ICAO Code: CRL Airline Name: Air Namibia ICAO Code: NMB Airline Name: Somon Air ICAO Code: SMR Airline Name: Avianca Peru ICAO Code: TPU Airline Name: Fly Art ICAO Code: FLB Airline Name: Eastern Airways ICAO Code: EZE Airline Name: Turkmenistan Airlines ICAO Code: TUA Airline Name: AirSWIFT ICAO Code: ATX Airline Name: Twin Jet ICAO Code: TJT Airline Name: Avianca El Salvador ICAO Code: TAI Airline Name: Air Tanzania ICAO Code: ATC Airline Name: SkyTaxi ICAO Code: IGA Airline Name: BRA ICAO Code: SCW Airline Name: Tailwind Airlines ICAO Code: TWI Airline Name: Tradewind Aviation ICAO Code: GPD Airline Name: Airnorth ICAO Code: ANO Airline Name: LAM Mozambique Airlines ICAO Code: LAM Airline Name: Air Tahiti Nui ICAO Code: THT Airline Name: Tandem Aero ICAO Code: TDM Airline Name: Air Transat ICAO Code: TSC Airline Name: Tunisair ICAO Code: TAR Airline Name: Tibet Airlines ICAO Code: TBA Airline Name: Air Caraibes ICAO Code: FWI Airline Name: Air Caledonie ICAO Code: TPC Airline Name: Tsaradia ICAO Code: None Airline Name: Buddha Air ICAO Code: BHA Airline Name: Karinou Airlines ICAO Code: KRN Airline Name: Ural Airlines ICAO Code: SVR Airline Name: Tus Airways ICAO Code: CYF Airline Name: Myanmar National Airlines ICAO Code: UBA Airline Name: Ultimate Air Shuttle ICAO Code: UJC Airline Name: Tunisair Express ICAO Code: TUX Airline Name: AtlasGlobal Ukraine ICAO Code: UJX Airline Name: Auric Air ICAO Code: AUK Airline Name: ALMasria Universal Airlines ICAO Code: LMU Airline Name: Vistara ICAO Code: VTI Airline Name: South African Airways ICAO Code: SAA Airline Name: SAS Scandinavian ICAO Code: SAS Airline Name: Air Zimbabwe ICAO Code: AZW Airline Name: Bahamasair ICAO Code: BHS Airline Name: Utair ICAO Code: UTA Airline Name: Buraq Air ICAO Code: BRQ Airline Name: Conviasa ICAO Code: VCV Airline Name: Vieques Air Link ICAO Code: VES Airline Name: Aerovias DAP ICAO Code: DAP Airline Name: VI Airlink ICAO Code: VIL Airline Name: THAI airways ICAO Code: THA Airline Name: United Airlines ICAO Code: UAL Airline Name: Brussels Airlines ICAO Code: BEL Airline Name: Singapore Airlines ICAO Code: SIA Airline Name: Turkish Airlines ICAO Code: THY Airline Name: TAP Air Portugal ICAO Code: TAP Airline Name: SriLankan Airlines ICAO Code: ALK Airline Name: Saudia ICAO Code: SVA Airline Name: Aeroflot ICAO Code: AFL Airline Name: Air Europa ICAO Code: AEA Airline Name: Air Austral ICAO Code: REU Airline Name: Thai Lion Air ICAO Code: TLM Airline Name: Urumqi Air ICAO Code: CUH Airline Name: HK Express ICAO Code: HKE Airline Name: Scoot ICAO Code: SCO Airline Name: SpiceJet ICAO Code: SEJ Airline Name: Tigerair Australia ICAO Code: TGG Airline Name: T&#39;way Air ICAO Code: TWB Airline Name: easyJet ICAO Code: EZY Airline Name: Transavia France ICAO Code: TVF Airline Name: TUI fly Belgium ICAO Code: JAF Airline Name: Volotea ICAO Code: VOE Airline Name: Sun Country Airlines ICAO Code: SCX Airline Name: Iliamna Air Taxi ICAO Code: IAR Airline Name: Virgin Australia ICAO Code: VOZ Airline Name: LATAM Ecuador ICAO Code: LNE Airline Name: Aeropostal ICAO Code: ALV Airline Name: Anisec Luftfahrt ICAO Code: FOO Airline Name: Med-View Airline ICAO Code: MEV Airline Name: Max Air ICAO Code: NGL Airline Name: Flyme ICAO Code: VQI Airline Name: Novoair ICAO Code: NVQ Airline Name: Cabo Verde Airlines ICAO Code: TCV Airline Name: Virgin Atlantic ICAO Code: VIR Airline Name: Air Tahiti ICAO Code: VTA Airline Name: Viva Air Peru ICAO Code: VPE Airline Name: Aeromar ICAO Code: TAO Airline Name: Thai Vietjet Air ICAO Code: TVJ Airline Name: FlexFlight ICAO Code: FXT Airline Name: Arik Air ICAO Code: ARA Airline Name: Mahan Air ICAO Code: IRM Airline Name: Wings of Lebanon ICAO Code: WLB Airline Name: Wizz Air UK ICAO Code: WUK Airline Name: KLM Cityhopper ICAO Code: KLC Airline Name: RwandAir ICAO Code: RWD Airline Name: Avianca Honduras ICAO Code: ISV Airline Name: THAI Smile ICAO Code: THD Airline Name: Widerøe ICAO Code: WIF Airline Name: White Airways ICAO Code: WHT Airline Name: Edelweiss Air ICAO Code: EDW Airline Name: Winair ICAO Code: WIA Airline Name: Swift Air ICAO Code: SWQ Airline Name: Wasaya Airways ICAO Code: WSG Airline Name: Jetways Airlines ICAO Code: JWX Airline Name: Westair Aviation ICAO Code: WAA Airline Name: Oman Air ICAO Code: OMA Airline Name: Red Wings ICAO Code: RWZ Airline Name: Alaska Seaplanes ICAO Code: None Airline Name: Air Europa Express ICAO Code: OVA Airline Name: Corendon Airlines ICAO Code: CAI Airline Name: JetSuiteX ICAO Code: JSX Airline Name: Air Corsica ICAO Code: CCM Airline Name: XpressAir ICAO Code: XAR Airline Name: Corendon Airlines Europe ICAO Code: CXI Airline Name: Indonesia AirAsia X ICAO Code: IDX Airline Name: African Express Airways ICAO Code: AXK Airline Name: Air Century ICAO Code: CEY Airline Name: AB Aviation ICAO Code: AYD Airline Name: NordStar ICAO Code: TYA Airline Name: Suparna Airlines ICAO Code: YZR Airline Name: Kish Air ICAO Code: IRK Airline Name: Yamal Airlines ICAO Code: LLM Airline Name: YANAIR ICAO Code: ANR Airline Name: Yangon Airways ICAO Code: AYG Airline Name: Asian Wings Airways ICAO Code: AWM Airline Name: Avia Traffic Company ICAO Code: AVJ Airline Name: Libyan Wings ICAO Code: LWA Airline Name: Montenegro Airlines ICAO Code: MGX Airline Name: Air Creebec ICAO Code: CRQ Airline Name: Heli Air Monaco ICAO Code: MCM Airline Name: Perimeter Aviation ICAO Code: PAG Airline Name: TAR Aerolineas ICAO Code: LCT Airline Name: HOP! Regional ICAO Code: RAE Airline Name: Yeti Airlines ICAO Code: NYT Airline Name: EuroAtlantic Airways ICAO Code: MMZ Airline Name: Amaszonas Uruguay ICAO Code: AUZ Airline Name: Amaszonas ICAO Code: AZN Airline Name: Bek Air ICAO Code: BEK Airline Name: Sky Angkor Airlines ICAO Code: SWM Airline Name: Iberia Regional by Air Nostrum ICAO Code: ANE Airline Name: Vietnam Airlines ICAO Code: HVN Airline Name: Vueling ICAO Code: VLG Airline Name: Golden Myanmar Airlines ICAO Code: GMR Airline Name: NokScoot ICAO Code: NCT Airline Name: Philippines AirAsia ICAO Code: APG Airline Name: SEAir International ICAO Code: SGD Airline Name: Thai AirAsia X ICAO Code: TAX Airline Name: Sevenair ICAO Code: RVP Airline Name: Vietjet ICAO Code: VJC Airline Name: SunExpress ICAO Code: SXS Airline Name: SunExpress Deutschland ICAO Code: SXD Airline Name: TUI fly Deutschland ICAO Code: TUI Airline Name: Wizz Air ICAO Code: WZZ Airline Name: EasyFly ICAO Code: EFY Airline Name: Viva Aerobus ICAO Code: VIV Airline Name: Volaris ICAO Code: VOI Airline Name: Flynas ICAO Code: KNE Airline Name: Southwest Airlines ICAO Code: SWA Airline Name: Sunwing Airlines ICAO Code: SWG Airline Name: ViaAir ICAO Code: SRY Airline Name: WestJet ICAO Code: WJA Airline Name: WestJet Encore ICAO Code: WEN Airline Name: Swoop ICAO Code: WSW Airline Name: Aigle Azur ICAO Code: AAF Airline Name: Regional Express ICAO Code: RXA Airline Name: Zoom Air ICAO Code: ZOM Airline Name: Paranair ICAO Code: AZP Airline Name: Azman Air ICAO Code: AZM Airline Name: Air Canada Express ICAO Code: GGN Airline Name: Hi Fly Malta ICAO Code: HFM Airline Name: EVA Air ICAO Code: EVA Airline Name: Adria Airways ICAO Code: ADR Airline Name: Ethiopian Airlines ICAO Code: ETH Airline Name: Austrian Airlines ICAO Code: AUA Airline Name: All Nippon Airways ICAO Code: ANA Airline Name: Shenzhen Airlines ICAO Code: CSZ Airline Name: LATAM Argentina ICAO Code: DSM Airline Name: BA CityFlyer ICAO Code: CFE Airline Name: Globus Airlines ICAO Code: GLP Airline Name: J-Air ICAO Code: JLJ Airline Name: Qatar Executive ICAO Code: QQE Airline Name: Jiangxi Air ICAO Code: CJX Airline Name: Korean Air ICAO Code: KAL Airline Name: Garuda Indonesia ICAO Code: GIA Airline Name: Joon ICAO Code: JON Airline Name: Turpial Airlines ICAO Code: VTU Airline Name: Air Manas ICAO Code: MBB Airline Name: Cebgo ICAO Code: SRQ Airline Name: Cebu Pacific ICAO Code: CEB Airline Name: Air New Zealand ICAO Code: ANZ Airline Name: Scoot ICAO Code: TGW Airline Name: Hi Fly ICAO Code: HFY Airline Name: Hibernian Airlines ICAO Code: HBN .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/04/28/Binary-Math-and-Truth-Tables.html",
            "relUrl": "/2023/04/28/Binary-Math-and-Truth-Tables.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Pandas - Mati & Caleb",
            "content": "before we start this portion of the lesson: . check if you have pip installed since we are going to be installing some libraries today!!!!!! if you arnt sure if you have pip, check it by running this command: . pip . if your terminal says &quot;command not found&quot; or something else on linux, run this: . python3 -m ensurepip --default-pip . Overview: . Pandas is a powerful tool in Python that is used for data analysis and manipulation. In this lesson, we will explore how to use Pandas to work with datasets, analyze them, and visualize the results. . Learning Objectives: . By the end of this lesson, students should be able to: . Understand what Pandas is and why it is useful for data analysis | Load data into Pandas and create tables to store it | Use different functions in Pandas to manipulate data, such as filtering, sorting, and grouping | Visualize data using graphs and charts | . Question . Who here has used numpy???? . (should be all odf you because all of you have used it in this class before. ) . what is pandas? . no not this . this: . Pandas is a Python library used for data analysis and manipulation. | it can handle different types of data, including CSV files and databases. | it also allows you to create tables to store and work with your data. | it has functions for filtering, sorting, and grouping data to make it easier to work with. | it also has tools for visualizing data with graphs and charts. | it is widely used in the industry for data analysis and is a valuable skill to learn. | companies that use Pandas include JPMorgan Chase, Google, NASA, the New York Times, and many others. | . Question #2 &amp; 3: . which companies use pandas? | what is pandas? | . but why is pandas useful? . it can provides tools for handling and manipulating tabular data, which is a common format for storing and analyzing data. | it can handle different types of data, including CSV files and databases. | it allows you to perform tasks such as filtering, sorting, and grouping data, making it easier to analyze and work with. | it has functions for handling missing data and can fill in or remove missing values, which is important for accurate data analysis. | it also has tools for creating visualizations such as graphs and charts, making it easier to communicate insights from the data. | it is fast and efficient, even for large datasets, which is important for time-critical data analysis. | it is widely used in the industry and has a large community of users and developers, making it easy to find support and resources. | . Question #4: . why is pandas useful? | . how do i flipping use it? its so hard, my puny brain cant understand it . it is actually really simple . here is numpy doing simple math: . import pandas as pd df = pd.read_csv(&#39;yourcsvfileidcjustpickoneidiot.csv&#39;) print(df.head()) print(&quot;Average age:&quot;, df[&#39;Age&#39;].mean()) females = df[df[&#39;Gender&#39;] == &#39;Female&#39;] print(females) sorted_data = df.sort_values(by=&#39;Salary&#39;, ascending=False) print(sorted_data) . ModuleNotFoundError Traceback (most recent call last) Cell In[2], line 1 -&gt; 1 import pandas as pd 3 # Read the CSV file into a Pandas DataFrame 4 df = pd.read_csv(&#39;example.csv&#39;) ModuleNotFoundError: No module named &#39;pandas&#39; . uh oh!!! no pandas 😢 . if see this error, enter these into your terminal: . pip install wheel pip install pandas . on stack overflow, it said pandas is disturbed through pip as a wheel. so you need that too. . link to full forum if curious: https://stackoverflow.com/questions/33481974/importerror-no-module-named-pandas . ps: do this for this to work on ur laptop: . wget https://raw.githubusercontent.com/KKcbal/amongus/master/_notebooks/files/example.csv . example code on how to load a csv into a chart . import pandas as pd # read the CSV file df = pd.read_csv(&#39;example.csv&#39;) # print the first five rows print(df.head()) # define a function to assign each age to an age group def assign_age_group(age): if age &lt; 30: return &#39;&lt;30&#39; elif age &lt; 40: return &#39;30-40&#39; elif age &lt; 50: return &#39;40-50&#39; else: return &#39;&gt;50&#39; # apply the function to the Age column to create a new column with age groups df[&#39;Age Group&#39;] = df[&#39;Age&#39;].apply(assign_age_group) # group by age group and count the number of people in each group age_counts = df.groupby(&#39;Age Group&#39;)[&#39;Name&#39;].count() # print the age group counts print(age_counts) . Name Age Gender Occupation 0 John Doe 32 Male Engineer 1 Jane Smith 27 Female Teacher 2 Mike Johnson 45 Male Manager 3 Sara Lee 38 Female Doctor 4 David Kim 23 Male Student Age Group 30-40 7 40-50 4 &lt;30 7 Name: Name, dtype: int64 . how to manipulate the data in pandas. . import pandas as pd # load the csv file df = pd.read_csv(&#39;example.csv&#39;) # print the first five rows print(df.head()) # filter the data to include only people aged 30 or older df_filtered = df[df[&#39;Age&#39;] &gt;= 30] # sort the data by age in descending order df_sorted = df.sort_values(&#39;Age&#39;, ascending=False) # group the data by gender and calculate the mean age for each group age_by_gender = df.groupby(&#39;Gender&#39;)[&#39;Age&#39;].mean() # print the filtered data print(df_filtered) # print the sorted data print(df_sorted) # print the mean age by gender print(age_by_gender) . Name Age Gender Occupation 0 John Doe 32 Male Engineer 1 Jane Smith 27 Female Teacher 2 Mike Johnson 45 Male Manager 3 Sara Lee 38 Female Doctor 4 David Kim 23 Male Student Name Age Gender Occupation 0 John Doe 32 Male Engineer 2 Mike Johnson 45 Male Manager 3 Sara Lee 38 Female Doctor 6 Robert Green 41 Male Architect 7 Emily Davis 35 Female Marketing Manager 8 Carlos Hernandez 47 Male Entrepreneur 10 Kevin Lee 31 Male Accountant 12 Jacob Johnson 34 Male Lawyer 13 Maria Rodriguez 39 Female Consultant 15 Victoria Brown 42 Female Human Resources Manager 17 Sophie Lee 30 Female Project Manager Name Age Gender Occupation 8 Carlos Hernandez 47 Male Entrepreneur 2 Mike Johnson 45 Male Manager 15 Victoria Brown 42 Female Human Resources Manager 6 Robert Green 41 Male Architect 13 Maria Rodriguez 39 Female Consultant 3 Sara Lee 38 Female Doctor 7 Emily Davis 35 Female Marketing Manager 12 Jacob Johnson 34 Male Lawyer 0 John Doe 32 Male Engineer 10 Kevin Lee 31 Male Accountant 17 Sophie Lee 30 Female Project Manager 5 Anna Garcia 29 Female Software Developer 14 Mark Taylor 28 Male Web Designer 1 Jane Smith 27 Female Teacher 11 Rachel Baker 26 Female Journalist 9 Melissa Nguyen 25 Female Graphic Designer 16 Ethan Chen 24 Male Research Assistant 4 David Kim 23 Male Student Gender Female 32.333333 Male 33.888889 Name: Age, dtype: float64 . how do i put it into a chart &#128553; . here is how: . import pandas as pd import matplotlib.pyplot as plt # read the CSV file df = pd.read_csv(&#39;example.csv&#39;) # create a bar chart of the number of people in each age group age_groups = [&#39;&lt;30&#39;, &#39;30-40&#39;, &#39;40-50&#39;, &#39;&gt;50&#39;] age_counts = pd.cut(df[&#39;Age&#39;], bins=[0, 30, 40, 50, df[&#39;Age&#39;].max()], labels=age_groups, include_lowest=True).value_counts() plt.bar(age_counts.index, age_counts.values) plt.title(&#39;Number of people in each age group&#39;) plt.xlabel(&#39;Age group&#39;) plt.ylabel(&#39;Number of people&#39;) plt.show() # create a pie chart of the gender distribution gender_counts = df[&#39;Gender&#39;].value_counts() plt.pie(gender_counts.values, labels=gender_counts.index, autopct=&#39;%1.1f%%&#39;) plt.title(&#39;Gender distribution&#39;) plt.show() # create a scatter plot of age vs. income plt.scatter(df[&#39;Age&#39;], df[&#39;Income&#39;]) plt.title(&#39;Age vs. Income&#39;) plt.xlabel(&#39;Age&#39;) plt.ylabel(&#39;Income&#39;) plt.show() . ModuleNotFoundError Traceback (most recent call last) Cell In[55], line 2 1 import pandas as pd -&gt; 2 import matplotlib.pyplot as plt 4 # read the CSV file 5 df = pd.read_csv(&#39;example.csv&#39;) ModuleNotFoundError: No module named &#39;matplotlib&#39; . uh oh!!!! another error!??!!??!?! install this library: . pip install matplotlib . import pandas as pd import matplotlib.pyplot as plt import numpy as np # read the CSV file df = pd.read_csv(&#39;example.csv&#39;) # define age groups age_groups = [&#39;&lt;30&#39;, &#39;30-40&#39;, &#39;40-50&#39;, &#39;&gt;50&#39;] # create a new column with the age group for each person df[&#39;Age Group&#39;] = pd.cut(df[&#39;Age&#39;], bins=[0, 30, 40, 50, np.inf], labels=age_groups, include_lowest=True) # group by age group and count the number of people in each group age_counts = df.groupby(&#39;Age Group&#39;)[&#39;Name&#39;].count() # create a bar chart of the age counts age_counts.plot(kind=&#39;bar&#39;) # set the title and axis labels plt.title(&#39;Number of People in Each Age Group&#39;) plt.xlabel(&#39;Age Group&#39;) plt.ylabel(&#39;Number of People&#39;) # show the chart plt.show() . magic!!!!!! . Hacks . make your own data using your brian, google or chatgpt, should look different than mine. | modify my code or write your own | output your data other than a bar graph. | write an 850+ word essay on how pandas, python or irl, affected your life. If AI score below 85%, then -1 grading point | answer the questions below, the more explained the better. | Questions . What are the two primary data structures in pandas and how do they differ? | How do you read a CSV file into a pandas DataFrame? | How do you select a single column from a pandas DataFrame? | How do you filter rows in a pandas DataFrame based on a condition? | How do you group rows in a pandas DataFrame by a particular column? | How do you aggregate data in a pandas DataFrame using functions like sum and mean? | How do you handle missing values in a pandas DataFrame? | How do you merge two pandas DataFrames together? | How do you export a pandas DataFrame to a CSV file? | What is the difference between a Series and a DataFrame in Pandas? | note . all hacks due saturday night, the more earlier you get them in the higher score you will get. if you miss the due date, you will get a 0. there will be no tolerance. . no questions answered . Tonight- 2.9 . Friday Night- 2.8 . Saturday Night - 2.7 . Sunday Night - 0.0 . questions answered . Tonight- 3.0 . Friday Night- 2.9 . Saturday Night - 2.8 . Sunday Night - 0.0 . wdfasdf .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/lesson/2023/04/27/pandas.html",
            "relUrl": "/jupyter/lesson/2023/04/27/pandas.html",
            "date": " • Apr 27, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Data Analysis Hacks",
            "content": "Pandas Hacks . make your own data using your brian, google or chatgpt, should look different than mine. | modify my code or write your own | output your data other than a bar graph. | answer the questions below, the more explained the better. ### Questions (0.9) | What are the two primary data structures in pandas and how do they differ? | The two primary data structures in pandas are CSV files and databases. | . How do you read a CSV file into a pandas DataFrame? | To read a CSV file into a pandas DataFrame, you can use the read_csv function in pandas. | . How do you select a single column from a pandas DataFrame? | To select a single column from a pandas DataFrame, you can use the indexing operator [] with the column name | . How do you filter rows in a pandas DataFrame based on a condition? | To filter rows in a pandas DataFrame based on a condition, you can use boolean indexing. | . How do you group rows in a pandas DataFrame by a particular column? | To group rows in a pandas DataFrame by a particular column, you can use the groupby method. | . How do you aggregate data in a pandas DataFrame using functions like sum and mean? | To aggregate data in a pandas DataFrame using functions like sum and mean, you can use the agg method. | . How do you handle missing values in a pandas DataFrame? | To handle missing values in a pandas DataFrame, you can use the fillna method to fill in missing values with a specific value or method, or you can use the dropna method to remove rows with missing values. | . How do you merge two pandas DataFrames together? | To merge two pandas DataFrames together, you can use the merge method | . How do you export a pandas DataFrame to a CSV file? | To export a pandas DataFrame to a CSV file, you can use the to_csv method | . What is the difference between a Series and a DataFrame in Pandas? | The main difference between a Series and a DataFrame in pandas is that a Series is a one-dimensional array-like object, while a DataFrame is a two-dimensional table-like data structure. A Series can be thought of as a single column of a DataFrame, while a DataFrame can have multiple columns. | .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/04/27/datanalysishacks.html",
            "relUrl": "/2023/04/27/datanalysishacks.html",
            "date": " • Apr 27, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "P4-Y 4/24 DevOps for Dev Tools",
            "content": "KASM HACKS: . In 3-4 sentences, please explain the significance of virtual desktops and KASM. How can virtual desktops such as these be utilized in our AP CSP environment? (0.45) Virtual desktops are a technology that allows users to access and use remote computing resources, such as operating systems and applications, from any device with internet access. KASM (Kali Application Streaming Manager) is a specialized virtual desktop environment designed for cybersecurity education, providing a safe and controlled environment for learning and practicing cybersecurity skills, particularly with the Kali Linux operating system. In an AP CSP (Advanced Placement Computer Science Principles) environment, virtual desktops like KASM can be utilized to provide students with hands-on experience in cybersecurity concepts and skills, without the need for expensive hardware or risking damage to real systems. Students can learn and practice cybersecurity techniques in a controlled environment, honing their skills in a safe and secure manner. . | Attempt to work through the KASM setup with your team. Attach two screenshots to show that you have successfully gone through the setup: The first screenshot of KASM generating your credentials, and the second screenshot of the KASM workspace once you have logged in. (0.45) . | This is how far I got . AWS DATABASES HACKS: . QUIZ: https://vardaansinha.github.io/devops/2023/04/23/DifferentAWS.html C | A | C | | QUIZ #2: https://vardaansinha.github.io/devops/2023/04/02/AWSSQL.html C | D | C | | DuckDNS and AWS HACKS: . HACK 1: Create a diagram (Canva). What are the pros and cons of using DuckDNS? Show a diagram of an application running on AWS using a DuckDNS system. | . HACK 2: Write a reflection. Why do we use DNS? How does DuckDNS work? What makes DuckDNS unique? How is DuckDNS useful for our projects? What are the steps to setup DuckDNS? DNS is essential for accessing websites using domain names instead of IP addresses. DuckDNS is a free dynamic DNS service that provides a stable domain name for devices with dynamic IP addresses. It&#39;s simple to set up and versatile for different projects. DuckDNS can be used for self-hosted services, remote access to home networks, and IoT projects. To set up DuckDNS, sign up for a free account, configure your router to update your IP address with DuckDNS, and test your domain name to ensure it&#39;s working correctly. Overall, DuckDNS is a convenient and free option for hosting services from home or accessing devices remotely. . | HACK 4: In 2-3 complete sentences, talk about any outdated Nginx/Docker functionalities that may need to be addressed or any confusions you may have in regards to the deployment process from Trimesters 1 and 2. It&#39;s important to stay updated with the latest versions of Nginx/Docker and to be aware of any deprecated features or changes in the deployment process. It&#39;s also helpful to have a clear understanding of the underlying technologies and best practices for configuring and securing your server. . | HACK 5: Create a Venn Diagram comparing Nginx with Lighttpd. . | . HACK 6: Complete the Python quiz and attach your output from the notebook (should be done once you do the quiz.) | Hello, kcabralomana running /home/kcabralomana/anaconda3/bin/python You will be asked 11 questions. Are you ready to take a test! Press Enter key to begin. Best of luck :) Question 1 : What does Domain Name Server represent? is incorrect! Better Luck next time. Question 2 : What does this Represent: Amazon Web Services, which is a cloud computing platform provided by Amazon. AWS is correct! Good Job! Question 3 : What is the first Step to setting up an AWS Server? 1: Connecting to a Ubuntu EC2 Instance, 2: Start updating the system, 3: Clone the repository which one wishes to deploy, 4: Run the command: main.py to start the project 1 is correct! Good Job! Question 4 : What is the third Step to setting up an AWS Server? 1: Connecting to a Ubuntu EC2 Instance, 2: Start updating the system, 3: Clone the repository which one wishes to deploy, 4: Run the command: main.py to start the project 3 is correct! Good Job! Question 5 : What is the fourth Step to setting up an AWS Server? 1: Connecting to a Ubuntu EC2 Instance, 2: Start updating the system, 3: Clone the repository which one wishes to deploy, 4: Run the command: main.py to start the project .4 is correct! Good Job! Question 6 : What is the second Step to setting up an AWS Server? 1: Connecting to a Ubuntu EC2 Instance, 2: Start updating the system, 3: Clone the repository which one wishes to deploy, 4: Run the command: main.py to start the project 2 is correct! Good Job! Question 7 : What files are you supposed to edit after finishing the first steps of setting up the server and cloning it within the AWS Server? 1: Edit the docker files and docker.yml, 2: Edit the main.py file to change the characteristcs. 1 is correct! Good Job! Question 8 : What is the first step to setting up a DuckDNS Server? 1: Sign in with your DuckDNS account using Github, 2: Configure current ip to the IP address that you want to access and click update ip button , 3: Create the subdomain, 4: Access site by typing in subdomain.duckdns.org 1 is correct! Good Job! Question 9 : What is the second step to setting up a DuckDNS Server? 1: Sign in with your DuckDNS account using Github, 2: Configure current ip to the IP address that you want to access and click update ip button , 3: Create the subdomain, 4: Access site by typing in subdomain.duckdns.org 3 is correct! Good Job! Question 10 : What is the third step to setting up a DuckDNS Server? 1: Sign in with your DuckDNS account using Github, 2: Configure current ip to the IP address that you want to access and click update ip button , 3: Create the subdomain, 4: Access site by typing in subdomain.duckdns.org 2 is correct! Good Job! Question 11 : What is the fourth step to setting up a DuckDNS Server? 1: Sign in with your DuckDNS account using Github, 2: Configure current ip to the IP address that you want to access and click update ip button , 3: Create the subdomain, 4: Access site by typing in subdomain.duckdns.org 4 is correct! Good Job! kcabralomana you scored 10/11 Total Percentage: 90.91% . CERTBOT HACKS: . Follow the instructions below and provide a full screenshot of all terminal commands after and including sudo certbot --apache all the way until it asks for the domain you want to secure. At this point you can take a screenshot and cancel the process. If you choose to continue the setup process and get Certbot fully working and show a before and after screenshot of your domain with http amd https connection we will grant extra credit points on hacks, or make up for lost points in other areas. | . It wouldn&#39;t let me register . Research and compare the security features of OpenSSL and LibreSSL, and write about the recent vulnerabilities within it. Write about your research in a fastpages blog post. It can be the same post that has your screenshot for the Certbot Hacks. | OpenSSL and LibreSSL are both open-source cryptographic libraries used to secure network communications. While OpenSSL is more widely used and feature-rich, LibreSSL prioritizes security and maintainability over performance and features [2]. However, despite its aim to increase security, LibreSSL had some vulnerabilities that did not affect OpenSSL, such as CVE-2017-8301 [1]. Both libraries have reported CVEs, but OpenSSL has a longer history of vulnerabilities. C language is still used for cryptographic code due to its advantages in optimization and avoiding timing attacks, but there is a debate about whether it is the best language for all aspects of OpenSSL [2]. It is important to stay updated with the latest versions of Nginx/Docker and to be aware of any deprecated features or changes in the deployment process [2]. Additionally, one should have a clear understanding of the underlying technologies and best practices for configuring and securing the server [2][3]. . References: [1] Comparing OpenSSL with LibreSSL [2] OpenSSL vs LibreSSL before the 2nd critical is revealed [3] LibreSSL: The Secure OpenSSL Alternative - Infosec Resources . SCORING GUIDELINES: . As talked about in class, we&#39;ll be looking for effort in the hacks. Though some setups may inevitably not work, we want to see that you took a stab at it and that you understand what the errors you&#39;re getting might mean. . FOR 2/4 SECTIONS OF HACKS COMPLETE: HIGHEST WILL BE A 3.2/4 POSSIBLE --&gt; 0.8/1 . FOR 3/4 SECTIONS OF HACKS COMPLETE: HIGHEST WILL BE A 3.6/4 POSSIBLE --&gt; 0.9/1 . FOR 4/4 SECTIONS OF HACKS COMPLETE: YOU CAN GET UP TO A 4/4 --&gt; 1/1 .",
            "url": "https://kcabralomana.github.io/Fastpages/student/2023/04/25/devopshacks.html",
            "relUrl": "/student/2023/04/25/devopshacks.html",
            "date": " • Apr 25, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "2018 Practice MC",
            "content": "Reflection . . I scored a 63/66, 95% . Q1 . . My answer: (A) . Correct answer: (B) . This option is incorrect. The code segment assigns the initial value of first to temp, then assigns the initial value of second to first. The initial value of second, which has been stored in first, is then assigned to second. Therefore, the value of second has not changed from its initial value. . Q11 . . My answer: (C) . Correct answer: (D) . This option is incorrect. The code segment selects “Red” one-sixth of the time, “Yellow” one-sixth of the time, and “Blue” the remaining two-thirds of the time. . Q41 . . My answer: (A) . Correct answer: (B) . This option is incorrect. This expression assigns only one score to One word, adjusted Total. . Conclusion . Overall I am feeling ready for the MCQ for the AP exam. One thing I am worried about is the timing of the test. I need to fix my pacing for each question as I see myself taking longer on some questions. I also need to double check my answers since I see myself misinterpreting some questions. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/04/17/2018mc.html",
            "relUrl": "/markdown/2023/04/17/2018mc.html",
            "date": " • Apr 17, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Tri 3 CPT Write-Up",
            "content": "Tri 3 CPT Write-Up . 3a. Program Purpose and Function . i. Describes the overall purpose of the program. . The purpose of the program is to create a way for users to test their luck with the Roulette casino game. . ii. Describes what functionality of the program is demonstrated in the video. . The video shows a user playing through the game while. The user enters a desired username and clicks the “create” button, creating a new user with 50 coins to start. User then places bets by clicking on squares that have are not occupied by bet elements. User then click the “spin” button randomly selecting a square, user loses since a bet element was not placed on winning square. User then reloads page and re-enters username. This time clicking the load button updating the users coins that have been stored. User then places more bets on square changing the coin amount. . iii. Describes the input and output of the program demonstrated in the video. . The inputs in the video are the user typing in the username, creating the user, placing coins on board, spinning board, and loading user. The outputs demonstrated in the video are the winning/losing square, and change in coins for the user. . 3b. Data Abstraction . i. The first program code segment must show how data have been stored in the list. . . ii. The second program code segment must show the data in the same list being used, such as creating new data from the existing data or accessing multiple elements in the list, as part of fulfilling the program’s purpose . . iii. Identifies the name of the list being used in this response. . The name of the list being used is “game.eles” . iv. Describes what the data contained in the list represent in your program. . The data in “game.eles” is the the square elements on the game board, the numbers that users can bet on in the game. . v. Explains how the selected list manages complexity in your program code by explaining why your program code could not be written, or how it would be written differently, if you did not use the list. . “game.eles” manages complexity by storing all of the different squares that a user can bet on into an array. This is crucial because it allows the program to be able to generate a random value within the the array to pick the winning square. This allows to the avoidance of having to use many variable to store each element in “game.eles” which would be difficult to manage due to the amount of elements. The program could not be written without “game.eles” because it it used to access, style, and manipulate elements throughout the program. . 3c . i. The first program code segment must be a student-developed procedure that:- Defines the procedure’s name and return type (if necessary)- Contains and uses one or more parameters that have an effect on the functionality of the procedure . . ii. The second program code segment must show where your student-developed procedure is being called in your program. . . iii. Describes in general what the identified procedure does and how it contributes to the overall functionality of the program. . The procedure identified is “createEle”. The identified procedure allows for the process of creating new HTML elements allowing to define many properties of the new element in a single function. It helps create user interface in a way that allows for more concise and maintainable code. . iv. Explains in detailed steps how the algorithm implemented in the identified procedure works. Your explanation must be detailed enough for someone else to recreate it. . The procedure is able to create elements by using the parameters, parent (parent element to where the new element will be appended), eleType (the type of HTML element), html (the inner HTML content), and eleClass (the class name that will be added to the element). It creates a new element using the parameter “eleType” for the elements desired type as well as the method “document.createElement” to create the element, storing it in the variable “ele”. Then it takes the value set for the parameter “html” to set the inner HTML using the “innerHTML” property. Then it takes the value set for the parameter “eleClass” to add the class to the element using the “classList.add” method. Lastly it takes the value set for the parameter “parent” to append the element to its parent element using the “appendChild” method. . 3d. . i. Describes two calls to the procedure identified in written response 3c. Each call must pass a different argument(s) that causes a different segment of code in the algorithm to execute . Call 1: User clicks spin button and betted on winning square . Call 2: User clicks square to bet on . ii. Describes what condition(s) is being tested by each call to the procedure. . Condition(s) tested by call 1: Condition being tested in call 1 is if square is with random value from 1-67 is occupied by a bet element . Condition(s) tested by call 2:Condition being tested in call 2 is whether the square has bet element it will remove bet element, add bet element when not occupied. . iii. Identifies the result of each call . Result of the call 1: All bets are cleared from board and a new bet element is added to winning square . Result of the call 2: A bet element is added to square the user clicks .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/04/16/tri3cpt.html",
            "relUrl": "/markdown/2023/04/16/tri3cpt.html",
            "date": " • Apr 16, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Computers and Networks (Unit 4)",
            "content": "Requirements . Work through College Board Unit 4… blog, add definitions, and pictures. Be creative, for instance make a story of Computing and Networks that is related to your PBL experiences this year. . How a Computer Works . As we have learned, a computer needs aa program to do something smart. The sequence of a program initiates a series of actions with the computers Central Processing Unit (CPU). This component is essentially a binary machine focussing on program instructions provided. The CPU retrieives and stores the data it acts upon in Random Access Memory (RAM). Between the CPU, RAM, and Storage Devices a computer can work with many programs and large amounts of data. . List specification of your Computer, or Computers if working as Pair/Trio Processor AMD Ryzen 5 5625U with Radeon Graphics, 2301 Mhz, 6 Core(s), 12 Logical Processor(s) . Processor GHz: 3.3 GHz(Clock speed of a computer’s CPU) | Memory in GB: 16 GB | Storage in GB: 246 GB | OS: Microsoft Windows 11 Home | . Define or describe usage of Computer using Computer Programs. Pictures are preferred over a lot of text. Use your experience. . Input devices: Hardware components that allow users to interact with a computer by providing it with data or instructions. Ex. Mouse, Touchscreen, Microphone, Webcam | Output devices: Hardware components that display data processed by a computer to the user. Ex. Monitor, Printer, Projector | File: Collection of data/info that is stored in a specific location in a computer. Can contain text, images, audio, video, etc. | Program Code: Written set of instructions that tells your computer how to perform a specific task. It is written in a programming language and compiled into a program file. | Processes: Individual programs or tasks that are running on your computer’s operating system. | Ports: Communication endpoints that allow data to be exchanged between devices or applications in a computer network. | Data File: File that contains data or information that can be used by a program. Examples include text files, images, and spreadsheets. | Inspect Running : The process of examining the code that is currently executing on your computer to troubleshoot or debug issues. | Inspect Variables: Process of examining the variables, or named storage locations, in a program’s code to understand how they are being used and how they are affecting the program’s behavior. | . . The Internet . Watch/review College Board Daily Video for 4.1.1 . Essential Knowledge A computing device is a physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors. | A computing system is a group of computing devices and programs working together for a common purpose. | A computer network is a group of interconnected computing devices capable of sending or receiving data. | A computer network is a type of computing system. | A path between two computing devices on a computer network (a sender and a receiver) is a sequence of directly connected computing devices that begins at the sender and ends at the receiver. | Routing is the process of finding a path from sender to receiver. | The bandwidth of a computer network is the maximum amount of data that can be sent in a fixed amount of time. | Bandwidth is usually measured in bits per second | . | Complete Vocabulary Matching Activity. Incorporate this into your learnings from year. To analyze measure path and latency use traceroute and ping commands from Linux Terminal. A Path: Sequence of directly connected computing devices that begins at sender and ends at receiver | E Route: Process of finding a path from sender to receiver | B Computer System: A group of computing devices working together for a joint purpose | C Computer Device: Physical artifact that can run a program. Ex. Computers, tablets, servers, routers, etc. | D Bandwidth: Max amount of data that can be sent in a fixed amount of time on a computer network | F Computer Network: Type of computing system. A group of interconnected computers that can send and recieve data to each other | Extra to know: Computers talk through packet Switching: The message (file) is broken up into packets and send in any order. The packets are reassembled by the recipient’s device. A packet is a small amount of data sent through network, contains source and destination info | . | . Watch/review College Board Daily Video 4.1.2 . Complete True of False Questions . | Essential Knowledge . The internet is a computer network consisting of interconnected networks that use standardized, open (nonproprierary) communication protocols. | Access to the internet depends on the ability to connect a computing device to an internet connected device. | A protocol is an agreed-upon set of rules that specify the behavior of a system. | The protocols used in the internet are open, which allows users to easily connect additional computing devices to the internet. | Routing on the internet is usually dynamic; it is not specified in advance | The scalability of a system is the capacity for the system to change in size and scale to meet new demands. | The internet was designed to be scalable | Information is passed through the internet as a data stream. Data streams contain chunks of data, which are encapsulated in packets. | Packets contain a chunk of data and metadata used for routing the packet between the origin and the destination on the internet, as well as for data reassembly. | Packets may arrive at the destination in order, out of order, or not at all | IP, TCP and UDP are common protocols used on the internet. | The world wide web is a system of linked pages, programs, and files. | HTTP is a protocol used by the world wide web | The world wide web uses the internet | . | . Extra Notes . . Network Access: Hardware (ex. Internet cable, wifi cable) | Internet: Packers, Sender and receiver IP, metadata for routing information | Transport: TCP (error checking and error recovery very slow, 3-way handshake to verify delivery) &amp; UDP (error checking, discards erroneous packets) | Application: web services, domain name service, http/https(http w/ security) | World-Wide Web: linked data pages, NOT Internet . | Go over AP videos, vocabulary, and essential knowledge. Draw a diagram showing the internet and its many levels. A preferred diagram would using your knowledge of frontend, backend, deployment, etc. Picture would highligh vocabulary by illustration. The below illustration have some ideas | . . Complete True of False Questions T | F | F | T | F | F | T | | Often we draw pictures of machines communicating over the Internet with arrows. However, the real communication goes through protocol layers and the machine and then is trasported of the network. For College Board and future Computer Knowledge you should become familiar with the following … | . User Machine &lt;&gt; Frontend Server &lt;&gt; Backend Server +--+ +--+ +--+ | Browser | | GH Page | | Flask | +--+ ^ +--+ ^ +--+ | HTTP | | | HTTP | | | HTTP | +--+ | +--+ | +--+ | TCP | | | TCP | | | TCP | +--+ | +--+ | +--+ | IP | V | IP | V | IP | +--+ +--+ +--+ | Network | &lt;&gt; | Network | &lt;&gt; | Network | +--+ +--+ +--+ . The “http” layer is an application layer protocol in the TCP/IP stack, used for communication between web browsers and web servers. It is the protocol used for transmitting data over the World Wide Web. . The “transport” layer (TCP) is responsible for providing reliable data transfer between applications running on different hosts. The TCP protocol segments the data into smaller chunks called “segments”. Each segment contains a sequence number that identifies its position in the original stream of data, as well as other control information such as source and destination port numbers, and checksums for error detection. . The “ip” layer is responsible for packetizing data received from the TCP layer of the protocol stack, and then encapsulating the data into IP packets. The IP packets are then sent to the lower layers of the protocol stack for transmission over the network. . The “network” layer is responsible for routing data packets between networks using the Internet Protocol (IP). This layer handles tasks such as packet addressing and routing, fragmentation and reassembly, and network congestion control. . Fault Tolerance . Watch both Daily videos for 4.2 . NOT fault tolerant: Doesn’t use many resources, Failure in one network = fatal | Fault tolerant: Redundant and uses more resources. But even if one path goes down, a device can communicate with all other devices. Makes network stronger! | . Complete the network activity, summarize your understanding of fault tolerance. Fault tolerance is a network’s ability to withstand disconnections. Networks use many interconnected nodes to guarantee that no one or two interrupted connections can take down a system. You can tell if a network is fault tolerant by checking that even if one path goes down, every device can communicate with all other devices. | . Parallel and Distributed Computing . Review previous lecture on Parallel Computing and watch Daily vidoe 4.3. Think of ways to make something in you team project to utilize Cores more effectively. Here are some thoughts to add to your story of Computers and Networks… . Notes . Computer tasks: balance tasks so all CPUs used evenly and fully System tasks: scheduling what to do next, managing hardware, working with network | User tasks: executing programs that the user has selected | . | Sequential Computing: Tasks are done one after another | Parallel Computing: program broke into multiple smaller sequential computing programs, some at the same time! Normally on same computer | Hardware driven, faster operations, data driven, | . | Compare efficiency by execution time | Speed up time: time to complete task sequentially / time to complete task in parallel | Distributed Computing: sending of tasks from one computer to another, mix of sequential and parallel Solve problems that can’t be done with one computer bc of processing time/storage Ex. google web search | Needs a network | . | What is naturally Distributed in Frontend/Backend archeticture? . | Analyze this command in Docker: ENV GUNICORN_CMD_ARGS=&quot;--workers=1 --bind=0.0.0.0:8086&quot;. Determine if there is options are options in this command for parallel computing within the server that runs python/gunicorn. Here is an article | . Last week we discussed parallel computing on local machine. There are many options. Here is something to get parallel computing work with a tool called Ray. . Review this article… Can you get parallel code on images to work more effectively? I have not tried Ray. | . Code example from ChatGPT using squares. This might be more interesting if nums we generated to be a lot bigger. | . import ray # define a simple function that takes a number and returns its square def square(x): return x * x # initialize Ray ray.init() # create a remote function that squares a list of numbers in parallel @ray.remote def square_list(nums): return [square(num) for num in nums] # define a list of numbers to square nums = [1, 2, 3, 4, 5] # split the list into two parts split_idx = len(nums) // 2 part1, part2 = nums[:split_idx], nums[split_idx:] # call the remote function in parallel on the two parts part1_result = square_list.remote(part1) part2_result = square_list.remote(part2) # get the results and combine them result = ray.get(part1_result) + ray.get(part2_result) # print the result print(result) .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/04/05/AP_computers_networks.html",
            "relUrl": "/2023/04/05/AP_computers_networks.html",
            "date": " • Apr 5, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "MCQ 4",
            "content": "Reflection . . I scored a 47/50, 94% . Q1 . . My answer: (B) 70 seconds . Correct answer: (C) 80 seconds . Q34 . . My answer: (C) Show that for one instance of the problem, a heuristic is needed to write an algorithm that is capable of providing a correct yes-or-no answer. . Correct answer: (B) Show that for one instance of the problem, no algorithm can be written that is capable of providing a correct yes-or-no answer. . This statement does not provide enough information to conclude that the problem is undecidable. This states that a heuristic is used for one instance of the problem. If it could be shown that an algorithm can be constructed that is always capable of providing a correct yes-or-no answer for all other instances of this problem, then this problem would be decidable. . A decidable problem is one for which an algorithm can be constructed to produce a correct output for all inputs. If, for one instance of the problem, this is not possible, then this problem cannot be decidable. Therefore, it must be undecidable. . Q49 . . My answer: (C) . Correct answer: (A) . This code segment traverses the list beginning with the second element, so it is correctly comparing only the student scores to the maximum possible score. However, the code segment will fail to check the last element in the list. When index is equal to the length of the list, the loop will terminate without comparing the last student score in the list to the maximum possible score. . The correct code segment traverses the list beginning with the second element, so it is correctly comparing only student scores to the maximum possible score, which is found by accessing scores[1]. The variable found will only be set to true when a student’s score equals the maximum possible score. The code also sets the number of iterations to LENGTH(scores) - 1 to reflect that the first list element (maximum score) is skipped. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/04/03/MCQ-4.html",
            "relUrl": "/markdown/2023/04/03/MCQ-4.html",
            "date": " • Apr 3, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "CSUSM STEM Panel",
            "content": "Overview . Today we met ambassadors from Cal State San Marcos and they gave a presentation about CSUSM and the opportunities available to students. The presenters were and are hardworking people who never let failures define them. CSUSM is a a great university where many people can pursue various majors, including Applied Physics, Physics, Chemistry and Biochemistry, Biotechnology, Biological Studies, Math, Computer Science, Software Engineering, and Electrical Engineering. The presentation also touched on CSUSM’s clubs, such as the Cyber Security club, Robotics club, 3D printing club, Women in STEM, Society of Physics Students, and National Society of Black Engineers. The importance of internships was emphasized, and the presentation provided advice on how to find them, such as joining clubs, checking emails, attending campus events, and utilizing Google. It was recommended to avoid unpaid internships. Finally, the presentation highlighted two programs, the Summer Scholar Program, which is a ten-week summer program that pays its participants, and the Quantum Bridge Program, which is a paid program for admitted CSUSM students. . Reflection . Throughout this whole panel i have gained insights in the life of a college student and what it may be like when pursuing STEM in a higher education. As a student looking to pursue a STEM career in the future, the presentation was highly informative and motivating. The presenters’ emphasis on persistence and hard work despite facing failures is something that I will take as advice. It was encouraging to learn about the wide range of majors available at CSUSM. The presentation also highlighted the various clubs available on campus which provide excellent opportunities to connect with other students and participate in certain activities. Overall, the presentation has motivated me to consider CSUSM as a college I may look into and to take advantage of the various resources available on campus to further my education and career goals. . Pictures . . . . General Notes: . Presenters . Ambassadors from Cal State San marcos | Persistent, hard-working people who endured a lot of failures but never let that define them | Talks about CSUSM and how so many people are able to pursue so many majors | Applied Physics major CSUSM Pathways | Physics | Chemistry and biochemistry | Biotechnology | Biological Studies | Math | Computer Science | Software Engineering | Electrical Engineering CSUSM Clubs | Cyber Security club | Robotics club | 3D printing club | Women in STEM | Society of Physics Students | National Society of Black Engineers Internships: | A period of work experience offered by an organization for a limited period of time | How you can find one: Join clubs | Check your emails | Go to campus events; especially where people from local industries will be attending | Google is also your best friend - look up opportunities | . | Try to avoid unpaid internships Programs | Summer scholar Program: a 10 week summer program, kailtyn did this and got paid. | Quantum bridge program for admitted CSUSM students that get paid $1500 stipend Programs | 6000 for full time | 3000 for part time | Quantum bridge program 4 week prgram where you learn about quantum mechanics | Get paid 1500 Grants/scholarship Loans | . | College debt is scary | Subsdized load not accrue interest while in school | Unsub loan does accrue interest while you are in school How to get aid | fafsa studentaid.gov | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/03/28/eccsusm.html",
            "relUrl": "/markdown/2023/03/28/eccsusm.html",
            "date": " • Mar 28, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Create Performance Task Tri 2",
            "content": "Writeup - Roulette . 3.a. Program Purpose and Function . 3.a.i . This program is a way to test peoples luck and its purpose is to give a user a fun experience and see how they might turn out in a real Casino. . 3.a.ii . This program prompts a user to insert their username. After they create their our account with their coins they are able to place those coins on squares spanning on a 9x7 board. By placing a coin on a square they have a chance to win that bet once they spin. Once a play spins, a square will be selected and if the selected square is one that is betted their bet will multiply. A user can then load their account later with their amount of coins. . 3.a.iii . Inputs for the program would be the players username, bets placed, and spinning. The players username can either be loaded or created with respective buttons, while bets are placed on squares and spinning is prompted by a “spin” button. The out puts would display their coin counts after bets and after spins. . 3.b. Data Abstraction . 3.b.i . . 3.b.ii . . 3.b.iii. . The variable representing local storage is “user” which populates the collection type through an SQLite Database. . 3.b.iv. . The data that is being stored in local storage as user represents the number of coins that the user has. This is vital to the functionality of the program as it is able to do mathematical calculations with this data in order to update the user’s coin amount after the user has spun or bet. . 3.b.v. Managing Complexity . Local storage is an efficient and straightforward way to store and retrieve data in this section of the program, as it allows for easy updates and retrieval. Another approach to achieving the same functionality would involve fetching the user’s coin count every time the roulette feature requires an update on the coin amount. . 3.c. Procedural Abstraction . 3.c.i . . 3.c.ii . . 3.c.iii. . The procedure here is spinner(). As the name implies, this function is able to return a random integer between there numerical values that are passed into it as parameters. Using that integer it selects the square that matches that integer highlighting it purple if there was no bet. And if the bet was placed it highlights green. Using the bets it will update score according to the bet placed or if there was no bet placed on the square that will be highlighted. . 3.c.iv Algorithm Implementation . Spinner(), generates an animated sequence of characters that produces a spinner animation on the console. The spinner variable, a list of characters, represents each frame in the animation. Upon calling the function, an infinite while loop is entered, which prints the next character in the spinner list followed by a carriage return character. The carriage return moves the cursor back to the beginning of the line and allows for overwriting of the previously printed character to create the illusion of a rotating spinner. The function prints the last character in the spinner list before resetting the index variable to zero, so the animation restarts from the beginning of the list. The spinner function is a dynamic and interactive example of how Python’s built-in functions and constructs can be utilized to create engaging programs that add a creative touch. By calling this function, users can easily add a fun and interactive element to their Python programs. . 3.d. Testing . 3.d.i. . The first call in this function is selecting a random value for the selected squares. When the spinner button is clicked the function generates a random number for a selected square for the user. The second call is to remove the coins from the playing board and change the background color of the selected/betted square or non-betted square. . 3.d.ii. . The conditions tests by the first call are if the player was selected on the certain square the coins may be added to the total. The conditions tests by the second call are if the player didn’t selected the certain square . 3.d.iii. . The results of the first call are if the player placed a bet on the winning square, an alert is displayed with a winning statement and value of coins won. The results of the second call are if the player did not place a bet ont he winning square, an alert is displayed with a losing statement. . VID .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/03/26/CPT-Writeup.html",
            "relUrl": "/markdown/2023/03/26/CPT-Writeup.html",
            "date": " • Mar 26, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "Data Structures- Space and Time Complexity",
            "content": "Space and Time Complexity . Space complexity refers to the amount of memory used by an algorithm to complete its execution, as a function of the size of the input. The space complexity of an algorithm can be affected by various factors such as the size of the input data, the data structures used in the algorithm, the number and size of temporary variables, and the recursion depth. Time complexity refers to the amount of time required by an algorithm to run as the input size grows. It is usually measured in terms of the &quot;Big O&quot; notation, which describes the upper bound of an algorithm&#39;s time complexity. . Why do you think a programmer should care about space and time complexity? . A programmer should care about space and time to make the algorithm work more efficiently. I also believe that a programmer should care about space and time complexity because it directly affects the efficiency and scalability of their code. | . Take a look at our lassen volcano example from the data compression tech talk. The first code block is the original image. In the second code block, change the baseWidth to rescale the image. . from IPython.display import Image, display from pathlib import Path # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) if __name__ == &quot;__main__&quot;: lassen_volcano = image_data(images=[{&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}]) image_display(lassen_volcano) . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from io import BytesIO import base64 # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def scale_image(img): #baseWidth = 625 #baseWidth = 1250 #baseWidth = 2500 baseWidth = 5000 # see the effect of doubling or halfing the baseWidth #baseWidth = 10000 #baseWidth = 20000 #baseWidth = 40000 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size image[&#39;width&#39;], image[&#39;height&#39;] = img.size image[&#39;pixels&#39;] = image[&#39;width&#39;] * image[&#39;height&#39;] # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;scaled_width&#39;], image[&#39;scaled_height&#39;] = img.size image[&#39;scaled_pixels&#39;] = image[&#39;scaled_width&#39;] * image[&#39;scaled_height&#39;] # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data(images = [{&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}]) # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;], &quot; pixels: &quot;, f&quot;{image[&#39;pixels&#39;]:,}&quot;) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;], &quot; pixels: &quot;, f&quot;{image[&#39;scaled_pixels&#39;]:,}&quot;) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) pixels: 5,846,448 Scaled size: (5000, 3750) pixels: 18,750,000 -- original image -- . Do you think this is a time complexity or space complexity or both problem? . This is a both because space will be a problem for the scale and the scale is problem for the time. | . Big O Notation . Constant O(1) | Linear O(n) | Quadratic O(n^2) | Logarithmic O(logn) | Exponential (O(2^n)) | . numbers = list(range(1000)) print(numbers) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999] . Constant O(1) . Time . An example of a constant time algorithm is accessing a specific element in an array. It does not matter how large the array is, accessing an element in the array takes the same amount of time. Therefore, the time complexity of this operation is constant, denoted by O(1). . print(numbers[263]) ncaa_bb_ranks = {1:&quot;Alabama&quot;,2:&quot;Houston&quot;, 3:&quot;Purdue&quot;, 4:&quot;Kansas&quot;} #look up a value in a dictionary given a key print(ncaa_bb_ranks[1]) . 263 Alabama . Space . This function takes two number inputs and returns their sum. The function does not create any additional data structures or variables that are dependent on the input size, so its space complexity is constant, or O(1). Regardless of how large the input numbers are, the function will always require the same amount of memory to execute. . def sum(a, b): return a + b print(sum(90,88)) print(sum(.9,.88)) . 178 1.78 . Linear O(n) . Time . An example of a linear time algorithm is traversing a list or an array. When the size of the list or array increases, the time taken to traverse it also increases linearly with the size. Hence, the time complexity of this operation is O(n), where n is the size of the list or array being traversed. . for i in numbers: print(i) . 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 . Space . This function takes a list of elements arr as input and returns a new list with the elements in reverse order. The function creates a new list reversed_arr of the same size as arr to store the reversed elements. The size of reversed_arr depends on the size of the input arr, so the space complexity of this function is O(n). As the input size increases, the amount of memory required to execute the function also increases linearly. . def reverse_list(arr): n = len(arr) reversed_arr = [None] * n #create a list of None based on the length or arr for i in range(n): reversed_arr[n-i-1] = arr[i] #stores the value at the index of arr to the value at the index of reversed_arr starting at the beginning for arr and end for reversed_arr return reversed_arr print(numbers) print(reverse_list(numbers)) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999] [999, 998, 997, 996, 995, 994, 993, 992, 991, 990, 989, 988, 987, 986, 985, 984, 983, 982, 981, 980, 979, 978, 977, 976, 975, 974, 973, 972, 971, 970, 969, 968, 967, 966, 965, 964, 963, 962, 961, 960, 959, 958, 957, 956, 955, 954, 953, 952, 951, 950, 949, 948, 947, 946, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 935, 934, 933, 932, 931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916, 915, 914, 913, 912, 911, 910, 909, 908, 907, 906, 905, 904, 903, 902, 901, 900, 899, 898, 897, 896, 895, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 872, 871, 870, 869, 868, 867, 866, 865, 864, 863, 862, 861, 860, 859, 858, 857, 856, 855, 854, 853, 852, 851, 850, 849, 848, 847, 846, 845, 844, 843, 842, 841, 840, 839, 838, 837, 836, 835, 834, 833, 832, 831, 830, 829, 828, 827, 826, 825, 824, 823, 822, 821, 820, 819, 818, 817, 816, 815, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 799, 798, 797, 796, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 783, 782, 781, 780, 779, 778, 777, 776, 775, 774, 773, 772, 771, 770, 769, 768, 767, 766, 765, 764, 763, 762, 761, 760, 759, 758, 757, 756, 755, 754, 753, 752, 751, 750, 749, 748, 747, 746, 745, 744, 743, 742, 741, 740, 739, 738, 737, 736, 735, 734, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 723, 722, 721, 720, 719, 718, 717, 716, 715, 714, 713, 712, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 685, 684, 683, 682, 681, 680, 679, 678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 656, 655, 654, 653, 652, 651, 650, 649, 648, 647, 646, 645, 644, 643, 642, 641, 640, 639, 638, 637, 636, 635, 634, 633, 632, 631, 630, 629, 628, 627, 626, 625, 624, 623, 622, 621, 620, 619, 618, 617, 616, 615, 614, 613, 612, 611, 610, 609, 608, 607, 606, 605, 604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 592, 591, 590, 589, 588, 587, 586, 585, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 561, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541, 540, 539, 538, 537, 536, 535, 534, 533, 532, 531, 530, 529, 528, 527, 526, 525, 524, 523, 522, 521, 520, 519, 518, 517, 516, 515, 514, 513, 512, 511, 510, 509, 508, 507, 506, 505, 504, 503, 502, 501, 500, 499, 498, 497, 496, 495, 494, 493, 492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0] . Quadratic O(n^2) . Time . An example of a quadratic time algorithm is nested loops. When there are two nested loops that both iterate over the same collection, the time taken to complete the algorithm grows quadratically with the size of the collection. Hence, the time complexity of this operation is O(n^2), where n is the size of the collection being iterated over. . for i in numbers: for j in numbers: print(i,j) . Space . This function takes two matrices matrix1 and matrix2 as input and returns their product as a new matrix. The function creates a new matrix result with dimensions m by n to store the product of the input matrices. The size of result depends on the size of the input matrices, so the space complexity of this function is O(n^2). As the size of the input matrices increases, the amount of memory required to execute the function also increases quadratically. . def multiply_matrices(matrix1, matrix2): m = len(matrix1) n = len(matrix2[0]) result = [[0] * n] * m #this creates the new matrix based on the size of matrix 1 and 2 for i in range(m): for j in range(n): for k in range(len(matrix2)): result[i][j] += matrix1[i][k] * matrix2[k][j] return result print(multiply_matrices([[1,2],[3,4]], [[3,4],[1,2]])) . Logarithmic O(logn) . Time . An example of a log time algorithm is binary search. Binary search is an algorithm that searches for a specific element in a sorted list by repeatedly dividing the search interval in half. As a result, the time taken to complete the search grows logarithmically with the size of the list. Hence, the time complexity of this operation is O(log n), where n is the size of the list being searched. . def binary_search(arr, low, high, target): while low &lt;= high: mid = (low + high) // 2 #integer division if arr[mid] == target: return mid elif arr[mid] &lt; target: low = mid + 1 else: high = mid - 1 target = 263 result = binary_search(numbers, 0, len(numbers) - 1, target) print(result) . 263 . Space . The same algorithm above has a O(logn) space complexity. The function takes an array arr, its lower and upper bounds low and high, and a target value target. The function searches for target within the bounds of arr by recursively dividing the search space in half until the target is found or the search space is empty. The function does not crmeate any new data structures that depend on the size of arr. Instead, the function uses the call stack to keep track of the recursive calls. Since the maximum depth of the recursive calls is O(logn), where n is the size of arr, the space complexity of this function is O(logn). As the size of arr increases, the amount of memory required to execute the function grows logarithmically. . Exponential O(2^n) . Time . An example of an O(2^n) algorithm is the recursive implementation of the Fibonacci sequence. The Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones, starting from 0 and 1. The recursive implementation of the Fibonacci sequence calculates each number by recursively calling itself with the two preceding numbers until it reaches the base case (i.e., the first or second number in the sequence). The algorithm takes O(2^n) time in the worst case because it has to calculate each number in the sequence by making two recursive calls. . def fibonacci(n): if n &lt;= 1: return n else: return fibonacci(n-1) + fibonacci(n-2) #print(fibonacci(5)) #print(fibonacci(10)) #print(fibonacci(20)) #print(fibonacci(30)) print(fibonacci(40)) . Space . This function takes a set s as input and generates all possible subsets of s. The function does this by recursively generating the subsets of the set without the first element, and then adding the first element to each of those subsets to generate the subsets that include the first element. The function creates a new list for each recursive call that stores the subsets, and each element in the list is a new list that represents a subset. The number of subsets that can be generated from a set of size n is 2^n, so the space complexity of this function is O(2^n). As the size of the input set increases, the amount of memory required to execute the function grows exponentially. . def generate_subsets(s): if not s: return [[]] subsets = generate_subsets(s[1:]) return [[s[0]] + subset for subset in subsets] + subsets print(generate_subsets([1,2,3])) #print(generate_subsets(numbers)) . [[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []] . Using the time library, we are able to see the difference in time it takes to calculate the fibonacci function above. . Based on what is known about the other time complexities, hypothesize the resulting elapsed time if the function is replaced. | . import time start_time = time.time() print(fibonacci(34)) end_time = time.time() total_time = end_time - start_time print(&quot;Time taken:&quot;, total_time, &quot;seconds&quot;) start_time = time.time() print(fibonacci(35)) end_time = time.time() total_time = end_time - start_time print(&quot;Time taken:&quot;, total_time, &quot;seconds&quot;) . Hacks . Record your findings when testing the time elapsed of the different algorithms. When the loops in the program increase in linear length, the time complexity increases slightly. But when the loops and lengths increase exponentially, like counting 1000, 1000 times, the time complexity increases significantly more. If the program was way to big like the picture scaling one, the program Jupyter Kernel just crashed. | Although we will go more in depth later, time complexity is a key concept that relates to the different sorting algorithms. Do some basic research on the different types of sorting algorithms and their time complexity. The best time complexity has the algorithm that takes the least amount of time and the worst time complexity, it iterates a bunch and too much that makes it really slow. Some types of sorting algorithms are Quick Sort and Bubble Sort. Quick Sort is one of the best sorting algorithm, it first picks a pivot point, them separates the values into two groups one bigger and one smaller than the pivot. Then it repeats this in each of the sub groups until the values are sorted. The Bubble Sort is pretty bad time complexity. It iterates through each element and sees if it and the next element are in the right order, if not it swaps it. It continues through the list. And it repeats the whole process until it is fully sorted. This takes really long with longer lists. | Why is time and space complexity important when choosing an algorithm? ime complexity and space complexity are important when choosing an algorithm because if the input is small. The space complexity is going to be small. So if it is small the time complexity does not really affect the program&#39;s run length. But when the space complexity is really bad and large, the time complexity matters. So the algorithm needs to be the most efficient. | Should you always use a constant time algorithm / Should you never use an exponential time algorithm? Explain? You should always use a constant time algorithm because time is linear, you should never use an exponenetial time algortihm becasue that would change the matter of time since time is not exponenetial. | What are some general patterns that you noticed to determine each algorithm&#39;s time and space complexity? Some general patterns I noticed to determine each algorithm&#39;s time and space complexity were: For the fibonacci sequence my laptop could do the fibonacci(40) in 18 seconds without crashing. So my computer had enough memory and storage to do that. But for the counting to 1000, 1000 times, my computer took really long and it also crashed. So it had really bad time and space complexity. So for the time complexity, it would take really long. But for the bad space complexity, it would crash the kernel. | . Complete the Time and Space Complexity analysis questions linked below. Practice . Q1. What is the time, and space complexity of the following code: . a = 0 b = 0 for i in range(N): a = a + random() for i in range(M): b= b + random() . O(N * M) time, O(1) space | O(N + M) time, O(N + M) space | O(N + M) time, O(1) space | O(N * M) time, O(N + M) space | My response: 3 . The first loop is O(N) and the second loop is O(M). Since N and M are independent variables, so we can’t say which one is the leading term. Therefore Time complexity of the given problem will be O(N+M). Since variables size does not depend on the size of the input, therefore Space Complexity will be constant or O(1 . Q2. What is the time complexity of the following code: . a = 0; for i in range(N): for j in reversed(range(i,N)): a = a + i + j; . O(N) | O(N*log(N)) | O(N * Sqrt(N)) | O(N*N) | My response: 4 . These are nested for loops, which were the exact example of quadratic time complexity we learned in class, so I was pretty easily able to identify it as quadratic, or O(N*N). . Q3. What is the time complexity of the following code: . k = 0; for i in range(n//2,n): for j in range(2,n,pow(2,j)): k = k + n / 2; . O(N) | O(N*log(N)) | (n^2) | O(n^2Logn) | My response: 2 . The outside loop is linear and the inside loop is logarithmic, so you&#39;d simply multiply them inside the O notation . Q4. What does it mean when we say that an algorithm X is asymptotically more efficient than Y? . X will always be a better choice for small inputs | X will always be a better choice for large inputs | Y will always be a better choice for small inputs | X will always be a better choice for all inputs | My response: 2 . For large inputs, X&#39;s time or space complexity grows slower than Y&#39;s time or space complexity . Q5. What is the time complexity of the following code: . a = 0 i = N while (i &gt; 0): a += i i //= 2 . O(N) | (Sqrt(N)) | O(N / 2) | O(LogN) | My response: 1 . I thought it was linear because there&#39;s only one loop, but its logarithmic because the program is essentially a binary search. . Q6. Which of the following best describes the useful criterion for comparing the efficiency of algorithms? . Time | Memory | Both of the above | None of the above | My response: 3 . Comparing the efficiency of an algorithm depends on the time and memory taken by an algorithm. The algorithm which runs in lesser time and takes less memory even for a large input size is considered a more efficient algorithm. . Q7. How is time complexity measured? . By counting the number of algorithms in an algorithm. | By counting the number of primitive operations performed by the algorithm on a given input size. | By counting the size of data input to the algorithm. | None of the above | My response: 2 . Q8. What will be the time complexity of the following code? . for i in range(n): i=i*k . O(N) | O(k) | O(logkn) | O(lognk) | My response: 4 . I got the base and argument of the logarithm confused . Q9. What will be the time complexity of the following code? . value = 0; for i in range(n): for j in range(i): value=value+1 . n | (n+1) | n(n-1) | n(n+1) | My response: 3 . First for loop will run for (n) times and another for loop will be run for (n-1) times as the inner loop will only run till the range i which is 1 less than n , so overall time will be n(n-1). . Q10. Algorithm A and B have a worst-case running time of O(n) and O(logn), respectively. Therefore, algorithm B always runs faster than algorithm A. . True | False | My response: 2 . The Big-O notation provides an asymptotic comparison in the running time of algorithms. For n &lt; n0​​, algorithm A might run faster than algorithm B. .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/03/22/DS-space_time_complexity.html",
            "relUrl": "/2023/03/22/DS-space_time_complexity.html",
            "date": " • Mar 22, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "Big Idea 2 MC",
            "content": "I got a 23/25 on my MC (92%) . . Q2: Skill 1.D . . I got this question wrong because I didn’t realize that a compression algorithm’s ability to keep data secure isn’t its primary function. B is the correct answer (A lossless compression algorithm can guarantee reconstruction of original data, while a lossy compression algorithm cannot.) because lossless compression algorithms guarantee the ability to reconstruct the original data, whereas lossy compression algorithms do not. It’s critical for me to fully grasp this because it was one of the lessons we went over in class. . Q21: Skill 2.B . . I answered this question incorrectly because I only chose one of the two correct answers. Choice B (Filter by photographer, then by year, then by year) was correct because filtering by photographer removes any entries with unknown photographers. Any entries with unknown years will be removed if you filter by year. Sorting by year will sort the remaining entries in column C from least to greatest, placing the photograph with the lowest year value in the spreadsheet’s first row. When the answer was D, I chose option C (sort by subject, then sort by year, then filter by photographer). C is incorrect because this sequence of steps does not remove any entries with an unknown year, resulting in an entry with a year value of -1 in the first row of the spreadsheet. Choice D (sort by year, then filter by year, then filter by photographer) is correct because sorting by year sorts the spreadsheet from least to greatest in column C. Any entries with unknown years will be removed if you filter by year. Any entries with unknown photographers will be removed if you filter by photographer. Because the filters have no effect on the order of the entries, the photograph with the lowest year value will be in the first row of the spreadsheet. . Q25: Skill 2.B . . I answered correctly, but I wanted to put it here because I was a little confused when I read it. C is the correct answer (The transformed number is 8 times the value of the original number.) I discovered that it is correct while taking the quiz because appending a 0 to the end of a binary number multiplies the number by 2. As a result, appending three 0s to the end of a binary number multiplies it by 2 three times, which is equivalent to multiplying it by 8. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2023/03/20/bigidea2.html",
            "relUrl": "/markdown/final/2023/03/20/bigidea2.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Football Players SQL Menu",
            "content": "import sqlite3 database = &#39;instance/sqlite.db&#39; def schema(): conn = sqlite3.connect(database) cursor = conn.cursor() results = cursor.execute(&quot;PRAGMA table_info(&#39;football&#39;)&quot;).fetchall() for row in results: print(row) conn.close() schema() . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_number&#39;, &#39;INTEGER&#39;, 1, None, 0) (3, &#39;_wins&#39;, &#39;INTEGER&#39;, 1, None, 0) (4, &#39;_losses&#39;, &#39;INTEGER&#39;, 1, None, 0) . import sqlite3 def read(): conn = sqlite3.connect(database) cursor = conn.cursor() results = cursor.execute(&#39;SELECT * FROM football&#39;).fetchall() if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) cursor.close() conn.close() read() . (1, &#39;Patrick Mahomes&#39;, 15, 64, 16) (2, &#39;JJ Watt&#39;, 99, 77, 74) (3, &#39;Russell Wilson&#39;, 3, 108, 64) (4, &#39;Travis Kelce&#39;, 87, 105, 39) (5, &#39;Joe Burrow&#39;, 9, 24, 17) (6, &#39;Trevor Lawrence&#39;, 16, 12, 22) . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) number = input(&quot;Enter your number:&quot;) wins = input(&quot;Enter your wins:&quot;) losses = input(&quot;Enter your losses:&quot;) conn = sqlite3.connect(database) cursor = conn.cursor() try: cursor.execute(&quot;INSERT INTO football (_name, _number, _wins, _losses) VALUES (?, ?, ?, ?)&quot;, (name, number, wins, losses)) conn.commit() print(f&quot;A new player record {name} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) cursor.close() conn.close() #create() . import sqlite3 def update(): name = input(&quot;Enter name to update&quot;) number = input(&quot;Enter updated number&quot;) wins = input(&quot;Enter updated wins&quot;) losses = input(&quot;Enter updated losses&quot;) conn = sqlite3.connect(database) cursor = conn.cursor() try: cursor.execute(&quot;UPDATE football SET _number = ? WHERE _name = ?&quot;, (number, name)) cursor.execute(&quot;UPDATE football SET _wins = ? WHERE _name = ?&quot;, (wins, name)) cursor.execute(&quot;UPDATE football SET _losses = ? WHERE _name = ?&quot;, (losses, name)) if cursor.rowcount == 0: print(f&quot;No name {name} was not found in the table&quot;) else: print(f&quot;The row with user id {name} the password has been successfully updated&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) cursor.close() conn.close() #update() . import sqlite3 def delete(): name = input(&quot;Enter player name to delete&quot;) conn = sqlite3.connect(database) cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM football WHERE _name = ?&quot;, (name,)) if cursor.rowcount == 0: print(f&quot;No name {name} was not found in the table&quot;) else: print(f&quot;The row with name {name} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) cursor.close() conn.close() #delete() . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: return else: print(&quot;Please enter c, r, u, or d&quot;) menu() try: menu() except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . read() . NameError Traceback (most recent call last) /home/kcabralomana/Fastpages/_notebooks/2023-03-19-footballplayersmenu.ipynb Cell 8 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2023-03-19-footballplayersmenu.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; read() NameError: name &#39;read&#39; is not defined .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/03/19/footballplayersmenu.html",
            "relUrl": "/2023/03/19/footballplayersmenu.html",
            "date": " • Mar 19, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "Football Players SQL Table",
            "content": "from flask import Flask from flask_sqlalchemy import SQLAlchemy app = Flask(__name__) database = &#39;sqlite:///sqlite.db&#39; app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() db.init_app(app) . import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash class Player(db.Model): __tablename__ = &#39;football&#39; id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _number = db.Column(db.Integer, unique=False, nullable=False) _wins = db.Column(db.Integer, unique=False, nullable=False) _losses = db.Column(db.Integer, unique=False, nullable=False) def __init__(self, name, number, wins, losses): self._name = name self._number = number self._wins = wins self._losses = losses @property def name(self): return self._name @name.setter def name(self, name): self._name = name @property def number(self): return self._number @number.setter def number(self, number): self._number = number @property def wins(self): return self._wins @wins.setter def wins(self, wins): self._wins = wins @property def losses(self): return self._losses @losses.setter def losses(self, losses): self._losses = losses def __str__(self): return json.dumps(self.read()) def create(self): try: db.session.add(self) db.session.commit() return self except IntegrityError: db.session.remove() return None def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;number&quot;: self.number, &quot;wins&quot;: self.wins, &quot;losses&quot;: self.losses, } def update(self, dictionary): for x in dictionary: if x == &quot;number&quot;: self.number = dictionary[x] if x == &quot;wins&quot;: self.wins = dictionary[x] if x == &quot;losses&quot;: self.losses = dictionary[x] db.session.merge(self) db.session.commit() return None def delete(self): db.session.delete(self) db.session.commit() return None . def initUsers(): with app.app_context(): db.create_all() p1 = Player(name=&#39;Patrick Mahomes&#39;, number=&#39;15&#39;, wins=&#39;64&#39;, losses=&#39;16&#39;) p2 = Player(name=&#39;JJ Watt&#39;, number=&#39;99&#39;, wins=&#39;77&#39;, losses=&#39;74&#39;) p3 = Player(name=&#39;Russell Wilson&#39;, number=&#39;3&#39;, wins=&#39;108&#39;, losses=&#39;64&#39;) p4 = Player(name=&#39;Travis Kelce&#39;, number=&#39;87&#39;, wins=&#39;105&#39;, losses=&#39;39&#39;) p5 = Player(name=&#39;Joe Burrow&#39;, number=&#39;9&#39;, wins=&#39;24&#39;, losses=&#39;17&#39;) p6 = Player(name=&#39;Trevor Lawrence&#39;, number=&#39;16&#39;, wins=&#39;12&#39;, losses=&#39;22&#39;) players = [p1, p2, p3, p4, p5, p6] for x in players: try: object = x.create() print(f&quot;Created new uid {object.name}&quot;) except: print(f&quot;Records exist uid {x.name}, or error.&quot;) initUsers() . Created new uid Patrick Mahomes Created new uid JJ Watt Created new uid Russell Wilson Created new uid Travis Kelce Created new uid Joe Burrow Created new uid Trevor Lawrence . def find_by_name(name): with app.app_context(): player = Player.query.filter_by(_name=name).first() return player . def create(): name = input(&quot;Enter your name:&quot;) player = find_by_name(name) try: print(&quot;Found n&quot;, name.read()) return except: pass number = input(&quot;Enter your number:&quot;) wins = input(&quot;Enter your wins:&quot;) losses = input(&quot;Enter your losses:&quot;) player = Player(name=name, number=number, wins=wins, losses=losses ) with app.app_context(): try: object = player.create() print(&quot;Created n&quot;, object.read()) except: print(&quot;Unknown error name {name}&quot;) create() . Created {&#39;id&#39;: 7, &#39;name&#39;: &#39;Kalani&#39;, &#39;number&#39;: 50, &#39;wins&#39;: 60, &#39;losses&#39;: 30} . def read(): with app.app_context(): table = Player.query.all() json_ready = [player.read() for player in table] return json_ready read() . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Patrick Mahomes&#39;, &#39;number&#39;: 15, &#39;wins&#39;: 64, &#39;losses&#39;: 16}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;JJ Watt&#39;, &#39;number&#39;: 99, &#39;wins&#39;: 77, &#39;losses&#39;: 74}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Russell Wilson&#39;, &#39;number&#39;: 3, &#39;wins&#39;: 108, &#39;losses&#39;: 64}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Travis Kelce&#39;, &#39;number&#39;: 87, &#39;wins&#39;: 105, &#39;losses&#39;: 39}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Joe Burrow&#39;, &#39;number&#39;: 9, &#39;wins&#39;: 24, &#39;losses&#39;: 17}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Trevor Lawrence&#39;, &#39;number&#39;: 16, &#39;wins&#39;: 12, &#39;losses&#39;: 22}, {&#39;id&#39;: 7, &#39;name&#39;: &#39;Kalani&#39;, &#39;number&#39;: 50, &#39;wins&#39;: 60, &#39;losses&#39;: 30}] . def put(): name = str(input(&quot;Who do you want to edit?&quot;)) number = int(input(&quot;Enter the player&#39;s new number or same number&quot;)) wins = int(input(&quot;Enter the player&#39;s new number of wins&quot;)) losses = int(input(&quot;Enter the player&#39;s new number of losses&quot;)) body = { &quot;name&quot;: name, &quot;data&quot;: {&quot;number&quot;: number, &quot;wins&quot;: wins, &quot;losses&quot;: losses} } data = body.get(&#39;data&#39;) player = find_by_name(name) with app.app_context(): player.update(data) db.session.commit() return f&quot;{player.name} at id {player.id} has been updated&quot; put() . &#39;Kalani at id 7 has been updated&#39; . def delete(): name = str(input(&quot;Who do you want to delete?&quot;)) player = find_by_name(name) with app.app_context(): player.delete() return f&quot;{player.name} at id {player.id} has been deleted&quot; delete() . &#39;Kalani at id 7 has been deleted&#39; .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/03/19/footballplayers.html",
            "relUrl": "/2023/03/19/footballplayers.html",
            "date": " • Mar 19, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . Each Tri 2 Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . What is the purpose of identity Column in SQL database? . | What is the purpose of a primary key in SQL database? . | What are the Data Types in SQL table? . | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;football&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() # this makes the schema table from the sqlite database . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_number&#39;, &#39;INTEGER&#39;, 1, None, 0) (3, &#39;_wins&#39;, &#39;INTEGER&#39;, 1, None, 0) (4, &#39;_losses&#39;, &#39;INTEGER&#39;, 1, None, 0) . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? | Same for cursor object? | Look at conn object and cursor object in VSCode debugger. What attributes are in the object? | Is &quot;results&quot; an object? How do you know? | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM football&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() # This reads the data in the sqlite database . (1, &#39;Patrick Mahomes&#39;, 15, 64, 16) (2, &#39;JJ Watt&#39;, 99, 77, 74) (3, &#39;Russell Wilson&#39;, 3, 108, 64) (4, &#39;Travis Kelce&#39;, 87, 105, 39) (5, &#39;Joe Burrow&#39;, 9, 24, 17) (6, &#39;Trevor Lawrence&#39;, 16, 12, 22) (7, &#39;Patrick Mahomes&#39;, 15, 64, 16) (8, &#39;JJ Watt&#39;, 99, 77, 74) (9, &#39;Russell Wilson&#39;, 3, 108, 64) (10, &#39;Travis Kelce&#39;, 87, 105, 39) (11, &#39;Joe Burrow&#39;, 9, 24, 17) (12, &#39;Trevor Lawrence&#39;, 16, 12, 22) . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? | Explain purpose of SQL INSERT. Is this the same as User init? | . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) number = input(&quot;Enter your number:&quot;) wins = input(&quot;Enter your wins:&quot;) losses = input(&quot;Enter your losses:&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO football (_name, _number, _wins, _losses) VALUES (?, ?, ?, ?)&quot;, (name, number, wins, losses)) # Commit the changes to the database conn.commit() print(f&quot;A new player record {name} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? | . Explain try/except, when would except occur? | What code seems to be repeated in each of these examples to point, why is it repeated? | . import sqlite3 def update(): name = input(&quot;Enter name to update&quot;) number = input(&quot;Enter updated number&quot;) wins = input(&quot;Enter updated wins&quot;) losses = input(&quot;Enter updated losses&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE football SET _number = ? WHERE _name = ?&quot;, (number, name)) cursor.execute(&quot;UPDATE football SET _wins = ? WHERE _name = ?&quot;, (wins, name)) cursor.execute(&quot;UPDATE football SET _losses = ? WHERE _name = ?&quot;, (losses, name)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No name {name} was not found in the table&quot;) else: print(f&quot;The row with user id {name} the password has been successfully updated&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | In the print statemements, what is the &quot;f&quot; and what does {uid} do? | . import sqlite3 def delete(): name = input(&quot;Enter player name to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM football WHERE _name = ?&quot;, (name,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No name {name} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with name {name} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? | Could you refactor this menu? Make it work with a List? | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . A new player record Kalani has been created (1, &#39;Patrick Mahomes&#39;, 15, 64, 16) (2, &#39;JJ Watt&#39;, 99, 77, 74) (3, &#39;Russell Wilson&#39;, 3, 108, 64) (4, &#39;Travis Kelce&#39;, 87, 105, 39) (5, &#39;Joe Burrow&#39;, 9, 24, 17) (6, &#39;Trevor Lawrence&#39;, 16, 12, 22) (7, &#39;Patrick Mahomes&#39;, 15, 64, 16) (8, &#39;JJ Watt&#39;, 99, 77, 74) (9, &#39;Russell Wilson&#39;, 3, 108, 64) (10, &#39;Travis Kelce&#39;, 87, 105, 39) (11, &#39;Joe Burrow&#39;, 9, 24, 17) (12, &#39;Trevor Lawrence&#39;, 16, 12, 22) (13, &#39;Kalani&#39;, 20, 2, 2) The row with user id Kalani the password has been successfully updated The row with name Kalani was successfully deleted (1, &#39;Patrick Mahomes&#39;, 15, 64, 16) (2, &#39;JJ Watt&#39;, 99, 77, 74) (3, &#39;Russell Wilson&#39;, 3, 108, 64) (4, &#39;Travis Kelce&#39;, 87, 105, 39) (5, &#39;Joe Burrow&#39;, 9, 24, 17) (6, &#39;Trevor Lawrence&#39;, 16, 12, 22) (7, &#39;Patrick Mahomes&#39;, 15, 64, 16) (8, &#39;JJ Watt&#39;, 99, 77, 74) (9, &#39;Russell Wilson&#39;, 3, 108, 64) (10, &#39;Travis Kelce&#39;, 87, 105, 39) (11, &#39;Joe Burrow&#39;, 9, 24, 17) (12, &#39;Trevor Lawrence&#39;, 16, 12, 22) . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? There&#39;s procedural abstraction in the CRUD functions and schema(). All of these functions are called in the menu command allowing for a more compact and efficient way of programming. | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example. The data is stored in a database which is called and being used throughout the program | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. | . | . Reference... sqlite documentation .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) # makes the sqlite.db file . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User | db.Model inheritance | init method | @property, @&lt;column&gt;.setter | create, read, update, delete methods | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class Player(db.Model): # way to inherit the propeties into the user from the template, let the template do database stuff # template for the properties we want the user to have __tablename__ = &#39;football&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _number = db.Column(db.Integer, unique=False, nullable=False) _wins = db.Column(db.Integer, unique=False, nullable=False) _losses = db.Column(db.Integer, unique=False, nullable=False) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, number, wins, losses): # initialiazes the attributes within the class, uses parameters to be recieved in the init method to instantiate the object of the template user self._name = name # variables with self prefix become part of the object, self._number = number self._wins = wins self._losses = losses # a name getter method, extracts name from object @property # getters let you get the values of the attirbutes in the object def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter # setter let you change the values of the attirbutes in the object def name(self, name): self._name = name # a getter method, extracts uid from object @property def number(self): return self._number # a setter function, allows uid to be updated after initial object creation @number.setter def number(self, number): self._number = number @property def wins(self): return self._wins @wins.setter def wins(self, wins): self._wins = wins @property def losses(self): return self._losses @losses.setter def losses(self, losses): self._losses = losses # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): # Create lets you make a new data point try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): # lets you retrieve data in the set return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;number&quot;: self.number, &quot;wins&quot;: self.wins, &quot;losses&quot;: self.losses, } # CRUD update: updates user name, password, phone # returns self def update(self, dictionary): # lets you update and change the previous data for x in dictionary: if x == &quot;number&quot;: self.number = dictionary[x] if x == &quot;wins&quot;: self.wins = dictionary[x] if x == &quot;losses&quot;: self.losses = dictionary[x] db.session.merge(self) db.session.commit() return None # CRUD delete: remove self # None def delete(self): # lets you delete the data or all the data db.session.delete(self) db.session.commit() return None # makes the class for the user and all of the setters and getters and the crud functions . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; p1 = Player(name=&#39;Patrick Mahomes&#39;, number=&#39;15&#39;, wins=&#39;64&#39;, losses=&#39;16&#39;) p2 = Player(name=&#39;JJ Watt&#39;, number=&#39;99&#39;, wins=&#39;77&#39;, losses=&#39;74&#39;) p3 = Player(name=&#39;Russell Wilson&#39;, number=&#39;3&#39;, wins=&#39;108&#39;, losses=&#39;64&#39;) p4 = Player(name=&#39;Travis Kelce&#39;, number=&#39;87&#39;, wins=&#39;105&#39;, losses=&#39;39&#39;) p5 = Player(name=&#39;Joe Burrow&#39;, number=&#39;9&#39;, wins=&#39;24&#39;, losses=&#39;17&#39;) p6 = Player(name=&#39;Trevor Lawrence&#39;, number=&#39;16&#39;, wins=&#39;12&#39;, losses=&#39;22&#39;) players = [p1, p2, p3, p4, p5, p6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for x in players: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = x.create() print(f&quot;Created new uid {object.name}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {x.name}, or error.&quot;) initUsers() # adds some tester data to the sqlite.db file . Created new uid Patrick Mahomes Created new uid JJ Watt Created new uid Russell Wilson Created new uid Travis Kelce Created new uid Joe Burrow Created new uid Trevor Lawrence . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . def find_by_name(name): with app.app_context(): player = Player.query.filter_by(_name=name).first() return player # returns user object # # Check credentials by finding user and verify password # def check_credentials(uid, password): # # query email and return user record # user = find_by_uid(uid) # if user == None: # return False # if (user.is_password(password)): # return True # return False # #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) # lets you ind the user by a uid and check if the uid and password correspond with each other . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | | . def create(): # optimize user time to see if uid exists name = input(&quot;Enter your name:&quot;) player = find_by_name(name) try: print(&quot;Found n&quot;, name.read()) return except: pass # keep going # request value that ensure creating valid object number = input(&quot;Enter your number:&quot;) wins = input(&quot;Enter your wins:&quot;) losses = input(&quot;Enter your losses:&quot;) # Initialize User object before date player = Player(name=name, number=number, wins=wins, losses=losses ) # write object to database with app.app_context(): try: object = player.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error name {name}&quot;) create() . Created {&#39;id&#39;: 13, &#39;name&#39;: &#39;Kalani&#39;, &#39;number&#39;: 5, &#39;wins&#39;: 10, &#39;losses&#39;: 20} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = Player.query.all() json_ready = [player.read() for player in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Patrick Mahomes&#39;, &#39;number&#39;: 15, &#39;wins&#39;: 64, &#39;losses&#39;: 16}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;JJ Watt&#39;, &#39;number&#39;: 99, &#39;wins&#39;: 77, &#39;losses&#39;: 74}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Russell Wilson&#39;, &#39;number&#39;: 3, &#39;wins&#39;: 108, &#39;losses&#39;: 64}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Travis Kelce&#39;, &#39;number&#39;: 87, &#39;wins&#39;: 105, &#39;losses&#39;: 39}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Joe Burrow&#39;, &#39;number&#39;: 9, &#39;wins&#39;: 24, &#39;losses&#39;: 17}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Trevor Lawrence&#39;, &#39;number&#39;: 16, &#39;wins&#39;: 12, &#39;losses&#39;: 22}, {&#39;id&#39;: 7, &#39;name&#39;: &#39;Patrick Mahomes&#39;, &#39;number&#39;: 15, &#39;wins&#39;: 64, &#39;losses&#39;: 16}, {&#39;id&#39;: 8, &#39;name&#39;: &#39;JJ Watt&#39;, &#39;number&#39;: 99, &#39;wins&#39;: 77, &#39;losses&#39;: 74}, {&#39;id&#39;: 9, &#39;name&#39;: &#39;Russell Wilson&#39;, &#39;number&#39;: 3, &#39;wins&#39;: 108, &#39;losses&#39;: 64}, {&#39;id&#39;: 10, &#39;name&#39;: &#39;Travis Kelce&#39;, &#39;number&#39;: 87, &#39;wins&#39;: 105, &#39;losses&#39;: 39}, {&#39;id&#39;: 11, &#39;name&#39;: &#39;Joe Burrow&#39;, &#39;number&#39;: 9, &#39;wins&#39;: 24, &#39;losses&#39;: 17}, {&#39;id&#39;: 12, &#39;name&#39;: &#39;Trevor Lawrence&#39;, &#39;number&#39;: 16, &#39;wins&#39;: 12, &#39;losses&#39;: 22}, {&#39;id&#39;: 13, &#39;name&#39;: &#39;Kalani&#39;, &#39;number&#39;: 5, &#39;wins&#39;: 10, &#39;losses&#39;: 20}] . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | . Updating users table in sqlite.db . def put(): name = str(input(&quot;Who do you want to edit?&quot;)) number = int(input(&quot;Enter the player&#39;s new number or same number&quot;)) wins = int(input(&quot;Enter the player&#39;s new number of wins&quot;)) losses = int(input(&quot;Enter the player&#39;s new number of losses&quot;)) body = { &quot;name&quot;: name, &quot;data&quot;: {&quot;number&quot;: number, &quot;wins&quot;: wins, &quot;losses&quot;: losses} } data = body.get(&#39;data&#39;) player = find_by_name(name) with app.app_context(): player.update(data) db.session.commit() return f&quot;{player.name} at id {player.id} has been updated&quot; put() . &#39;Kalani at id 13 has been updated&#39; . Deleting users table in sqlite.db . def delete(): name = str(input(&quot;Who do you want to delete?&quot;)) player = find_by_name(name) with app.app_context(): player.delete() return f&quot;{player.name} at id {player.id} has been deleted&quot; delete() . &#39;Kalani at id 13 has been deleted&#39; .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], descending=False)) . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 . TypeError Traceback (most recent call last) /home/kcabralomana/Fastpages/_notebooks/2023-03-09-unit2.3.ipynb Cell 11 in &lt;cell line: 7&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2023-03-09-unit2.3.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; print() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2023-03-09-unit2.3.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; #sort the values in reverse order -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2023-03-09-unit2.3.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print(df.sort_values(by=[&#39;GPA&#39;], descending=False)) File ~/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py:311, in deprecate_nonkeyword_arguments.&lt;locals&gt;.decorate.&lt;locals&gt;.wrapper(*args, **kwargs) 305 if len(args) &gt; num_allow_args: 306 warnings.warn( 307 msg.format(arguments=arguments), 308 FutureWarning, 309 stacklevel=stacklevel, 310 ) --&gt; 311 return func(*args, **kwargs) TypeError: sort_values() got an unexpected keyword argument &#39;descending&#39; . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390, 200], &quot;duration&quot;: [50, 40, 45, 35] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;, &quot;day4&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 3 200 35 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 day4 200 35 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Amazing. . | When choosing a data set, think about the following... . Does it have a good sample size? | Is there bias in the data? | Does the data set need to be cleaned? | What is the purpose of the data set? | ... | . | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.)1 . | . import pandas as pd # Load the data into a Pandas DataFrame nba_df = pd.read_csv(&#39;files/nba.csv&#39;) # Sort the data by the number of championships won, in descending order franchise_champs = nba_df.sort_values(by=&#39;Champ&#39;, ascending=False) # Keep only the desired columns franchise_champs = franchise_champs[[&#39;Franchise&#39;, &#39;Lg&#39;, &#39;Champ&#39;]] # Rename the columns franchise_champs.columns = [&#39;Team&#39;, &#39;League&#39;, &#39;Championships&#39;] # Re-index the table franchise_champs = franchise_champs.reset_index(drop=True) franchise_champs.index += 1 # Output the top 10 franchises with the most championships print(franchise_champs.head(10)) . Team League Championships 1 Los Angeles Lakers NBA/BAA 17 2 Boston Celtics NBA/BAA 17 3 Los Angeles Lakers NBA 12 4 Golden State Warriors NBA/BAA 7 5 Chicago Bulls NBA 6 6 San Antonio Spurs NBA/ABA 5 7 Golden State Warriors NBA 5 8 Minneapolis Lakers NBA/BAA 5 9 San Antonio Spurs NBA 5 10 Indiana Pacers ABA 3 . Using Programs with Data Quiz . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. . Here are some suggestions... . Titanic Dataset:This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. | Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | . These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset... . Kaggle:The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. | UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning Visit Tutorials Point . Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python. . Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . | Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. . Decision Trees, prediction by a piecewise constant approximation. | Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7705882352941177 LogisticRegression Accuracy: 0.788235294117647 . /Users/johnmortensen/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/03/09/unit2.3.html",
            "relUrl": "/2023/03/09/unit2.3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. . Clouds Impression | Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Displaying images in Python Jupyter notebook . Python Libraries and Concepts used for Jupyter and Files/Directories . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . Data Compression Quiz . . After carefully reading the question I noticed that applying lossy compression the to file will prevent the user from restoring it to its original version. . Lossy and Lossless . The image lassen-volcano.jpg is a case of lossy compression, which means that when compressed, the file size will significantly decrease, but the image quality will also decrease due to the complex details and variety of colors in the image. Consequently, the image may appear unclear or indistinct. On the other hand, the green-square-16.png image demonstrates lossless compression because the image quality does not diminish even if the file size is reduced. This is due to the image being composed of a single color, and the RGB pixel values will remain the same unless a particular image manipulation technique is applied. . Paradigm . I experimented with various techniques for modifying images, such as redscale, metadata printing, and scaling, as demonstrated in the examples above. To accomplish this, I employed an image I captured called &quot;rome.jpg&quot;. I utilized the red channel exclusively and set the green and blue channels to 0 to produce a redscale image, which I named &quot;red_img&quot;. Furthermore, I added three metadata details to the image, namely the name of the image, the photographer, and the year the image was captured. The metadata label &quot;jfif&quot; is related to jpg/jpeg compression. Finally, I presented both the original and modified images side by side. . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from io import BytesIO import base64 import numpy as np def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile Face&quot;, &#39;file&#39;: &quot;wikismile.png&quot;}, ] for image in images: image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): # path of static images is defaulted img = pilImage.open(image[&#39;filename&#39;]) image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) def image_management_add_html_red(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;red_data&#39;] = [] # key/value for data converted to gray scale for pixel in image[&#39;data&#39;]: average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;red_data&#39;].append((pixel[0]+25, average, average, pixel[3])) # PNG format else: image[&#39;red_data&#39;].append((pixel[0]+25, average, average)) img.putdata(image[&#39;red_data&#39;]) image[&#39;html_red&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) if __name__ == &quot;__main__&quot;: images = image_data() for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; red image -&quot;) image_management_add_html_red(image) display(HTML(image[&#39;html_red&#39;])) print() def image_management_add_html_blue(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;blue_data&#39;] = [] # key/value for data converted to gray scale for pixel in image[&#39;data&#39;]: average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;blue_data&#39;].append((average, average, pixel[2]+150, pixel[3])) # PNG format else: image[&#39;blue_data&#39;].append((average, average, pixel[2]+150)) img.putdata(image[&#39;blue_data&#39;]) image[&#39;html_blue&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) if __name__ == &quot;__main__&quot;: images = image_data() for image in images: image_management(image) print(&quot; blue image -&quot;) image_management_add_html_blue(image) display(HTML(image[&#39;html_blue&#39;])) print() . - meta data -- Smile Face Internet PNG RGBA Original size: (220, 220) Scaled size: (320, 320) -- original image -- . red image - . blue image - . .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/03/09/unit2.2.html",
            "relUrl": "/2023/03/09/unit2.2.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "Final Tri 2 MC",
            "content": ". I got a 47/50 which is a 94%. My corrections to the 3 questions I missed are listed below. . Question 29: Skill 4.B - Values after sequence of Boolean expressions . After I answered tis question I later noticed that the fourth statement assigns the value false to a. The fifth statement assigns the value false to c. The value of b does not change after it is initially assigned. I usually get confused by these types of questions so in the future I will try to break down these questions. . Question 34: Skill 2.B - Move robot to gray square . I struggled with this question becasue its hard for me to imagine the robot moving. After I answered I noticed the robot needs to rotate right instead of left after the block of 2 moves forward. Next time I will try to draw this out. . Question 40: Skill 2.B - Move robot back to starting place . This question is similar to the other one.After moving forward two squares, if the robot were to turn left, then the next move forward would put the robot beyond the edge of the grid. Again next time I will try to draw it out and figure out the movements. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2023/03/07/tri2final.html",
            "relUrl": "/markdown/final/2023/03/07/tri2final.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "3.10 Lists",
            "content": "List examples in Python, JavaScript, and Pseudocode. . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] print (fruits) . const fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;]; . fruits ← [apple, grape, strawberry] . Terms . Index: a term used to sort data in order to reference to an element in a list | Elements: the values in the list assigned to an index | . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] index = 1 print (fruits[index]) . grape . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] letters = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;] inp = input().lower() . Methods in Lists . Method Definition Example . append() | adds element to the end of the list | fruits.append(&quot;watermelon&quot;) | . index() | returns the index of the first element with the specified value | fruits.index(&quot;apple&quot;) | . insert() | adds element at given position | fruits.insert(1, &quot;watermelon&quot;) | . remove() | removes the first item with the specified value | fruits.remove(&quot;strawberry&quot;) | . reverse() | reverses the list order | fruits.reverse() | . sort() | sorts the list | fruits.sort() | . count() | returns the amount of elements with the specified value | fruits.count(&quot;apple&quot;) | . copy() | returns a copy of the list | fruits.copy() | . clear() | removes the elements from the list | fruits.clear() | . sports = [&quot;football&quot;, &quot;soccer&quot;, &quot;baseball&quot;, &quot;basketball&quot;] sports[1] = &quot;hockey&quot; # change the value &quot;soccer&quot; to &quot;hockey&quot; print (sports) . [&#39;football&#39;, &#39;hockey&#39;, &#39;baseball&#39;, &#39;basketball&#39;] . sports = [&quot;football&quot;, &quot;soccer&quot;, &quot;baseball&quot;, &quot;basketball&quot;] # add &quot;golf&quot; as the 3rd element in the list print (sports) . Try this . Determine the output of the code segment | . .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%2012/2023/03/07/lists-lesson.html",
            "relUrl": "/jupyter/code/week%2012/2023/03/07/lists-lesson.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "Final Blog Post for N@M",
            "content": "Project: TGDDKP . We made an arcade that acts as a website where users can view and play various games like chess, blackjack, battleship, roulette, and poker. Essentially our website operated like an online gaming site to cure boredem and for students and any users to have fun. . . Other Projects . . We viewed a different project where you were able to search for certain cars and see the specifications of the car. They had cool features like a search tool to search for cars that users are interested in. they also had a review function where you could review on certain cars and the specifications of the car. . Art projects . . After presenting I walked around the other projects and found my way into the photography room. I saw some really nice photos and found this one really cool. I really liked the contrast the ground creates with the crack spanning across. . Overall thoughts . I really enjoys N@M because we got to see all of our peers hard work and the excitement of being able to showcase our work | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2023/02/27/N@tMpost.html",
            "relUrl": "/markdown/final/2023/02/27/N@tMpost.html",
            "date": " • Feb 27, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "5.5 and 5.6 blog",
            "content": "5.5 Legal and Ethical Concerns . In 5.5 we learned about licenses and the use of licenses. We learned about all of the varying types and why they may be used. We talked about when each license should be used and when it shouldn’t. We prioritize open source in this classroom since it allows people to view the code but they can directly make edits to certain parts. . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. In this Tech Talk, the different license types are Creative Commons Zero v1.0 Universal, Open Source MIT License, and Open Source GPL License. The Creative Commons Zero v1.0 Universal license does not permit copyright and is intended for public use. When closed source can be distributed and the owner wants credit for the work, the Open Source MIT License is used. The Open Source GPL License allows the project’s owner to do whatever they want with the project except distribute the closed sources. | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. Personally, I believe that the Open Source GPL License should be used for our GitHub Projects. The legality and ethics of the sources require us to give credit to the owners of the sources we use from other code. Music and film companies use Digital Rights Management (DRM) to protect their content from piracy and to regulate their ownership of the content. We can use Creative Commons software in this class because we are using it for education and it is free for everyone to use. Because open source code is free, businesses do not make their licenses open source, but they require open source code online to succeed. | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. I gave my repository an Open Source GPL license. For the group repository we use a GNU GPL v3.0. | 5.6 Safe Computing . In 5.6 we learned abour Safe computiong and the importance of safe computing. We learned about what information should be kept secret and what we can share. We learned about how sharing certain information can actually harm us. We don’t want to share factors like a password or ssn or any other valuabel things that can be used to harm me in any way or form. . Describe PII you have seen on project in CompSci Principles. On the project in CSP, the PII I’ve seen is that we know each other’s names, emails, photos, education, and, for some, birth date, addresses, and phone numbers. I’ve seen these on CSP projects because we display them on our github projects. | What are your feelings about PII and your personal exposure? Because of the PII, I believe we should be cautious about what we post online. I believe it is acceptable to share our names and email addresses, but we should not share private information such as social security numbers, passwords, and other sensitive information. However, these PII may be useful for businesses to tailor their websites to our preferences in order to increase their website’s popularity. | Describe good and bad passwords? What is another step that is used to assist in authentication. A good password is one that has many different types of characters: uppercase, lowercase, numbers, symbols, and punctuation. A bad password is like full words, passwords, pet names, and things that are easily known by others. Another step to assist authentication is two factor authentication. This means that two devices are needed to sign into an account. | Try to describe Symmetric and Asymmetric encryption. Symmetric encryption uses a single secret key to encrypt and decrypt data. Asymmetric encryption encrypts and decrypts data using two keys, one public and one private. | Provide an example of encryption we used in AWS deployment. SSL encryption is an example of encryption that we used in AWS deployment. This employs both symmetric and asymmetric encryption. | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. I haven’t had to learn the hard way with a phishing scheme because the majority of the phishing emails I receive end up in spam. When I do come across one, I read the email and realize it is a phishing scam. But once, a friend of mine was hacked on Discord, and they sent me a file, which I almost clicked. Some phishing techniques involve sending emails that appear to be from large corporations. Furthermore, by hacking into people’s accounts and sending links to people they know |",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/02/09/5.5_5.6_notes.html",
            "relUrl": "/markdown/2023/02/09/5.5_5.6_notes.html",
            "date": " • Feb 9, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "5.3 and 5.4 blog",
            "content": "5.3: Computing Bias . Facebook: 25-34 aged TikTok: 10-19 aged In my opinion, I think that there is no purposeful exclusion but they do target a specific demographic. Yes, I think that it could be harmful because we have a large group of young people all being influenced by one app. Yes, I think that it should be corrected. Yes, I think that it’s good business because they are successful and make a lot of revenue off of people’s time. . I think that virtual assistants have female voices because society has this idea that men are superior to women, and that women belong as assistants. I think that it is purposeful because of societal norms. I think that it could be harmful because young people can be influenced by the idea and associate women with being assistants. I think that it should be corrected by requesting a female or male voice instead of setting a default. I think that it is good business because they are appealing to society. . Personalized advertisements are an algorithm that influences my decisions since they usually appeal to what I watch/enjoy and encourage me to click/ show interest. . Video: I do not think that it was intentional because the engineers that were working and testing the camera were probably all white so they didn’t have the correct samples to test different skin tones. I think that it can be harmful to develop technology that can’t operate under all circumstances in which it was meant to because it can unintentionally exclude certain groups from being included. Yes, I think that it should be corrected because a certain group should never be excluded due to something that they can’t control. To produce a better outcome they could retest with different skin tones to generate a more accurate response. . Summary . TikTok is primarily used by younger generations, such as Generation Z, who enjoy creating and consuming short-form video content. On the other hand, Facebook has a more broad user base that spans multiple generations, including Baby Boomers and Generation X. Facebook offers a wider range of features, including the ability to share text updates, images, and longer-form videos, as well as connect with friends and family. Thus, TikTok and Facebook cater to different age groups based on their preferences and use cases, with TikTok being more popular among younger users and Facebook being more appealing to a wider audience. . 5.4: Crowdsourcing . We have used many API’s such as a COVID API, Motivational Quote API, Chess API. The biggest discovery that I have found on Github would be how github is so open source. We can find pretty much any public code since many coders use github. For example many of us have used the open source themes that github has to offer. I have also looked at other code to help influence my code. For example, when I’m working on frontend for a project sometimes I would look into some code to see how they made certain things and aspect look how they look. . Hacks . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment? | We could implement some type of system to help students understand certain parts of code and enable them to learn about tit and request help if in need for help. . What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? | Our project is better with crowdsourcing to gain more accurate functionality for a certain target audience. For example, since our project is aimed to student who want to cure their boredom we can send survey and get info about they like and what they feel like is missing. . What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week. | We could collect some type of feedback data where we could improve upon certain parts of our code. We could also track data like how mnay moves per game and commone strategies and what not. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/02/05/5.3_5.4_blog.html",
            "relUrl": "/markdown/2023/02/05/5.3_5.4_blog.html",
            "date": " • Feb 5, 2023"
        }
        
    
  
    
        ,"post31": {
            "title": "Project Blog",
            "content": "Feature Blog . The College Board performance tasks require that we fulfill all project specifications, including appropriateness and demonstration of programming skills through a written report and video. This includes showcasing the program’s purpose and functionality, managing complexity, utilizing algorithms and procedures, testing, and providing detailed descriptions to show proficiency in the project and AP CSP curriculum. . For our CPT group project we have been working on creating an arcade like website where people can connect with other players and play a game of chess or ticktac toe. It will have many different aspects to the game such as a wins, moves, and effects to the user. There will also be a mandatory feature where users will need to sign in to be able to play so that their profile can update with their wins/losses. . For my personal addition to this project I will be mainly working on the game part for the the website. I will have sure to hit every single one of the scoring sections of the CPT rubric, and I think I’m making good progress towards that. I am already settled down on the program purpose and functionality, and this will be explicitly described in my writeup &amp; my video. Furthermore, I will be able to test it, and after creating the backend of the score and time tracker page and after it is fully functional, I will be able to go in-depth to describe the algorithms which were utilized, how complexity was managed using lists, and how my backend is secure and utilizes many different complex programming methodologies.In the video I will show how depending on what object you click how it will effect your profile . Program Purpose and function: The purpose of the program would provide the user with a view to their account providing them with information about their wins and losses connecting them to their game history. . Data Abstraction: The program abstracts data through the creation of games in a database. The database stores information about the user, their account, their games, ad w/l they have. This can be used to create an overview of their account and w/l. . Managing Complexity: We will have many ways to record their gameplay and store their gamplay. . Procedural Abstraction: We will do this in our games and how the game can be played, with the use of functions with a parameter. . Algorithm Implementation: This will also be displayed in our games sine they will include sequencing selection and iteration, in our chess, blackjack, and tic tac toe. . Testing: We will show this through our features beign the games with different inputs and outputs .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/01/31/project-blog.html",
            "relUrl": "/markdown/2023/01/31/project-blog.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post32": {
            "title": "MC Test 2 Reflection",
            "content": ". Reflection . After I took took the test I got three questions wrong. One where I had to investigate the task, evaluate and test algorithms, and develop and implement algorithms. After looking at my answer then looking at the algorithm I can see that my answer is impossible. The arrow would never be able to hit the box that I chose. I think this mistake as a matter of misreading the code. After reading the answer I can see where I went wrong. I think that I made this mistake by misunderstanding and getting lost and the extent of the code. I can recognize that I may have to draw out longer segments of code like this one to break it down and understand it. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/01/31/CSP-mc-test.html",
            "relUrl": "/markdown/2023/01/31/CSP-mc-test.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post33": {
            "title": "5.1 and 5.2 blog",
            "content": "Reflection . Through the lectures of 5.1 and 5.1 we discussed many things. More specifically we talked about benefit and harmful effects of technology and how they effect society. We also talked about the Digital Divide, what it is and identifying aspects fo the Digital Divide . 5.2 . In 5.2 we talked about the Digital Divide. More specifically we talked about what the Digital divide is and who is on what side of the spectrum. This divide exists not only between individuals, but also between organizations and businesses. We used Google as an example of digital divide. Google provides its employees with access to better tools, hardware, and machines than those available to the general public. From top-of-the-line computers to the latest software and applications.In contrast, those who don’t have access to the same technology as Google employees face an opportunity gap. Without the latest hardware and software, these individuals are at a disadvantage when it comes to competing in the job market and staying up to date with the newest technology. The digital divide is a significant issue that must be addressed in order to ensure everyone has equal access to the tools and technology needed for success. . 5.1 . Technology has changed the world, both for better and for worse. For example. Chatgpt is a form of technology that has been disruptive to Google’s translation services, since it is able to provide information quickly. The most obvious harm that can come with relying on Chat gpt is that it can limit one’s ability to think critically. When relying on a computer to think for you and provide answers, it can be easy to forget that there may be multiple solutions or answers to the same problem. Additionally, it can be easy to stop learning the methods and logical thinking required to solve problems independently.Another potential harm of Chat gpt is the potential for bias. Computers are programmed by humans, and humans are not perfect. This potential for bias has been made painfully clear in the past, such as when facial recognition software was first released and was found to only work reliably with white people. . Notes . Chat gpt is disruptive to google Someone has to figure out how to monetize chat gpt . What can be harmful about chat gpt -you cant think more critically -you arent learning how you ar supposed to be learning -not critical thinking -the bot is doing all the thinking . its streamlining it | . Whats wrong with the bot generating/calculating answer Bias There can b n solutions or n answers Gives the same answer . Bias is a big thing in computers First time they did facial recognition it only worked with white people . Difference between lack of detailed tech and bias . Some tech that is awful (telepone trees) - calling a number and prompts to press different numbers to transfer to new line . Big Idea 5.2 Digital divide - some people have good computers some people dont, opportunity gap . Digital divide between use and google workers -better tools -better hardware/machines -access to more things .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2023/01/31/5.1-5.2-blog.html",
            "relUrl": "/markdown/2023/01/31/5.1-5.2-blog.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post34": {
            "title": "Database/Model, Backend, OOP, Python",
            "content": "Database and Table Terms . The foundations of database is defining one or more Tables. In Python, a database can be constructed using the foundations we learned in modeling a Class. . A &quot;Table&quot; is a Model/Schema within a Database. | A &quot;Table&quot; definition in Python/SQLAlchemy is manifested by defining a &quot;Class&quot; and &quot;Attributes&quot; in Python. | A Python Class can inherit database functionality from SQLAlchemy. This is a method Python developers use to turn a Class into a Table within a SQL Database. | Writing methods in the Class for Create, Read, Update, Delete (CRUD) is how a developer initiates database operations. | . Reference . SQLAlchemy | Python Backend with Flask, SQLite | Python Backend starting Controller | . Outline for Backend Model and Database . OOP modeling with SQLAlchemy enables CRUD operations. . Users Table Schema | Database Properties . | Initial Database Setup (call) . | Initial Database Setup (add records) . | OOP CRUD operations . | User Table Schema . The db.Model is inherited into the class User(db.model), Each db.Column is provided properties according to capabilities of SQL. See init.py for db object definition. . db = SQLAlchemy(app) . &quot;&quot;&quot; database dependencies to support sqliteDB examples &quot;&quot;&quot; from __init__ import app, db from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &quot;&quot;&quot; Key additions to User Class for Schema definition &quot;&quot;&quot; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # Defines a relationship between User record and Notes table, one-to-many (one user to many notes) posts = db.relationship(&quot;Post&quot;, cascade=&#39;all, delete&#39;, backref=&#39;users&#39;, lazy=True) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=date.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob . User Table CRUD operations . All these def&#39;s are methods of the User Class. . def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, &quot;posts&quot;: [post.read() for post in self.posts] } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Outline to understand Devops and Databases . DevOps and the SQLite database requires file management and configuring Python to work in local and deployment environment. . Volumes in Deployment | Database URI (deployment) . | Review Dockerfile . | Database URI (testing) . | Exclude/Ignore Testing Database . | Port and Host (testing) . | Run locally as you develop Select main.py file in VSCode and press Play button, or press down arrow next to Play button to activate Debug testing. The below dialog will appear in Terminal. . | (base) machine:flask_portfolio user$ cd /Users/user/vscode/flask_portfolio ; /usr/bin/env /Users/user/opt/anaconda3/bin/python /Users/user/.vscode/extensions/ms-python.python-2022.20.2/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 61127 -- /Users/user/vscode/flask_portfolio/main.py * Serving Flask app &quot;__init__&quot; (lazy loading) * Environment: production WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead. * Debug mode: on * Running on all addresses. WARNING: This is a development server. Do not use it in a production deployment. * Running on http://192.168.1.75:8086/ (Press CTRL+C to quit) * Restarting with watchdog (fsevents) * Debugger is active! * Debugger PIN: 403-552-045 . Run with Docker prior to commit and deployment It is much simpler to debug Docker issues in VSCode prior to Deployment on AWS. This will create production database sample, which will show up commits. Simply delete file after run session, do not commit it. | (base) machine:flask_portfolio user$ pwd # verify directory /Users/user/vscode/flask_portfolio (base) machine:flask_portfolio user$ docker-compose build # run docker build [+] Building 16.0s (10/10) FINISHED =&gt; [internal] load build definition from Dockerfile 0.0s ... =&gt; [1/6] FROM docker.io/library/python:3.10@sha256:e9f824eec86879b1ffe8da9ef3eb4677dd6e89b63e8bce8cb35c572f550751d8 0.0s =&gt; CACHED [2/6] RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install -y python3 python3-pip git 0.0s =&gt; [3/6] COPY . / 0.2s =&gt; [4/6] RUN pip install --no-cache-dir -r requirements.txt 9.7s =&gt; [5/6] RUN pip install ... =&gt; =&gt; writing image sha256:47ccd2a3ca839139727dd8c8f57fc1ad6a36e670962059d960d21b3ad0cba292 0.0s =&gt; =&gt; naming to docker.io/library/flask_port_v1 0.0s (base) machine:flask_portfolio user$ docker-compose up # enable for browser testing, no -d! This allows ctl-C to stop and all errors will appear in Terminal [+] Running 1/1 ⠿ Container flask_portfolio-web-1 Recreated 0.1s Attaching to flask_portfolio-web-1 flask_portfolio-web-1 | [2023-01-15 13:08:19 +0000] [1] [INFO] Starting gunicorn 20.1.0 flask_portfolio-web-1 | [2023-01-15 13:08:19 +0000] [1] [INFO] Listening at: http://0.0.0.0:8086 (1) flask_portfolio-web-1 | [2023-01-15 13:08:19 +0000] [1] [INFO] Using worker: sync flask_portfolio-web-1 | [2023-01-15 13:08:19 +0000] [7] [INFO] Booting worker with pid: 7 . docker-compose.yml has a volume mount. . Docker run in a container, its own virtual computer. Outside of the Docker container is where we desire to keep the SQLite database, thus there is a mount to a files accessible by developers. This ensures data is saved after Docker virtual computer up/down. The Left side of volume says ./volumes is a relative location on computer where docker-compose build/up was run, this is were database can always be seen. The Right side /volumes is where the Docker container see the volume. . version:&#39;3&#39;services: web: image: flask_port_v1 build: . ports: - &quot;8086:8086&quot; volumes: - ./volumes:/volumes restart: unless-stopped . init.py contains project settings. . This file contains app variables that can be referenced anywhere the app elements is imported (from __init__ import app, db). This is a way of sharing configuration across the many python/flask files in the project. Review the below file and become familiar with the settings ... . from flask import Flask from flask_login import LoginManager from flask_sqlalchemy import SQLAlchemy from flask_migrate import Migrate &quot;&quot;&quot; These object can be used throughout project. 1.) Objects from this file can be included in many blueprints 2.) Isolating these object definitions avoids duplication and circular dependencies &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) dbURI = &#39;sqlite:////volumes/flask_portfolio.db&#39; app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = dbURI app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy(app) Migrate(app, db) # Images storage app.config[&#39;MAX_CONTENT_LENGTH&#39;] = 5 * 1024 * 1024 # maximum size of uploaded content app.config[&#39;UPLOAD_EXTENSIONS&#39;] = [&#39;.jpg&#39;, &#39;.png&#39;, &#39;.gif&#39;] # supported file types app.config[&#39;UPLOAD_FOLDER&#39;] = &#39;volumes/uploads/&#39; # location of user uploaded content . Outline of SQL Administration Tools . Learning SQL basics using SQLite tools. . Install SQLite Viewer in VSCode marketplace, click on SQL database to review schema and see rows. . | Install SQLite and review SQLite Explorer. . | SQLite3 Website describes the command line SQL administration tool. To install on Mac terminal brew install sqlite3, on WSL terminal sudo apt install sqlite3. . | SQL Cheat Sheet. These commands can be done using SQLite3 and perhaps in Market Place tooling. | Loading SQLite3 from volumes directory . (base) machine:volumes user$ sqlite3 sqlite.db . Review content in users table . sqlite&gt; select id, _name, _uid, _dob from users; 1|Thomas Edison|toby|1847-02-11 2|Nicholas Tesla|niko|2023-01-14 3|Alexander Graham Bell|lex|2023-01-14 4|Eli Whitney|whit|2023-01-14 5|John Mortensen|jm1021|1959-10-21 6|Hedy Lamar|hedy|2023-01-14 7|Hedy Lamarr|heddy|2023-01-14 8|Marie Currie|marie|2023-01-14 9|Wilma Flintstone|wilma|2023-01-14 10|Fred Flintstone|fred|0010-01-01 . Delete content in users table, redisplay . sqlite&gt; delete from users where id=7; sqlite&gt; select id, _name, _uid, _dob from users; 1|Thomas Edison|toby|1847-02-11 2|Nicholas Tesla|niko|2023-01-14 3|Alexander Graham Bell|lex|2023-01-14 4|Eli Whitney|whit|2023-01-14 5|John Mortensen|jm1021|1959-10-21 6|Hedy Lamar|hedy|2023-01-14 8|Marie Currie|marie|2023-01-14 9|Wilma Flintstone|wilma|2023-01-14 10|Fred Flintstone|fred|0010-01-01 . Quit SQLite3 and return to prompt . sqlite&gt; .quit . SQLite Explorer . id _name _uid _password _dob . 1 | Thomas Edison | toby | sha256$Yj69CENuKWaRDHw3$dcb731d06dd59b7a316a853944b6603197876aa3a9553a758865d849a2b0a502 | 1847-02-11 | . 2 | Nicholas Tesla | niko | sha256$muQZzhqAFgXLERzC$cc7a02c80fc80190cd0b052d0dd010272cc8bc81971a7fe3cad6cee4a13e55e7 | 2023-01-14 | . 3 | Alexander Graham Bell | lex | sha256$rBKtyle2TI1vY7y9$ace54fb1e44640213f4aa284d6fe05cd27bfbcd1f7ac6d2ba697400d0b78cb7e | 2023-01-14 | . 4 | Eli Whitney | whit | sha256$j31DNBdcLtDALA4x$d39828e9e016c675b6c27ce1e6a08e196ffa5b7740978d6b313d039e60756375 | 2023-01-14 | . 5 | John Mortensen | jm1021 | sha256$5gt0IT2TiQm0UWi5$3d74775d35d2e2b0865deefb8f59e22e2b35d8c19ab4b1c26c7e50a27d3bf9fd | 1959-10-21 | . Hacks . The Big Picture purpose of this hack is to build a database. Being able to create an SQLite table and populate test data within it is the major goal. To do this effectively it is imperative to show the following. . Build Schema for a table, make a new model file and use users.py as an example. Start slow and simple and build up. | Build an initXXXXX() method and use it to add preliminary/test data to the table. Once again use users.py as an example. | Make a 30-60 second video where you show a Debugging session of making new rows in the table. Use sqlite marketplace tools and/or sqlite3 command line tool to show success in creating table and adding data. | Hack Helper . Here are some tips. . Become familiar with initUsers(). Observe it is called/activated from main.py. This function activates after you run the main.py and activate the web application in the browser. Observe that the sqlite.db file will appear in the volumes directory in conjunction with home screen of site appearing in browser. . | Delete sqlite.db from volumes directory on your development machine. Set breakpoint on initUsers() and run main.py using debug. Use the step into option on the debugger and observe the creation of data. . | . @app.before_first_request def activate_job():initJokes() initUsers() . Make your own XXXXX.py file under model directory. Follow users.py and develop your own schema from the OOP code you did in last Hacks. Follow the pattern in users.py to make a initXXXX() function top populate some test data. . | In main.py, add your initXXXX() method to def activate_job() function shown above. Use this as basis of your video debugging session. Debugging is hugely important at this level to understand your database success prior to building an API. Building initXXXX() method, adding database records, and debugging will enable you to verify CRUD operations as you develop. . | .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/01/17/PBL-database.html",
            "relUrl": "/2023/01/17/PBL-database.html",
            "date": " • Jan 17, 2023"
        }
        
    
  
    
        ,"post35": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$zgP...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$NU3...&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$GZd...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$BgC...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$hZi...&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$zgP...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$NU3...&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$fes...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$BgC...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$hZi...&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$zgPNO3AQ3gETecTf$e97fd2f2497ffdb3c715a7dd06d82b7b5c0a619bf14a51aa72c5d494c79eb9e5&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$NU3WSePH321SguGA$5ebc6eabb83ba00f541dd59e88ee9aa78056826a36e68f1ca4756bb179e49004&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$fesiAFkbu6GSYjv8$524e8f81eec02a4bd15c15ffa337fe9b61c643000f736d13326220b335931768&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$BgCqp1WaSlqiksPo$e65d7700aed6cee65da5c7e0510fb85d53ac0a9c39b583de7dd4abee88140d70&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$hZiZbFducTLtXKqn$c76c18cfd88fffe7efa1f3b5901cc5f49332294a59f4cc0e35720a54f738c274&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$zgPNO3AQ3gETecTf$e97fd2f2497ffdb3c715a7dd06d82b7b5c0a619bf14a51aa72c5d494c79eb9e5&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$NU3WSePH321SguGA$5ebc6eabb83ba00f541dd59e88ee9aa78056826a36e68f1ca4756bb179e49004&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$fesiAFkbu6GSYjv8$524e8f81eec02a4bd15c15ffa337fe9b61c643000f736d13326220b335931768&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$BgCqp1WaSlqiksPo$e65d7700aed6cee65da5c7e0510fb85d53ac0a9c39b583de7dd4abee88140d70&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$hZiZbFducTLtXKqn$c76c18cfd88fffe7efa1f3b5901cc5f49332294a59f4cc0e35720a54f738c274&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2006, 4, 18) age = calculate_age(date(2006, 4, 18)) print(age) . 16 . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password, classOf, dob, age): # name, uid, and password are presets for each user self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob self._age = age self._classOf = classOf # use getter to get information from the defined objects @property def name(self): return self._name # use setter to update name after we create the object @name.setter def name(self, name): self._name = name # getter, gets the email id from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha512&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result @property def classOf(self): return self._classOf @classOf.setter def classOf(self, classOf): self._classOf = classOf # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;, classOf: &quot;{self.classOf}&quot;, dob: &quot;{self.dob}&quot;, age: &quot;{self.age}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password}, classOf={self._classOf}, dob={self.dob}, age={self._age})&#39; # a name getter method, extracts date of birth from object @property def dob(self): return self._dob # a setter function, allows date of birth to be updated after initial object creation @dob.setter def dob(self, dob): self._dob = dob @property def age(self): return self._age @age.setter def age(self, age): self._age = age # tester method to print users def tester(users, uid, psw, classOf, dob, age): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # # defining each user as an object u1 = User(name=&#39;Kalani Cabral-Omana&#39;, uid=&#39;kcabralomana&#39;, password=&#39;yoyoyo11!&#39;, classOf=2024, dob=[2006, 4, 18], age= calculate_age(date(2006, 4, 18))) u2 = User(name=&#39;Leo Sun&#39;, uid=&#39;lsun&#39;, password=&#39;wahwahwah22!&#39;, classOf=2024, dob=[2006, 1, 11], age= calculate_age(date(2005, 1, 11))) u3 = User(name=&#39;Naman Keswani&#39;, uid=&#39;nk&#39;, password=&#39;seahawks33!&#39;, classOf=2024, dob=[2006, 4, 20], age= calculate_age(date(2006, 4, 20))) u4 = User(name=&#39;Sam Ponta&#39;, uid=&#39;sams&#39;, password=&#39;oldnavy44!&#39;, classOf=2023, dob=[2005, 4, 2], age= calculate_age(date(2005, 4, 2))) # list defining users = [u1, u2, u3, u4] # Dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Dictionary: &quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) . Dictionary: [{&#34;_name&#34;: &#34;Kalani Cabral-Omana&#34;, &#34;_uid&#34;: &#34;kcabralomana&#34;, &#34;_password&#34;: &#34;sha512$RIZC5HOdSXjhrP2x$4662c584bab7a3550a36009917eaf56c7a785f34580e32d4f6414289d2370a3f995af3fda5bc9f34a7aab09fa45128537bfe9d2a9b0ea9b5bb0c374787f0de41&#34;, &#34;_dob&#34;: [2006, 4, 18], &#34;_age&#34;: 16, &#34;_classOf&#34;: 2024}, {&#34;_name&#34;: &#34;Leo Sun&#34;, &#34;_uid&#34;: &#34;lsun&#34;, &#34;_password&#34;: &#34;sha512$4HlTXXemq2wNaeUr$3bf50405fa437e90a9152f288b4c165350f61ae6db42142b90d59c06ffec7c8fb909da7ae05e23e53b907a025de26d7a8e7e06995e1bb0db026204237b60bea7&#34;, &#34;_dob&#34;: [2006, 1, 11], &#34;_age&#34;: 18, &#34;_classOf&#34;: 2024}, {&#34;_name&#34;: &#34;Naman Keswani&#34;, &#34;_uid&#34;: &#34;nk&#34;, &#34;_password&#34;: &#34;sha512$mIxQPJJbLmGZZjPV$fa00628a8d5817c053405863b9696a233a0e93a0da8ad339e7721c708b0f5248536fbc0aff2b7333fef3c9f5d4bc7d00f70f30984d34afdfd98486915cabd091&#34;, &#34;_dob&#34;: [2006, 4, 20], &#34;_age&#34;: 16, &#34;_classOf&#34;: 2024}, {&#34;_name&#34;: &#34;Sam Ponta&#34;, &#34;_uid&#34;: &#34;sams&#34;, &#34;_password&#34;: &#34;sha512$tWMagN1P3nPkznmV$a05e66672f84605ffb34ef257bb8b14b59921636c818912a235d73add5ba798c2d6e96882f23a6bf7261c326dd3aaea2ec755e18fffbadcb51e5e39da19ae3ad&#34;, &#34;_dob&#34;: [2005, 4, 2], &#34;_age&#34;: 17, &#34;_classOf&#34;: 2023}] . import getpass class Login: def __init__(self, username, password): self.username = username self.password = password def check_credentials(self, username, password): if username == self.username and password == self.password: return True else: return False def login(self): entered_username = input(&quot;Username: &quot;) entered_password = getpass.getpass(&quot;Password: &quot;) if self.check_credentials(entered_username, entered_password): print(f&quot;Welcome. {self.username}&quot;) else: print(&quot;Incorrect username or password. Please try again.&quot;) # create an instance of the class d = Login(&quot;Kalani Cabral-Omana&quot;, &quot;thesupbro&quot;) d.login() . Welcome. Kalani Cabral-Omana .",
            "url": "https://kcabralomana.github.io/Fastpages/2023/01/10/object-oriented_programming.html",
            "relUrl": "/2023/01/10/object-oriented_programming.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post36": {
            "title": "Grades from teaching hw",
            "content": "Grades . Lesson Grade Total . Day 1 teaching: 3.1-2 | 0.95 | - | . Day 2 teaching: 3.3-4 | 0.9 | - | . Day 3 teaching: 3.5-7 | 0.95 | - | . Day 4 teaching: 3.8-10 | PRESENTED | - | . Day 5 teaching: 3.9-11 | 0.9 | - | . Day 6 teaching: 3.12-13 | 0.9 | - | . Day 7 teaching: 3.14-15 | 0.9 | - | . Day 8 teaching: 3.16 | 0.85 | - | . Day 9 teaching: 3.17-18 | 0.9 | - | . TOTAL | - | 7.25 | . Notes and HW from each lesson . Day 1 teaching: 3.1-2 . Day 2 teaching: 3.3-4 . Day 3 teaching: 3.5-7 . Day 4 teaching: 3.8-10 . Day 5 teaching: 3.9-11 . Day 6 teaching: 3.12-13 . Day 7 teaching: 3.14-15 . Day 8 teaching: 3.16 . Day 9 teaching: 3.17-18 . Vocab . Unit 2 . Unit 3 .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/12/16/teaching_grades.html",
            "relUrl": "/markdown/2022/12/16/teaching_grades.html",
            "date": " • Dec 16, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Unit 3 Vocabulary",
            "content": "Unit 3: Algorithms Binary/Data Terms . Variables:An abstraction inside a program that holds a specific value or meaning defined by the programmer. . Data Types: . Integer- highScore (involves math, save as integer or numbers) . String- firstName (name is text, so it is a string) . Boolean- isSunny (2 options, true or false) . String- phoneNumber (no math, just numbers) . Arithmetic Operators . Plus indicated addition (a + b) . Minus indicates subtractions (a - b) . Asterisk indicated multiplication (a * b) . Slash indicated division (a / b) . Managing Complexity with Variables . Lists: Allows you to complete a process for each value in the list, or store multiple values to one variable. . 2D Lists: Array within an array. You can pull single arrays through using index and variable commands. . Ex: T = [[11, 12, 5, 2], [15, 6,10], [10, 8, 12, 5], [12,15,8,6]] . Dictionaries: Allows the storage or data keys and values (assigning a certain piece of data to fit the category it is assigned) . Class: A particular data structure. . Algorithms: An algorithm is a finite set of instructions that accomplish a specific task, us as humans, do algorithms on a daily basis. . Sequence: A specific order a process is completed, which impacts the output. . Selection: Programmer decides between 2 different functions . Iteration: Repetition of a process . For loop: repeats a section of code a set number of times . While loop: repearts a section of code an unknown number of times, until the code is told to break . Expressions: A piece of syntax in coding . Comparison Operators . Operators used in programming languages which compare two different values. These can often be used to set up statements which return a boolean value (true/false), which can be stored in variables. All examples below are in Python and were checked using the bool() command, which returns the True/False output. . == : checks if 2 values are equal to each other (ex. “Hrar?” == “Hrar?” OR 1 == 1.0) . !=: checks if 2 values are NOT equal to each other . &lt;, &lt;=, =&gt;, &gt;: checks if left value is less than (and equal to) or greater than (and equal to) the right value . in/not in : Checks if the specified value is an element in the specified list. in returns true if the element is in the list; not in returns true if the element is not in the list. (Ex. List = [1, 3, 5, 7, 9, “hi”]) . 1 in List . 3 in List . 5 in List . “hi” in List . “What” not in List . “Why” not in List . 2 in List . 4 in List . 6 in List . 9 not in List . 7 not in List . “Weird” in List . Booleans Expressions and Selection . The value of a boolean variable (True/False) can be used as conditions in selection (often known as if statements). The condition of the if statement is the boolean variable; if its value is True, the condition passes. A possible function of this is in Python code below . //Assume the grade was calculated by a computer program . //The bool command is here to make a boolean variable . //In a larger computer program, the value was likely . //generated by previous commands . Grade = 89.49 . isA = bool(Grade &gt;= 90) . if isA: . print(“Yay!”) . else: . print(“hmm”) . OUTPUT: hmm . Booleans Expressions and Iteration . Certain forms of iteration (specifically while loops in Python) can use a boolean variable as a condition (similar to selection commands). As you may expect, the while loop executes commands until the value of the variable is false. In terms of a computer program, this could perhaps be used to execute commands critical for maintaining a certain process until that process is no longer needed. This could also potentially be used to periodically send notifications until a certain condition is met (ex: an assignment is submitted) . Here’s some informal python code: . num = 10 . correct = bool(num &gt; 0) . while correct: . print(num) num = num - 1 correct = bool(num &gt; 0) . OUTPUT: 10 9 8 7 6 5 4 3 2 1 . Truth Tables: A table for a logical operator (ex: AND, OR, XOR) containing each variable and all possible input and output results of that operator. . AND TABLE: All inputs must be true to return output of true. . Input 1 Input 2 Input 3 . False | False | False | . False | True | False | . True | False | False | . True | True | True | . . OR TABLE: At least one input must be true to return output of true. . Input 1 Input 2 Input 3 . False | False | False | . False | True | True | . True | False | True | . True | True | True | . . XOR TABLE: Exactly one input must be true to return output of true. . Input 1 Input 2 Input 3 . False | False | False | . False | True | True | . True | False | True | . True | True | False | . . Characters . The units which make up a string. These can be letters, numbers, special symbols (!@#$%^&amp;*), or even spaces. Regardless, if one types, each keystroke outputs one character. . Ex: “keyboard hi!!!” has 14 characters: 10 letters, three exclamation marks, and a space. . Strings . A variable data type which consists of a combination of letters, numbers, and other special characters (ex: @#$%^&amp;*). They are seen inside quotation marks, and operators cannot affect any numbers in the string. . Ex: stringVar = “Hello World!” . “Hello World!” is a string. . Length . The number of elements in a list. Here’s an example in Python: . numList = [1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1] . This list has a length of 17 because it has 17 elements. Each element is separated by a comma. . Concatenation: the act of joining two strings into a single string. Often, these strings are printed to an output terminal/console. Here’s an example in pseudocode: . concat(“tri”, “llion”) . This concatenates the strings “tri” and “llion”, making a new string “trillion”. . Upper, Lower, Traversing Strings . The first two (upper and lower) seem to be referring to Python methods. They are quite simple. I think it would be easiest to explain with a demonstration: . String = “WhYaReWeDoInGtHiS” . print(string) . print(string.upper()) . print(string.lower()) . Output: . WhYaReWeDoInGtHiS . WHYAREWEDOINGTHIS . whyarewedoingthis . Relatively intuitive. The upper() method changes all lowercase letters in a string to uppercase, while the lower() method does the opposite. A potential reason for this would be ensuring uniform case (especially of uppercase when making important headings like page/screen titles) Traversing strings behaves highly similar to iterating elements in a list, except that instead of iterating through a list, it’s a string. Elements in a list are now the characters of a string. A potential application of this could be to search all strings for a specific substring. Here’s some example python code: . #Very informative example here: #https://www.geeksforgeeks.org/iterate-over-characters-of-a-string-in-python/ . String = “Thirty Trillion Dollars” . for i in String: . if i == “T” print(“T detected!”) . Output: . T detected! . T detected! . Python If, Elif, Else conditionals; . Python if statements execute associated lines of code if the if condition is satisfied. . If the if condition is not satisfied, an Elif statement is executed as fallback… with another condition and associated commands . If all associated Elif conditions are not satisfied, there can be an else statement which unconditionally executes associated commands. . Ex: input = input(“enter a string”) . if input == “Hi”: . print(“Hello World!”) . print(“How are you doing today?”) . elif input == “Why”: . print(“That’s a good question to ask about everything that happens.”) . elif input == “Who are you”: . print(“I’m an anonymous guest. Pleased to meet you.”) . else: . print(“Have a great day!”) . This code uses if statements and elif statements to return strings for three special inputs (“Hi,” “Why,” “Who are you”). If the input were any of those strings, the associated command would be executed. Otherwise, the command associated with the else statement (which prints “Have a great day!”) would be executed. . Nested Selection Statements: When a program can choose from many paths to lead to a result, think of flowcharts where one condition must be satisfied before another can be picked Python For/While loops with Range with List: There are two ways loops can be used one is with a range and the other is with a list. When using the range method a variable is iterated a set number of times based on the range (typically an integer value), while with the list method the loop is iterated based on the length of a list. . Range: . i = 0 . while i &lt; 5: . print(i + 1) i += 1 . Output: 1, 2, 3, 4, 5 . List: . list = [“a”, “b”, “c”] . i = 0 . while i&lt;len(list): . print(list[i]) i = i + 1 . Output: a, b, c . Combining loops with conditionals to Break: Makes it so that the loop will stop as soon as a condition is met . Continue: A statement used in while and for loops which starts the code from the beginning, in the image below you can see how the “h” in “Python” was not printed since the continue statement skipped the print(letter) and made the code start from the beginning . for letter in “python”: . if letter == “n”: continue print(letter) . Output: pytho . Procedural Abstraction: A model of what the code should do but it doen’t tell how to do it. It’s basically using a procedure to name the idea. . Python Def: It defines a function and makes code simpler by allowing for the code in the function to be called . Procedures: Code that doesn’t return a value but allows for a specific task to be completed . Parameters: Values that are passed into functions when they are defined in addition(a + b), a and b will be given a value and that value is a parameter . Return Values: Values that are outputed when a function is completed. An example of this was when we were using console.log(“message”) when testing in AppLab .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/12/15/vocab2.html",
            "relUrl": "/markdown/2022/12/15/vocab2.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "3.16 HW",
            "content": "Sim #1 updates 2 variables by a random amount at each iteration (runs for 100 iterations) . import random # Define the number of iterations num_iterations = 100 # Set the initial values of the variables value_1 = 0 value_2 = 0 # Define the update function def update_values(): global value_1 global value_2 value_1 += random.randint(-1, 1) value_2 += random.randint(-1, 1) # Run the simulation for the specified number of iterations for i in range(num_iterations): update_values() print(f&quot;Iteration {i}: value_1 = {value_1}, value_2 = {value_2}&quot;) . Sim #2 an object falling under the influence of gravity . import matplotlib.pyplot as plt # Define the initial conditions x = 0 y = 0 vx = 0 vy = 0 g = 9.8 # Set the time step and number of iterations dt = 0.1 num_iterations = 100 # Define the update function def update_position(): global x, y, vx, vy x += vx * dt y += vy * dt vy -= g * dt # Run the simulation for the specified number of iterations for i in range(num_iterations): update_position() # Plot the results plt.plot(x, y) plt.show() . Example of simulation . GTA Character Editor . .",
            "url": "https://kcabralomana.github.io/Fastpages/code/2022/12/15/3.16hw.html",
            "relUrl": "/code/2022/12/15/3.16hw.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "3.10 Lists",
            "content": "List examples in Python, JavaScript, and Pseudocode. . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] print (fruits) . const fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;]; . fruits ← [apple, grape, strawberry] . Terms . Index: a term used to sort data in order to reference to an element in a list | Elements: the values in the list assigned to an index | . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] index = 1 print (fruits[index]) . grape . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] letters = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;] inp = input().lower() . Methods in Lists . Method Definition Example . append() | adds element to the end of the list | fruits.append(&quot;watermelon&quot;) | . index() | returns the index of the first element with the specified value | fruits.index(&quot;apple&quot;) | . insert() | adds element at given position | fruits.insert(1, &quot;watermelon&quot;) | . remove() | removes the first item with the specified value | fruits.remove(&quot;strawberry&quot;) | . reverse() | reverses the list order | fruits.reverse() | . sort() | sorts the list | fruits.sort() | . count() | returns the amount of elements with the specified value | fruits.count(&quot;apple&quot;) | . copy() | returns a copy of the list | fruits.copy() | . clear() | removes the elements from the list | fruits.clear() | . sports = [&quot;football&quot;, &quot;soccer&quot;, &quot;baseball&quot;, &quot;basketball&quot;] sports[1] = &quot;hockey&quot; # change the value &quot;soccer&quot; to &quot;hockey&quot; print (sports) . [&#39;football&#39;, &#39;hockey&#39;, &#39;baseball&#39;, &#39;basketball&#39;] . sports = [&quot;football&quot;, &quot;soccer&quot;, &quot;baseball&quot;, &quot;basketball&quot;] # add &quot;golf&quot; as the 3rd element in the list print (sports) . Try this . Determine the output of the code segment | . .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%2012/2022/12/14/lists-lesson.html",
            "relUrl": "/jupyter/code/week%2012/2022/12/14/lists-lesson.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Unit 3 Sections 17-18",
            "content": "Do Now!!! . Set up your notebook by either wgetting the lesson or tracking it by your own (We would recommend wgetting since there are some fill in the blanks!) | wget here: https://raw.githubusercontent.com/mmaxwu/Tri2-GroupFastpages/master/_notebooks/2022-12-dd-lesson.ipynb | . 3.17: Algorithm Efficiency . Purpose: . The purpose of this lesson is to help students understand how to make an efficient program and optimize it and understand its importance to the CSP curriculum. . What is Algorithmic Efficiency? . The ability of an algorithm to solve a problem in an efficient way An efficient algorithm solves a problem quickly and with a minimum amount of resources, such as time and memory. | . | How do we determine if an algorithm is efficient or not? One way we can do this is by determining the time complexity of the algorithm. | Another way is through space complexity. | . | . Traveling Merchant Problem Hacks: . What did you and your team discuss? (record below) . An heuristic solution is an approach to a problem that produces a solution that isn&#39;t necessarily optimal but can be used when normal methods take forever | . Describe the method used to solve the traveling merchant problem. (record below) . 3.18: Undecidable Problems . Purpose: . The purpose of this lesson is to introduce students to the concept of undecidable problems in computer science and to explain why these problems are important. . Key vocabulary: . Decision problem | Decidable problem | Undecidable problem | . Decision Problem . A decision problem is a problem in computer science and mathematics that can be solved by a yes-no answer, also known as a binary answer. In other words, a decision problem is a problem for which there are only two possible outputs:&quot;yes&quot; or &quot;no&quot;. There are two types of decision problems that Collegeboard goes over: . Decidable Problems | Undecidable Problems | . A decidable problem is a problem in computer science and mathematics for which an algorithm can be created that can always produce a correct answer or solution. In other words, a decidable problem is a problem for which there exists an algorithm that can be used to determine whether a given input is a valid solution or not. . An undecidable problem is a problem in computer science and mathematics for which it is impossible to create an algorithm that can always provide a correct answer or solution. This means that it is not possible for an algorithm to always determine whether a given input is a valid solution to an undecidable problem. . Decidable Problems . A decidable problem is an algorithm that can always have an output of yes or no given any input. It is always correct. . Example of a Decidable Problem . The procedure below tests to see if a number is divisible by 13. If it is, it returns true. If it isn&#39;t, it returns false. . def divideThirteen(number): if number % 13 == 0: return True else: return False print(divideThirteen(26)) print(divideThirteen(30)) . True False . Undecidable Problems . An Example of a Forever Running Code . The code keeps adding 1 to the variable number until number is no longer an integer(This is not the python data type &quot;integer&quot;, it&#39;s the integer in number theory). However, there is no end to this code, making the computer run forever. There is no halt to the code. . i = 0 number = 1 def integerTest(n): # Testing if the number is an integer if n%1 ==0: return True else: return False # Using while loop to keep searching an a non-integer above 1. Note that the computer runs forever. while i == 0: number += 1 if integerTest(number) == False: i +=1 print(&quot;Done&quot;) . The Halting Problem . The halting problem is an example of an undecidable problem. It states that it is not always possible to correctly determine whether a code halts or runs forever. . There is no way to write an algorithm to analyze and determine whether a body of code can run forever or not. . Halting Problem Example: . In order to understand this, suppose that an algorithm was able to analyze whether a code halts or not. Let&#39;s call this algorithm HaltChecker. | HaltChecker analyzes the program,program P, and its input,input I. If program P halts with input I, HaltChecker returns an output of &quot;halts&quot;. If program P doesn&#39;t halt(runs forever) with input I, HaltChecker returns an output of &quot;never&quot;. For example, in the code where it tests if variable number, the code runs forever, so HaltChecker returns an output of &quot;never&quot;&quot;. | Then, we add another algorithm called Reverser which reverses HaltChecker&#39;s output. So, if &quot;never&quot; is the output of HaltChecker, then the output of Reverser is &quot;hals&quot;&quot;. It&#39;s also the same the other way around: if HaltChecker has an output of &quot;halts&quot;, then Reverser has an output of &quot;never&quot;. | We combine these algorithms into one entire body of code. | Since Reverser is the algorithm at the end, hence giving the ultimate output, notice how it prints &quot;never&quot; when in fact there is an end(As proved by HaltChecker), and how it also prints &quot;halts&quot; when there is in fact is no end to the code(Also proved by HaltChecker). As a result, HaltChecker is inaccurate and this is an undecidable problem. | . This Diagram Sums up the Entire Process in the Bulleted List: . Credits of diagram and example to Khan Academy . FAQ . Q: If Reverser is causing the problem, why not remove it? | A: Removing Reverser will remove the problems, however, we are looking for ways which create the problem of not outputting a correct result. One example is enough to prove that it is an undecidable problem since it proves that the code is not completely accurate. | . Extra Things to Notice . Note that while a computer may take a long time to run a section of code, it does not mean that the computer is going to run forever. | Humans are able to solve some undecidable problems. The entire Halting Problem example was to prove that computers cannot solve undecidable problems. | . Hacks . Come up with one situation in which a computer runs into an undecidable problem. Explain why it is considered an undecidable problem. . One situation in which a computer might run into an undecidable problem is if it is trying to determine whether a given program will run forever or will eventually stop. This is known as the halting problem, and it is considered undecidable because there is no algorithmic way to determine whether a program will halt or not. This is because it is possible for a program to be written in such a way that it can check its own execution and determine whether it will halt or not, but this would require the program to be able to solve the halting problem itself, which is impossible. Therefore, the halting problem is considered undecidable . 3.17 Homework . Your homework for Algorithmic Efficiency is pretty simple. . Use the 1st code below and graph it (Desmos, TI Inpire Cas, e.t.c), change the x value only! | Label the number of loops done as x and the time (microseconds) to find the index as y | Connect the points | Do the same thing with the 2nd code | Compare the two graphs and explain which one of the two is more efficient and why (min. 2 sentences) | Insert images of the graph either in your blog or on review ticket | The first graph appears to be more linear, whereas the second appears to be a logn graph. The linear graph is always increasing, meaning that the bigger your number is, the longer it takes to identify your number. However, in the second graph, while the curve does increase, it increases slower than the linear one. This means that as the range of a list of numbers increases, the linear graph shows a steeper increase in time than the logn graph. As a result, lists with more numbers will take less time for the logn graph than for the linear graph because the logn graph increases time in very small increments. As a result, the second graph is more efficient. Furthermore, the first graph&#39;s points are calculated using linear search, which iterates through each number in the list one by one until the number is identified. The points in the second graph, on the other hand, are calculated using binary search. Binary search divides the list in half each time, and this process is repeated until your number is found. As a result, because binary search is much faster than linear search, the second graph is much more efficient. . import time def linear_search(lst, x): start_time = time.perf_counter_ns() # records time (nanoseconds) for i in range(len(lst)): # loops through the entire list if lst[i] == x: # until the x value we are looking for is found end_time = time.perf_counter_ns() # records time again total_time = (end_time - start_time) // 1000 # subtracts last recorded time and first recorded time print(&quot;Found element after {} loops in {} microseconds&quot;.format(i+1, total_time)) # prints the results return print(&quot;Your number was found at&quot;, i) end_time = time.perf_counter_ns() # records the time again total_time = (end_time - start_time) // 1000 # subtracts last recorded time and first recorded time print(&quot;Element not found after {} loops in {} microseconds&quot;.format(len(lst), total_time)) # prints the results return &quot;Your number wasn&#39;t found :(&quot; lst = list(range(1, 10001)) # list with numbers 1-10000 x = 9000 # replace with an integer between 1 and 10000 (I suggest big numbers like 500, 2000, so on) linear_search(lst, x) # runs procedure . Found element after 9000 loops in 501 microseconds Your number was found at 8999 . . import time def binary_search(lt, x): start_time = time.perf_counter_ns() # starts timer low = 0 # sets the lower side mid = 0 # sets mid value high = len(lt) -1 # sets the higher side num_loops = 0 # number of loops the search undergoes to find the x value while low&lt;=high: # Loop ran until mid is reached num_loops += 1 # adds one loop each time process is repeated mid = (low + high) // 2 # takes the lowest and highest possible numbers and divides by 2 and rounds to closest whole # if lt[mid] == x: end_time = time.perf_counter_ns() # records time total_time = (end_time - start_time) // 1000 # time in microseconds print(&quot;Element found after {} loops in {} microseconds&quot;.format(num_loops, total_time)) # prints the results return mid # returns the index value elif lt[mid] &gt; x: # if mid was higher than x value, then sets new highest value as mid -1 high = mid -1 elif lt[mid] &lt; x: low = mid + 1 # if mid was lower than x, sets the new low as mid + 1 end_time = time.perf_counter_ns() total_time = (end_time - start_time) // 1000 print(&quot;Element not found after {} loops in {} microseconds&quot;.format(num_loops, total_time)) # prints the results return &quot;Your number wasn&#39;t found :(&quot; lt = list(range(1, 10001)) # list with numbers 1-10000 x = 9000 # replace with an integer between 1 and 10000 (I suggest big numbers like 500, 2000, so on) binary_search(lt, x) # runs procedure . Element found after 12 loops in 6 microseconds . 8999 . . 3.18 Homework: . Use the Jupyter notebook to write an algorithm that solves a decidable problem. You can use math or whatever else you would like to do. | Write code to get the computer to run forever. Check this example if you need help, but please come up with your own idea. | Homeworks, hacks, and classwork(filled in blanks) for both 3.17 and 3.18 are due on Thursday at 9:00 pm. -0.1 points for each day late. . def find_max(numbers): # Set the maximum value to the first number in the list max_value = numbers[0] # Loop through the rest of the numbers in the list for num in numbers[1:]: # If the current number is greater than the maximum value, update the maximum value if num &gt; max_value: max_value = num # Return the maximum value return max_value . def is_prime(n): # Given a positive integer n, determine whether it is prime. # This function is impossible to implement, because it is undecidable. # Example usage: is_prime(2) # This number is prime is_prime(4) # This number is not prime .",
            "url": "https://kcabralomana.github.io/Fastpages/lesson",
            "relUrl": "/lesson",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 print(num1) . 1 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 var = var1 + 5 var2 = var1 - var3 var1 = var2 var3 = (var1 + var2) / 2 var2 = 6 print(var1) print(var2) print(var3) . 7 6 7.0 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 print(Result) # it will print 20.4 . 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 print(Result) # it will print 0 . 0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) # it will print 13 . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) # it will print straightbrownhair (no spaces) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[0:4] yoda = abrev + &quot; &quot; + Verb + &quot; &quot; + Adjective2 + &quot; &quot; + Adjective print(yoda) . Mr.M is Very handsome . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[:7] yoda = Adjective2 + &quot; &quot; + Adjective + &quot; &quot; + abrev + &quot; &quot; + Verb + &quot;.&quot; print(yoda) . Very handsome Mr.Mort is. . Problem 2 . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 # 4 len2 = len(cookie2) * 45 #225 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = &quot;Chocolate has &quot; + str(len1) + &quot; votes&quot; + &quot; and Rasin has &quot; + str(len2) + &quot; votes&quot; print(votes) . Chocolate has 4.0 votes and Rasin has 225 votes . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len2 = len(cookie2) * 45 vote1 = (str(cookie) + &quot; vote &quot; + str(len2)) vote2 = (str(cookie2) + &quot; vote &quot; + str(len1)) votes = (str(vote1) + &quot; &quot; + str(vote2)) print(votes) . choclate vote 225 rasin vote 4.0 . Day 2 Topic: Mathematical Expressions and Strings . Algorithms . a set of instructions that can accomplish a task | Sequencing= order in which instructions are performed | Selection= choose which outcome based off a decision | Iteration= if a condition is true then the code can repeat | . Mathematical Expressions . Arithmetic operations exist in most programming languages | Subtraction (-), Addition (+), Multiplication (*), Division (/), Remainder(MOD) (%) Order of operations | parentheses are done first | then division and multiplication and modulus | addition and subtraction | . Variables . values can be stored in variables by setting a variable equal to certain values | sequencing w/ variables takes the most recent assignment | . Strings . collection of characters characters can be anything from numbers, letters, spaces, special symbols | . | len()= length of a string | lower()= converts to lowercase | used to handle textual data | .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "3.16 Lesson",
            "content": "First Order of Business: Get your notebook . Open a terminal in vscode, run command: cd _notebooks, type &#39;wget&#39; and paste this link into said terminal and run it . | Take notes wherever you please, but you will be graded on participating . | . So, what is a simulation anyway? . A simulation is a tested scenario used for viewing results/outputs to prepare for them in real world situations . | These can be used for games like dice rolling, spinners, etc . | These can be used for practical things such as building structures, testing car crashes, and other things before engaging in them in the real world . | These simulations can have the option of obeying real world physics (Gravity, collision) or they can go against these norms since this is a fictitious scenario, and couldn&#39;t happen in real life . | . Big Question . Which of the following simulations could be the LEAST useful? . | A retailer trying to identify which products sold the most . | A restaurant determining the efficiency of robots | An insurance company studying the rain impact of cars | A sports bike company studying design changes to their new bike design | . If you guessed a bike company, you&#39;re wrong, because the retail simulation was the right answer. Simulating robots in food service, sudying rain impact on vehicles, and new bike design can contribute a lot more to society in comparison to seeing what products sell more than others. | . Next Big Question . If you were making a simulation for making a new train station, which of the following would be true about this simulation? . It could reveal potential problems/safety issues before construction starts | It cannot be used to test the train station in different weather | Simulation will add high costs to projects | Simulation is not needed because this train station already exists | . Potential Saftey was the right answer, because you need somewhere to test the safety and ethicness of what you&#39;re about to do before you start building it. Otherwise, let&#39;s just say you&#39;ll have a special plaque for FBI&#39;s Most Wanted | . Simulation 1: . Both programs below do the same thing. Given a height and a weight, they calculate how long it will take for a object to fall to the ground in a vacuum subjected to normal Earth levels of gravity. . However, the second one is a simulation. It calculates the distance the object has fallen every 0.1 seconds. This is useful for if you wanted a visual representation of a falling object, which pure math can&#39;t do as smoothly. . height = float(input(&quot;height in meters?&quot;)) weight = input(&quot;weight in pounds?&quot;) stuff = (2 * (height / 9.8))**(1/2) print(&quot;It will take&quot;, stuff,&quot;seconds for an object that weighs&quot;,weight,&quot;pounds&quot;,&quot;to fall &quot;,height,&quot;meters in a vacuum&quot;) . It will take 0.4517539514526256 seconds for an object that weighs 1 pounds to fall 1.0 meters in a vacuum . t = 0 g = 0 d = 0 false = True while false: t = t + 0.1 d = 9.8 / 2 * (t**2) if d &gt;= height: false = False #print(d) # if you want to print the distance every time it calculates it. Too long to output to a terminal, but this could be useful to display graphically. #print(t) print(t) print(d) . Simulation 2: . This simulation is made in order to simulate movement on a 2d plane vs a 3d plane. . | How it works: we have multiple variables, if statements and equations under a while command in order to randomy generate steps on a 2d plane. Once it reaches the set destination, it will say that the man made it home after x amount of steps. . | For the 3D plane, it takes a lot longer due to how big and open the 3d environment is, so there are more if statements in the 3d plane . | . (explain further) . import random x = 0 y = 0 nights = 0 turn = 0 stopped = 0 turns = [] while (nights &lt; 100): step = random.randrange(4) if step == 0: x = x+1 if step == 1: x = x-1 if step == 2: y = y+1 if step == 3: y = y-1 turn = turn + 1 if x == 0 and y == 0: nights = nights + 1 print(&quot;The Man Has Made It Home After &quot;, turn, &quot;Turns&quot;) turns.append(turn) turn = 0 if turn/1000 % 1000 == 0 and x + y != 0: print(&quot;(&quot;, x,y, &quot;)&quot;) if (turn &gt; 10000000): stopped = stopped + 1 turn = 0 x = 0 y = 0 nights = nights + 1 print(&quot;Caped&quot;) average = sum(turns) / len(turns) print(&quot;Avaerage&quot;, average, &quot;Ones that when&#39;t too long &quot;, stopped) . The Man Has Made It Home After 2 Turns The Man Has Made It Home After 242 Turns The Man Has Made It Home After 1104 Turns The Man Has Made It Home After 8 Turns The Man Has Made It Home After 252 Turns The Man Has Made It Home After 72 Turns The Man Has Made It Home After 6 Turns ( -433 -177 ) ( -980 352 ) ( -2076 644 ) ( -2967 1767 ) ( -1860 418 ) ( -3097 701 ) ( -3413 1203 ) ( -2200 1040 ) ( -3453 -323 ) ( -3768 -650 ) Caped The Man Has Made It Home After 66 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 26 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 3226 Turns ( -2003 -1571 ) ( -1772 572 ) ( -1920 64 ) ( -2421 283 ) ( -2743 -387 ) ( -2816 -1574 ) ( -2482 -1758 ) ( -2345 -1217 ) ( -2839 -1531 ) ( -3143 -2673 ) Caped The Man Has Made It Home After 2 Turns The Man Has Made It Home After 38 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 2 Turns ( 152 -36 ) ( -886 758 ) ( -1492 254 ) ( -1674 506 ) ( -1742 -260 ) ( -1527 1071 ) ( -1778 1190 ) ( -2104 1398 ) ( -3419 2061 ) ( -3453 2199 ) Caped The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 196 Turns The Man Has Made It Home After 24 Turns The Man Has Made It Home After 43918 Turns The Man Has Made It Home After 3250 Turns The Man Has Made It Home After 10 Turns ( 260 -302 ) The Man Has Made It Home After 1435704 Turns The Man Has Made It Home After 8 Turns The Man Has Made It Home After 12 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 9576 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 34 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 4826 Turns ( 420 952 ) ( -181 1257 ) ( -549 1561 ) ( -837 1731 ) ( -1647 751 ) ( -1994 1794 ) ( -1643 2657 ) ( -1793 3483 ) ( -1296 3288 ) ( -1046 3224 ) Caped ( 515 301 ) ( 398 702 ) ( 1403 1239 ) ( 1704 1474 ) ( 2642 1146 ) ( 2893 2009 ) ( 2974 2422 ) ( 3010 2506 ) ( 3321 2619 ) ( 3051 2213 ) Caped ( 276 -96 ) ( 568 40 ) ( -452 208 ) ( -703 -499 ) ( -900 -950 ) ( -877 -229 ) ( -1173 -469 ) ( -297 -237 ) The Man Has Made It Home After 8474140 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 2 Turns ( 332 -268 ) ( -579 -1183 ) ( 921 -1685 ) ( 1338 -1394 ) ( 1207 -2007 ) ( 1160 -2348 ) ( 530 -3690 ) ( 1903 -3183 ) ( 445 -3119 ) ( -753 -3789 ) Caped The Man Has Made It Home After 4 Turns The Man Has Made It Home After 230 Turns ( -949 -577 ) ( -1917 325 ) ( -446 440 ) ( 278 502 ) ( -922 382 ) ( -419 -1627 ) ( -682 -912 ) ( -1997 -413 ) ( -192 -830 ) ( 309 -1177 ) Caped The Man Has Made It Home After 98 Turns The Man Has Made It Home After 22 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 94464 Turns The Man Has Made It Home After 14 Turns The Man Has Made It Home After 6902 Turns The Man Has Made It Home After 4 Turns ( 140 -572 ) ( -102 114 ) The Man Has Made It Home After 2933872 Turns The Man Has Made It Home After 2 Turns ( 462 1596 ) ( 299 807 ) ( -629 373 ) ( -1554 -398 ) ( -1197 -229 ) ( -1638 412 ) ( -1445 431 ) ( -1756 694 ) ( -652 342 ) ( -524 268 ) Caped ( 80 578 ) ( -843 715 ) ( -1059 101 ) ( -885 743 ) ( -113 721 ) ( -1565 1535 ) ( -2254 688 ) ( -2469 965 ) ( -4008 824 ) ( -3755 1215 ) Caped ( -191 -2153 ) ( -104 -1092 ) ( -72 -940 ) ( 774 -1536 ) ( 88 -1348 ) ( -1247 -341 ) ( -944 146 ) ( -1594 112 ) ( -2059 469 ) ( -819 1035 ) Caped ( 75 -1345 ) ( -530 -712 ) ( -1646 -1282 ) ( -2029 -1435 ) ( -599 -1973 ) ( -23 -1863 ) ( -1300 -2174 ) ( -1740 -2608 ) ( -1996 -1472 ) ( -1862 -1522 ) Caped The Man Has Made It Home After 4 Turns The Man Has Made It Home After 784 Turns ( -1587 -1415 ) ( -1254 -1516 ) ( -1589 -1551 ) ( -1695 -2047 ) ( -2194 -1582 ) ( -2952 -2630 ) ( -3136 -3426 ) ( -2622 -2648 ) ( -2640 -2884 ) ( -2657 -2695 ) Caped The Man Has Made It Home After 78 Turns The Man Has Made It Home After 322148 Turns The Man Has Made It Home After 32396 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 54 Turns The Man Has Made It Home After 916 Turns The Man Has Made It Home After 18 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 30 Turns The Man Has Made It Home After 226 Turns The Man Has Made It Home After 32 Turns The Man Has Made It Home After 26 Turns ( -393 -257 ) ( -847 -119 ) ( -1387 -783 ) ( -2900 130 ) ( -1599 -77 ) ( -219 -625 ) ( -871 -747 ) ( -1722 -556 ) ( -1682 -822 ) ( 155 -787 ) Caped ( 278 -482 ) ( 812 -444 ) ( 1309 -1241 ) ( 1620 -1882 ) ( 628 -1866 ) ( 827 -2755 ) ( -78 -2066 ) ( -552 -1990 ) ( -870 -822 ) ( -247 181 ) Caped The Man Has Made It Home After 44 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 12 Turns The Man Has Made It Home After 12 Turns The Man Has Made It Home After 8 Turns ( 230 1074 ) ( 648 -330 ) ( 826 -446 ) ( 1185 -1139 ) ( 987 -61 ) ( 1461 53 ) ( 2394 -1044 ) ( 1977 -2261 ) ( 2329 -1317 ) ( 1306 -2010 ) Caped The Man Has Made It Home After 7158 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 10 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 666 Turns Avaerage 157377.3411764706 Ones that when&#39;t too long 15 . import random x = 0 y = 0 z = 0 nights = 0 turn = 0 stopped = 0 turns = [] while (nights &lt; 100): #rando movement step = random.randrange(6) if step == 0: x = x+1 if step == 1: x = x-1 if step == 2: y = y+1 if step == 3: y = y-1 if step == 4: z = z+1 if step == 5: z = z-1 #Turn counter turn = turn + 1 #Goal check if x == 0 and y == 0 and z == 0: nights = nights + 1 print(&quot;The Bird Has Made It Home After &quot;, turn, &quot;Turns&quot;) turns.append(turn) turn = 0 if turn/1000 % 1000 == 0 and x + y + z != 0: print(&quot;(&quot;, x,y, &quot;) &quot;,&quot;| &quot;, z) #Too long Stoper if (turn &gt; 10000000): stopped = stopped + 1 turn = 0 x = 0 y = 0 z = 0 nights = nights + 1 print(&quot;Caped&quot;) average = sum(turns) / len(turns) print(&quot;Avaerage&quot;, average,&quot;Ones that when&#39;t too long &quot;, stopped) . Simulations in the wild . Simulations are used extremely frequently in real life applications. One of the most common examples of simulations are video games. A games physics engine can accurately simulate objects colliding . Another example is Blender, the software used in 3d animations class, here at Del Norte. Blender is made up of many small simulations, but one big one it uses is simulating the way light bounces off of and interacts with objects. . HW !!! . Create a simulation. It can be anything, just has to simulate something. . Some ideas: . Two objects colliding | Gravity on other planets | . AND . Find an example of a simulation in a software/game you use, screenshot, and explain how it is a simulation . Running the sims make it slow to commit . Sim #1 updates 2 variables by a random amount at each iteration (runs for 100 iterations) . import random # Define the number of iterations num_iterations = 100 # Set the initial values of the variables value_1 = 0 value_2 = 0 # Define the update function def update_values(): global value_1 global value_2 value_1 += random.randint(-1, 1) value_2 += random.randint(-1, 1) # Run the simulation for the specified number of iterations for i in range(num_iterations): update_values() print(f&quot;Iteration {i}: value_1 = {value_1}, value_2 = {value_2}&quot;) . Sim #2 an object falling under the influence of gravity . import matplotlib.pyplot as plt # Define the initial conditions x = 0 y = 0 vx = 0 vy = 0 g = 9.8 # Set the time step and number of iterations dt = 0.1 num_iterations = 100 # Define the update function def update_position(): global x, y, vx, vy x += vx * dt y += vy * dt vy -= g * dt # Run the simulation for the specified number of iterations for i in range(num_iterations): update_position() # Plot the results plt.plot(x, y) plt.show() . Example of simulation . GTA Character Editor . .",
            "url": "https://kcabralomana.github.io/Fastpages/lesson/2022/12/13/day_8teching.html",
            "relUrl": "/lesson/2022/12/13/day_8teching.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Day 7 Hacks",
            "content": "First Library . Pandas: Pandas is a popular Python library for data analysis and manipulation. It provides powerful tools and data structures for working with structured and unstructured data, such as tabular data (e.g. data in tables), time series data, and more. Pandas makes it easy to clean, transform, and analyze large datasets, and is widely used in the field of data science and machine learning. . Second Library . Keras: Keras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano. It provides a simple and intuitive interface for building and training deep learning models, and is designed to be modular and extensible, making it easy to experiment with different architectures and algorithms. Keras is widely used in the field of deep learning and computer vision, and is a powerful tool for building and training complex neural networks. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/12/13/day_7hacks.html",
            "relUrl": "/markdown/2022/12/13/day_7hacks.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Compsci/Technical Business Panel",
            "content": "Overview . On Tuesday 12/13 we met 2 wonderful speakers, Kathyleen Beveridge (Project Management) and Kris Porter (Developer Operation). We learned about their very own steps to becoming the person they are today and how they have used their experience and education to advance in their fields of work. I found it really interesting how both speakers never really stayed in one field of study or field of work. They spoke about how they are always learning new concepts and learning new aspects in their fields of work. Mr. Porter gave really interesting insights about his experience as a site reliability engineer and how he was able to apply his education and what he learned to his work. Mrs. Beveridge also gave some nice insight on what she does as a Sr. Director of Marketing and how he background in engineering and STEM helps her through her work. . Reflection . I really liked this presentation. I thought that there was a lot to take away from both presenters. We learned about how they were able to use various element in their education and aspects they learned from their jobs to help them in STEM. One takeaway from Mrs. Beveridge that really stood out to me was her quote from Maya Angelou. “My mission in life is not merely to survive, but to thrive; and to do so with some passion, some compassion, some humor, and some style.” She explained how this quote really spoke to her and I found it interesting how she was able to apply this quote to her own life and her own passions. I feel like the aspects in this quote really speaks to me about her motivation and how she was able to climb the ranks and become as successful as she is today. I also really found it interesting how she learned about STEM which got her into the science industry and later into marketing and her job she holds today. Overall her story was really inspirational and showed me and I believe many other would also agree that her grit and determination through her passion of STEM led her career and the person she is today. Moving on to more of a computer science perspective from Mr. Porter I found his presentation also very interesting. I really like how he was able to connect what he does and produces in his job to our own computer science class and what we are currently learning. I really enjoyed how he was able to connect his business ideas to our own class. I found it really interesting how he was able to use his expertise in algorithms, deployment, and computing to connect with our very own class. One thing that I really found interesting was how he knew that he would have a chance of getting layed off after the merge of twitter after looking back a Qualcomm an their merges. I also like how he talked about his education and how he also went back to education to advance his expertise and find his very own passion. Overall I really liked both presentation and learned a lot from their life experiences and jobs in their own fields of work. . Notes . Kathyleen Beveridge. Born in vietnam. Studied abroad in Spain. Finance bachelor degree. MBA at USC. Maya angelou “My mission in life is not merely to survive, but to thrive; and to do so with some passion, some compassion, some humor, and some style”. She worked at wells fargo as a stock broker, she realized that it wasn’t for her. She went back as an alumni and pursued career in high tech. Moved to san diego and surfed. Worked a qualcomm with Mr. Mort. Worked at 3 companies (HP, Qualcomm, Thermo Fisher Scientific). She feels that it is a 1 on 1 impact. What you do has a macro impact on the world. She loves how we can take a concept and build it and bring it to the market and make an impact on the world. . Kris Porter. SRE, devops engineer. Studied radar systems (electrical), databases. Center for embedded networked sensors. Sensor sent in costa rica that scanned the environment. Where he learned linux operating system. Worked on NBC olympics in 2012. Work on twitter home timeline. Ifnnfrastructures. Streaming. Analytics. Twitter. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/12/13/compsci-business-panel.html",
            "relUrl": "/markdown/2022/12/13/compsci-business-panel.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Unit 3 Sections 14 and 15",
            "content": "wget https://raw.githubusercontent.com/aidenhuynh/CS_Swag/master/_notebooks/2022-11-30-randomvalues.ipynb . Libraries . A library is a collection of precompiled codes that can be used later on in a program for some specific well-defined operations. | These precompiled codes can be referred to as modules. Each module contains bundles of code that can be used repeatedly in different programs. | A library may also contain documentation, configuration data, message templates, classes, and values, etc. | . Why are libraries important? . Using Libraries makes Python Programming simpler and convenient for the programmer. | One example would be through looping and iteration, as we don’t need to write the same code again and again for different programs. | Python libraries play a very vital role in fields of Machine Learning, Data Science, Data Visualization, etc. | . A few libraries that simplify coding processes: . Pillow allows you to work with images. | Tensor Flow helps with data automation and monitors performance. | Matplotlib allows you to make 2D graphs and plots. | . The AP Exam Refrence Sheet itself is a library! . Hacks: . Research two other Python Libraries NOT DISCUSSED DURING LESSON and make a markdown post, explaining their function and how it helps programmers code. . API&#8217;s . An Application Program Interface, or API, contains specific direction for how the procedures in a library behave and can be used. | An API acts as a gateway for the imported procedures from a library to interact with the rest of your code. | . Activity: Walkthrough with NumPy . Install NumPy on VSCode: Open New Terminal In VSCode: | pip3 install --upgrade pip | pip install numpy | | . REMEMBER: When running library code cells use Python Interpreter Conda (Version 3.9.12) . Example of using NumPy for arrays: . import numpy as np new_matrix = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) print (new_matrix) . [[1 2 3] [4 5 6] [7 8 9]] . Example of using NumPy for derivatives: . import numpy as np # defining polynomial function var = np.poly1d([2, 0, 1]) print(&quot;Polynomial function, f(x): n&quot;, var) # calculating the derivative derivative = var.deriv() print(&quot;Derivative, f(x)&#39;=&quot;, derivative) # calculates the derivative of after # given value of x print(&quot;When x=5 f(x)&#39;=&quot;, derivative(5)) . Polynomial function, f(x): 2 2 x + 1 Derivative, f(x)&#39;= 4 x When x=5 f(x)&#39;= 20 . Random Values . Random number generation (RNG) produces a random number (crazy right?) This means that a procedure with RNG can return different values even if the parameters (inputs) do not change | . | CollegeBoard uses RANDOM(A, B), to return an integer between integers A and B. RANDOM(1, 10) can output 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10 | In Python, this would be random.randint(A, B), after importing Python&#39;s &quot;random&quot; library (import random) | JavaScript&#39;s works a little differently, with Math.random() returning a value between 0 and 1. To match Python and CollegeBoard, you could make a procedure like this | . | . | . CollegeBoard Example: What is the possible range of values for answ3 . Convert the following procedure to Python, then determine the range of outputs if n = 5. . PROCEDURE Dice(n) sum ← 0 REPEAT UNTIL n = 0 sum ← sum + RANDOM(1, 6) n ← n - 1 RETURN sum . import random # Fill in the blank def Dice(n): sum = 0 while n &gt; 0: sum = sum + random.randint(1, 6) n -= 1 return sum Dice(5) . 18 . Homework . Write a procedure that generates n random numbers, then sorts those numbers into lists of even and odd numbers (JS or Python, Python will be easier). . | Using NumPy and only coding in python cell, find the answer to the following questions: a. What is the derivative of 2x^5 - 6x^2 + 24x? b. What is the derivative of (13x^4 + 4x^2) / 2 when x = 9? . | Suppose you have a group of 10 dogs and 10 cats, and you want to create a random order for them. Show how random number generation could be used to create this random order. . | import random # Function to generate n random numbers and sort them into even and odd lists def sort_numbers(n): # Generate n random numbers numbers = [] for i in range(n): numbers.append(random.randint(1, 100)) # Sort numbers into even and odd lists even = [] odd = [] for number in numbers: if number % 2 == 0: even.append(number) else: odd.append(number) return even, odd # Generate 10 random numbers and sort them into even and odd lists even, odd = sort_numbers(10) # Print even and odd lists print(&quot;Even numbers: &quot;, even) print(&quot;Odd numbers: &quot;, odd) . Even numbers: [62, 20, 82, 8, 92] Odd numbers: [83, 69, 81, 73, 25] . import numpy as np # Define polynomial 2x^5 - 6x^2 + 24x poly = [2, 0, -6, 24, 0] # Calculate derivative deriv = np.polyder(poly) print(&quot;The derivative of 2x^5 - 6x^2 + 24x is: &quot;, deriv) . The derivative of 2x^5 - 6x^2 + 24x is: [ 8 0 -12 24] . import numpy as np # Define polynomial (13x^4 + 4x^2) / 2 poly = [13, 0, 4, 0, 0] # Calculate derivative deriv = np.polyder(poly) # Evaluate derivative at x = 9 result = deriv(9) print(&quot;The derivative of (13x^4 + 4x^2) / 2 when x = 9 is: &quot;, result) . TypeError Traceback (most recent call last) /home/kcabralomana/Fastpages/_notebooks/2022-12-12-day_7teaching.ipynb Cell 13 in &lt;cell line: 10&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-12-12-day_7teaching.ipynb#X16sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; deriv = np.polyder(poly) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-12-12-day_7teaching.ipynb#X16sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; # Evaluate derivative at x = 9 &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-12-12-day_7teaching.ipynb#X16sdnNjb2RlLXJlbW90ZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; result = deriv(9) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-12-12-day_7teaching.ipynb#X16sdnNjb2RlLXJlbW90ZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; print(&#34;The derivative of (13x^4 + 4x^2) / 2 when x = 9 is: &#34;, result) TypeError: &#39;numpy.ndarray&#39; object is not callable . import random # Create a list of dogs and cats dogs = [&quot;Max&quot;, &quot;Buddy&quot;, &quot;Charlie&quot;, &quot;Rocky&quot;, &quot;Daisy&quot;, &quot;Lucy&quot;, &quot;Sadie&quot;, &quot;Molly&quot;, &quot;Roxy&quot;, &quot;Zeus&quot;] cats = [&quot;Simba&quot;, &quot;Mittens&quot;, &quot;Oliver&quot;, &quot;Tiger&quot;, &quot;Lily&quot;, &quot;Kitty&quot;, &quot;Missy&quot;, &quot;Smokey&quot;, &quot;Socks&quot;, &quot;Boots&quot;] # Create a list of the combined dogs and cats animals = dogs + cats # Use the random.shuffle() function to shuffle the list of animals into a random order random.shuffle(animals) # Print the shuffled list of animals print(animals) . [&#39;Zeus&#39;, &#39;Charlie&#39;, &#39;Boots&#39;, &#39;Mittens&#39;, &#39;Lucy&#39;, &#39;Roxy&#39;, &#39;Lily&#39;, &#39;Buddy&#39;, &#39;Socks&#39;, &#39;Daisy&#39;, &#39;Kitty&#39;, &#39;Oliver&#39;, &#39;Rocky&#39;, &#39;Missy&#39;, &#39;Smokey&#39;, &#39;Tiger&#39;, &#39;Sadie&#39;, &#39;Simba&#39;, &#39;Molly&#39;, &#39;Max&#39;] . Libraries . collection of precompiled codes that can be used in a program for operations | Precompiled codes referred to as modules, contains bundles of code | May contain documentation, configuration data,message templates, classses, and values . | can be used to loop and iterations . | . API . application program interface, contains specific direction for how the procedures in a library behave and can be used | acts as a gateway fro the imported procedures to interact with the rest of you code | .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/libraries",
            "relUrl": "/jupyter/libraries",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Unit 2 Vocabulary",
            "content": "Unit 2: Binary/Data Terms . Bits: A bit or a binary digit, is the smallest unit of data that a computer can process and store. A bit can be one of 2 physical states, such as either 0 or 1, yes or no, and true or false. . Bytes: A byte is a unit of data that is eight bits long. It is used by computers to represent a character such as a letter or number symbol. . Hexadecimal: Hexadecimal is a numbering system with base 16. There are 16 symbols or possible digit values from 0 to 9, followed by six alphabetic characters – A, B, C, D, E and F. It can be used to represent large numbers with fewer digits. . Binary Numbers . Unsigned Integer: Numbers without + or - sign, only representing the magnitude not the direction. Used when we know that the value we are storing will always be non-negative . Ex. 1, 2, 3, 4 . Signed Integer: The default where the variable can hold positive or negative numbers . Ex. -1, 6, -29, 1000 . Floating Point: Positive or negative whole number with a decimal point. Used to represent real numbers and is written with a decimal point dividing the integer and fractional parts . Ex. 1.23, 87.425, and -9039454.2, NOT 101, -3, 18203 . Binary Data Abstractions: . Boolean: Variable type that represents one of two values: True or False. . A = 200 . B = 33 . If b &gt; a: . print(“b is greater than a”) . If a &gt; b: . print(“a is greater than b”) . ASCII: Stands for American Standard Code for Information Interchange. ASCII was first created when all people wanted computers to be able to show was numbers, letters, punctuation, and non-printing commands(Enter, Delete, F1).. All ASCII encoded character can be represented by 1 byte, or 8 bits for a total of 2^8 = 127 different total characters. . Ex. lowercase “h” character → 104 (D) → 01101000(B) . Unicode: today, people use emojis and new symbols like other languages and stuff and computers needed to be able to represent all that. Unicode is a new standard defining an association between characters and even more numbers. Each unicode character (utf8) is 4 bytes, or 32 bits, enough for 2^32 different characters. Most modern programming languages represent strings as utf8 encoded characters (hex) because people use these new symbols in their code, but old languages like C still associat either character type with a single byte integer . Ex. “Hello” → U+0048 U+0065 U+006C U+006C U+006F . RGB: RGB (red, green, and blue) refers to a system for representing the colors to be used on a computer display.These 3 colors can be combined in various proportions to obtain any color in the visible spectrum. . Ex. rgb(255, 0, 0) = red because red is set to its highest value (255), and the other two (green and blue) are set to 0. . Data Compression . Lossy: a techinique that reduces file size by discarding less important information . Lossless (unit 3): Every bit of data originally in a file remains after it is uncompressed, and all the information is restored. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/12/09/vocab.html",
            "relUrl": "/markdown/2022/12/09/vocab.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "Student Teaching Week 2 Review",
            "content": "Day 1 (Our Presentation) .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/12/09/student-teachingwk2.html",
            "relUrl": "/markdown/2022/12/09/student-teachingwk2.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Day 5 Teaching HW",
            "content": "Defining Algorithms . An algorithm is a process or set of rules to be followed through CODE | can be written in differeent ways and still accomplish the tasks | appear similar may yeild different results | conditionals can be written the same as boolean expressions | . Conditionals vs Booleans . condition is a booleans expresson when an expression outputs either tru or false | boolean values can only ever hold true or false | . 3.8 part 3 . Binary Search . determine the number of iterations to find value uin data set | Binary search: search algoristhm that finds the position of a target value w/in an array | an algorithm for iterating to find a value inside adata set | starts in the middle of a data set of numbers and eliminates 1/2 the data, process is repeated until value is found | . def binary_search(arr, x): low = 0 high = len(arr)-1 mid = 0 if low&lt;=high: mid = (low + high) // 2 #integer part if x == arr[mid]: return mid elif x &lt; arr[mid]: high = mid - 1 return high else: low = mid + 1 return low else: return -1 arr = [1,2,3,4,5,6,7,8,9,10,11] x = 11 result = binary_search(arr, x) if result != -1: print(&quot;Found at position : &quot;,str(result)) else: print(&quot;Not in the array!&quot;) . Found at position : 6 . import random # allows the program to generate random numbers score = 0 iterate = 0 while (iterate &lt; 3): var1 = random.randint(1, 20) if (var1 &gt;= score): score = var1 iterate = iterate + 1 else: print(f&quot;Score: {score}&quot;) . Score: 12 .",
            "url": "https://kcabralomana.github.io/Fastpages/2022/12/09/day5hw.html",
            "relUrl": "/2022/12/09/day5hw.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Unit 3 Sections 12-13",
            "content": "Calling Procedures . Slide 1: . A procedure is a named group of programming instructions that may have parameters and return values. | Procedures are referred to by different names, such as method or function, depending on the programing language. | Parameters are input values of a procedure. Arguments specify the values of the parameters when procedure is called. | A procedure call interrupts the sequential execution of statements causing the program to execute the statements within the procedure before continuing. One the last statement in the procedure (or a return statement) has executed, flow or control is returned to the point immediately following where the procedure was called. | . Slide 2: . When calling procedures, it&#39;s important to take notice to whether it returns data, or a block of statements. | If the procedure just returns a block of statements, you call the procedure by referring to the procedure name, and inputting the arguments. | If the procedure returns some sort of data like a boolean or value, then you will assign that value to a variable | . Slide 3: . Assume the Temperature outside is Fahrenheit. | The procedure convertFahrenheit is intended to convert from Fahrenheit to Celsius. | Convert the following psuedocode to python | . def convertFahrenheit(temperature): # code goes here celsius = temperature - 32 celsius = celsius *5/9 return celsius outsideTemp = input(&quot;What is the temperature Outside?&quot;) print(convertFahrenheit(int(outsideTemp))) . -2.2222222222222223 . Developing Procedures . Slide 8: . Picking a descriptive name is important in case you revisit the code later on (separate words with capitals) There are 2 different types of procedures- ones that return a value and those that simply execute a block of statements Steps of developing procedure: picking a useful name, thinking of parameters (what data does the procedure need to know), making a flowchart or writing procedure in pseudocode, and actually developing the procedure. . Slide 9: . In this example, a teacher is writing a program that will replace the grade on a previous quiz if the new grade is better than the previous. . What would be a good name for this procedure? | What parameters do we need for this procedure? | Try writing this procedure out in python based on the given pseudocode | . quizGrade = 32 def currentGrade(currentPoints): currentGrade = currentPoints / 44 currentGrade = currentGrade * 100 return currentGrade newPoints = int(input(&quot;how many points do you currently have?&quot;)) newPercent = (currentGrade(int(newPoints))) if (newPoints &gt; quizGrade): newquizGrade = newPercent print(&quot;your new grade is: &quot; + str(newquizGrade)) else: print(&quot;your score is still &quot; + str(quizGrade)) . your new grade is: 84.0909090909091 . Procedural Abstraction . One type of abstraction is procedural abstraction which provides a name for a process and allows a procedure to be used only knowing what it does and not how it does it | This is very helpful in managing complexity in a program | Subdivision of a program into separate subprograms is called modularity | A procedural abstraction may extract shared features to generalize functionality instead of duplicating code. This allows for program reuse, which helps manage complexity | When a pre-written procedure is called, you don’t necessarily need to know the details of this, just what it does and how to call it | Simply, procedural abstraction is naming and calling a prewritten procedure | Making sure to include the right arguments so the procedure can do what its supposed to do is crucial | . Complexity Example . One of the biggest advantages of procedural abstraction is managing complexity. . Think about the process of simplifying the code? What do you think the advantage of the code segment on the left is? . Code Segment 1 Code Segment 2 . ROTATE_LEFT() | detourLeft() | . MOVE_FORWARD() | turnCorner() | . ROTATE_RIGHT | MOVE_FORWARD() | . MOVE_FORWARD() | MOVE_FORWARD() | . MOVE_FORWARD() | MOVE_FORWARD() | . ROTATE_RIGHT() | ROTATE_RIGHT() | . MOVE_FORWARD() | MOVE_FORWARD() | . ROTATE_LEFT() | ROTATE_LEFT() | . MOVE_FORWARD() | MOVE_FORWARD() | . ROTATE_LEFT() | ROTATE_LEFT() | . MOVE_FORWARD() | MOVE_FORWARD() | . MOVE_FORWARD | MOVE_FORWARD | . MOVE_FORWARD() | MOVE_FORWARD() | . Hacks . Write a python procedure about something which can help you in school, for example the teacher’s function we spoke about earlier. | Points will be awarded based on creativity and functionality | 0.1 points will be deducted for late submissions | Submit the notes with all blanks filled in (scored out of 0.5 points) and the python procedure (scored out of 0.5 points) by Monday 12/12 at 11:59 PM. | . def grade_needed(current_grade, final_grade_weight, desired_grade): current_grade /= 100 final_grade_weight /= 100 desired_grade /= 100 return (desired_grade - current_grade * (1 - final_grade_weight)) / final_grade_weight current_grade = float(input(&quot;Enter your current grade as a percentage: &quot;)) final_grade_weight = float(input(&quot;Enter the weight of the final exam as a percentage: &quot;)) desired_grade = float(input(&quot;Enter your desired overall grade as a percentage: &quot;)) grade_needed = grade_needed(current_grade, final_grade_weight, desired_grade) print(&quot;Your current grade is: &quot; + str(current_grade)) print(&quot;The final exam weight is: &quot; + str(final_grade_weight)) print(&quot;Your desired grade is: &quot; + str(desired_grade)) print(f&quot;You need to get a grade of {grade_needed * 100}% on the final exam.&quot;) . Your current grade is: 98.0 The final exam weight is: 20.0 Your desired grade is: 90.0 You need to get a grade of 57.99999999999999% on the final exam. .",
            "url": "https://kcabralomana.github.io/Fastpages/lessons/2022/12/08/day_6teaching.html",
            "relUrl": "/lessons/2022/12/08/day_6teaching.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Day 5 Teaching HW",
            "content": "Defining Algorithms . An algorithm is a process or set of rules to be followed through CODE | can be written in differeent ways and still accomplish the tasks | appear similar may yeild different results | conditionals can be written the same as boolean expressions | . Conditionals vs Booleans . condition is a booleans expresson when an expression outputs either tru or false | boolean values can only ever hold true or false | . 3.8 part 3 . Binary Search . determine the number of iterations to find value uin data set | Binary search: search algoristhm that finds the position of a target value w/in an array | an algorithm for iterating to find a value inside adata set | starts in the middle of a data set of numbers and eliminates 1/2 the data, process is repeated until value is found | . print(&quot;choose value for x&quot;) varx=int(input(&quot;Enter any positive Integer&quot;)) if (varx %2 == 0): print(&quot;the number is even&quot;) else: print(&quot;the number is odd&quot;) # Run this cell to see how it works . import random # allows the program to generate random numbers score = 0 iterate = 0 while (iterate &lt; 3): var1 = random.randint(1, 20) if (var1 &gt;= score): score = var1 iterate = iterate + 1 else: print(f&quot;Score: {score}&quot;) . Score: {score} .",
            "url": "https://kcabralomana.github.io/Fastpages/2022/12/06/day5hw.html",
            "relUrl": "/2022/12/06/day5hw.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Day 3 HW/Notes",
            "content": "Boolean Expressions . Boolean= A data type with two possible values: true or false | . Boolean and Binary . Boolean math and binary notation both use the same two ciphers: 1 and 0 | Binary numbers may be composed of many bits adding up in place-weighted form to any finite value, or size | . KNOW . A Boolean value is either TRUE or FALSE | . Logical Operators . AND : returns TRUE if the operands around it are TRUE | OR : returns TRUE if at least one operand is TRUE | NOT : returns TRUE if the following boolean is FALSE | . Conditionals . Selection: uses a condition that evaluates to true or false | Algorithm is a finite set of instructions that accomplish a specific task | . Nested Conditionals . statements consisting of conditional statements within other conditional statements | Utilizes &quot;if else&quot; statements within &quot;if else&quot; statements | . One in Python . # Here is a python template for you to use. expired = False cost = 50 if(expired): print(&#39;this product is no good&#39;) else: if (cost &gt; 50): print(&#39;this product is too expensive&#39;) elif (cost &lt; 25): print(&#39;this is a cheap product&#39;) else: print(&#39;this is a regular product&#39;) . this is a regular product . One in JavaScript . product = {&quot;expired&quot;:false, &quot;cost&quot;:10} if (product[&quot;expired&quot;] == true) { console.log(&quot;This product is no good!!!!!!!&quot;) } else { if (product[&quot;cost&quot;] &gt; 50) { console.log(&quot;THis product is too expensive!11111&quot;) } else if (product[&quot;cost&quot;] &gt; 25) { console.log(&quot;this product normal&quot;) } else { console.log(&quot;cheap&quot;) } } . cheap . questions = { &quot;Which letter is farthest left on the keyboard?&quot;:[&quot;a. L&quot;,&quot;b. U&quot;, &quot;c. S&quot;, &quot;d. N&quot;], &quot;Which company isn&#39;t a computer company?&quot;:[&quot;a. Apple&quot;, &quot;b. Lenovo&quot;,&quot;c. Nike&quot;, &quot;d. HP&quot;], &quot;What coding language do we mainly use in class?&quot;:[&quot;a. HTML&quot;,&quot;b. CSS&quot;, &quot;c. JavaScript&quot;, &quot;d. Python&quot;] } answers = { &quot;Which letter is farthest left on the keyboard?&quot;:&quot;c&quot;, &quot;Which company isn&#39;t a computer company?&quot;:&quot;c&quot;, &quot;What coding language do we mainly use in class?&quot;:&quot;d&quot; } score = 0 print(&quot;Ready for the computer quiz?&quot;) for q,a in questions.items(): print(q) print(*a) inp = input(&quot;Enter Your Answer&quot;) if(answers.get(q)==inp): score = score +1 else: print(&quot;Try again&quot;) break print(&#39;Final Score:&#39;, score) . Ready for the computer quiz? Which letter is farthest left on the keyboard? a. L b. U c. S d. N Which company isn&#39;t a computer company? a. Apple b. Lenovo c. Nike d. HP What coding language do we mainly use in class? a. HTML b. CSS c. JavaScript d. Python Final Score: 3 .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%200/2022/12/06/day3hw.html",
            "relUrl": "/jupyter/code/week%200/2022/12/06/day3hw.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "3.10 Lists",
            "content": "List examples in Python, JavaScript, and Pseudocode. . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] print (fruits) . const fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;]; . fruits ← [apple, grape, strawberry] . Terms . Index: a term used to sort data in order to reference to an element in a list | Elements: the values in the list assigned to an index | . fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;] index = 1 print (fruits[index]) . grape . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] letters = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;] inp = input().lower() . Methods in Lists . Method Definition Example . append() | adds element to the end of the list | fruits.append(&quot;watermelon&quot;) | . index() | returns the index of the first element with the specified value | fruits.index(&quot;apple&quot;) | . insert() | adds element at given position | fruits.insert(1, &quot;watermelon&quot;) | . remove() | removes the first item with the specified value | fruits.remove(&quot;strawberry&quot;) | . reverse() | reverses the list order | fruits.reverse() | . sort() | sorts the list | fruits.sort() | . count() | returns the amount of elements with the specified value | fruits.count(&quot;apple&quot;) | . copy() | returns a copy of the list | fruits.copy() | . clear() | removes the elements from the list | fruits.clear() | . sports = [&quot;football&quot;, &quot;soccer&quot;, &quot;baseball&quot;, &quot;basketball&quot;] sports[1] = &quot;hockey&quot; # change the value &quot;soccer&quot; to &quot;hockey&quot; print (sports) . [&#39;football&#39;, &#39;hockey&#39;, &#39;baseball&#39;, &#39;basketball&#39;] . sports = [&quot;football&quot;, &quot;soccer&quot;, &quot;baseball&quot;, &quot;basketball&quot;] # add &quot;golf&quot; as the 3rd element in the list print (sports) . Try this . Determine the output of the code segment | . .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%2012/2022/12/04/lists-lesson.html",
            "relUrl": "/jupyter/code/week%2012/2022/12/04/lists-lesson.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Variables, Assignments, and Data Abstraction",
            "content": "Variables . A variable is an abstraction inside a program that can hold a value | It organizes data by labeling it with a descriptive name | It consists of three parts: name, value, and type | Using meaningful variables names helps with readability of program code and understanding of what values are represented by the variables | . Naming Variables . Do&#39;s Don&#39;ts Why . highScore | highestScoreInTheGame | Keep it simple and easy to read, having variables that are too complicated can cause your code to become messy later on | . highScore | highscore | Differentiate the words in your variable with a capital letter. Makes things easier to read | . firstName | n | not specific enough/vague | . isRaining | is it raining | spaces are improper syntax | . phoneNumber | 555-number | dashes are improper syntax and numbers should be avoided in variable names | . Types of data Integer: A number | Text/string: A word | Boolean: Data that determines if something is true or false | . | . name = &quot;table1&quot; #string print(name, type(name)) number = 4 #integer print(number, type(number)) isAbsent = False print(isAbsent, type(isAbsent)) . table1 &lt;class &#39;str&#39;&gt; 4 &lt;class &#39;int&#39;&gt; False &lt;class &#39;bool&#39;&gt; . A list of data can also be stored in variables. Why is that useful? . print/retrieve specific values in the list without creating a lot of variables | easily remove/add/change items into the list | . colors = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;] print(colors[2]) . yellow . Assignments . The assignment operator allows a program to change the value represented by a variable | Used to assigning values to variables | . Operator Description Syntax Outcome when print(a) . = | Assign value of right side of expression to left side operand | a = b | b | . += | Add right side operand with left side operand and then assign to left operand | a += b | a + b | . -= | Subtract right operand from left operand and then assign to left operand: True if both operands are equal | a -= b | a - b | . *= | Multiply right operand with left operand and then assign to left operand | a *= b | a * b | . /= | Divide left operand with right operand and then assign to left operand | a /= b | a / b | . **= | Calculate exponent(raise power) value using operands and assign value to left operand | a **= b | a ^ b | . a = 1 b = 2 a = b print(a) . The value stored in a variable will be the most recent value assigned . a = 1 b = a a = 2 print(b) . 1 . Changing Values . currentScore = 10 highScore = currentScore currentScore = 7 print(highScore) . your turn! Here are 3 problems for you to solve . num1 = 5 num2 = 9 num1 = num2 print(num1) print(num2) . num1 = 15 num2 = 25 num3 = 42 num2 = num3 num3 = num1 num1 = num2 print(num1) print(num2) print(num3) . Which of these will show the sum? . num2 += num1 print(num1) print(num2) print(str(num1)+ str(num2)) print(num1 + num2) . Data Abstraction . Method used in coding to represent data in a useful form, by taking away aspects of data that aren&#39;t being used in the situation | Variables and lists are primary tools in data abstraction | Provides a separation between the abstract properties of a data type and the concrete details of its representation | . Lists &amp; Strings . List = ordered sequence of elements | Element = individual value in a list that is assigned to a unique index | Index = a way to reference the elements in a list or string using natural numbers; each element of a string is referenced by an index | String = ordered sequence of characters (Letters, numbers, special characters) . Note: index starts at 1 for AP Exam, must be whole numbers, cannot be negative, and goes up to the number of elements in the list We can represent a list or string using a variable . | . Example of a List - Colors . Index Element . 1 | Green | . 2 | Blue | . 3 | Purple | . 4 | Pink | . At Index 1, the element is green, at index 2, the element is blue, etc. | . Managing the Complexity of a Program through Data Abstraction . Data abstractions help manage complexity in programs by giving a collection of data a name without referencing the specific details of the representation | Developing a data abstraction to use in a program can result in a program that is easier to develop and maintain | . Using Lists as Data Abstractions . What are Lists? . Allow for data abstraction | Bundle variables together | Store multiple elements | Allows multiple related items to be treated as a single value | Give one name to a set of memory cells | Can keep adding elements to it as needed | Can store elements as a single variable by using a list | . 3 Types of List Operations . Assigning values to a list at certain indices | Creating an empty list and assigning it to a variable | Assigning a copy of one list to another list (setting one list equal to another list) | 1. Assigning values to a list at certain indices . colorsList=[&quot;pink&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;orange&quot;] print(colorsList) . [&#39;pink&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;orange&#39;] . 2. Creating an empty list and assigning it to a variable . colorsList=[] # can be used if you want to create a list that can be filled with values later . 3. Assigning a copy of one list to another list (setting one list equal to another list) . # copy of the list is made; the list isn&#39;t sorted in place def Reverse(lst): # defining variable: lst new_lst = lst[::-1] return new_lst lst = [&quot;pink&quot;, &quot;green&quot;, &quot;purple&quot;, &quot;yellow&quot;, &quot;orange&quot;, &quot;blue&quot;, &quot;black&quot;] print(Reverse(lst)) # reverse 1st . [&#39;black&#39;, &#39;blue&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;green&#39;, &#39;pink&#39;] . What is Managing Complexity? . Improving code readability | Reducing the need for new variables as more data is collected | Can easily update data | Can easily convert data to different forms | . How do Lists Help Manage the Complexity of a Program? . Don’t need as many variables | Can easily change the number of variables | Can apply the same mathematical computation (through an algorithm) to all the elements in the list | . Data Abstraction Practice . Manage the complexity of the given code below using a list. Re-write the code segment in a less complex way, but with the same result. . color1=&quot;green&quot; color2=&quot;red&quot; color3=&quot;pink&quot; color4=&quot;purple&quot; color5=&quot;blue&quot; color6=&quot;brown&quot; print(color1) print(color2) print(color3) print(color4) print(color5) print(color6) . green red pink purple blue brown . Answer . colorList=[&quot;green&quot;, &quot;red&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;blue&quot;, &quot;brown&quot;] print(str(colorList)) . [&#39;green&#39;, &#39;red&#39;, &#39;pink&#39;, &#39;purple&#39;, &#39;blue&#39;, &#39;brown&#39;] . AP Exam Use of Data Abstraction . With the properties of the AP Exam pseudocode, lists work differently from what we&#39;ve learned in python so far, here are the two major differences: . The index does not start at 0 but 1 | There is only one method of interchanging data between lists, and that is completely overwriting previous list data with the other list n&quot;, | . Homework . You will turn in a program that utilizes lists and variables as it&#39;s primary function, options could be a quiz, a sorter, database, or wherever your imagination brings you. You will be graded on how well you understood the concepts and if you used anything other than just the simplest parts . Quiz template, if you do use it, fix the issues, and add more to it than it&#39;s current barebones state. I would recommend using it to create something related to school. . quesCount = 0 # Use a dictionary for the questions quesList = [&quot;Question1&quot;, &quot;Question2&quot;, &quot;Question3&quot;, &quot;Question4&quot;] # Use a dictionary for the correct solutions soluList = [&quot;Solution1&quot;, &quot;Solution2&quot;, &quot;Solution3&quot;, &quot;Solution4&quot;] quesAmount= len(quesList) hrm quesCount &lt;= quesAmount: print(quesList[quescount] + &quot; n&quot;) guess = input() if(guess == soluList[quesamOOuaunt]): score+=1 print(&quot;Correct! Score: &quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList(quescount) + &quot; n&quot;) quesCount += 1 print(&quot;Final score: &quot; + str(score)) . Name Complete Correct Complexity Final Score Notes . Sreeja Gangapuram | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Utilized a list as well as other functions to make code more efficient | Very clear output of what happened;Printed correct answers, score, and questions | | . Moein Taleban | 1/1 | 1/1 | 0.7/1 | 0.9/1 | Utilized a list but could&#39;ve enforced some functions to maximize efficiency | Output is not as clear as it could be | Only the questions are printed and the number 4 is not referred to as the score which might be confusing | | . Ekam Kaire | 1/1 | 1/1 | 1/1 | 1/1 | Unique and creative use of lists and dictionaries | Stores and outputs data based on user&#39;s preference | Utilizes functions and if statements | | . Azeem Khan | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | Score is given as a number and a percentage | | . Jishnu Singiresu | 1/1 | 1/1 | 0.8/1 | 0.95/1 | created a function which is called at the end | nice and clean output | | . Soham Kamat | 1/1 | 1/1 | 1/1 | 1/1 | creative and advanced use of lists | | . Trey | 1/1 | 1/1 | 0.6/1 | 0.8/1 | Used list to print information | no use of functions or loops | | . Joshua Williams | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Yuri Subramaniam | 1/1 | 1/1 | 1/1 | 1/1 | creative and advanced use of lists | | . Max Wu | 1/1 | 1/1 | 0.8/1 | 0.92/1 | Utilized a list as well as other functions to make code more efficient | Very clear output of what happened;Printed correct answers, score, and questions | | . Kalani Cabral-Omana | 1/1 | 1/1 | 0.9/1 | 0.95/1 | Utilized a list as well as other functions to make code more efficient | Good use of while loops and if-else loops | | . Akshat Parikh | 1/1 | 1/1 | 0.9/1 | 0.95/1 | Utilized a list as well as other functions to make code more efficient | Very clear output of what happened;Printed correct answers, score, and questions | | . Aiden Huynh | 1/1 | 1/1 | 0.95/1 | 1/1 | Advanced use of lists | Advanced use of functions | | . Toby Leeder | 1/1 | 1/1 | 0/95/1 | 1/1 | Advanced use of lists | Advanced use of functions | managed complexity well and simplified code | | . Derek Sol | 1/1 | 1/1 | 0.85/1 | 0.95/1 | managed complexity well and simplified code | good use of storing variables | good use of functions | | . Samit Poojary | 1/1 | 1/1 | 1/1 | 1/1 | managed complexity well and simplified code | great use of list with both the question and the answer | good use of for loop | | . Evan Aparri | 1/1 | 1/1 | 0.8/1 | 0.95/1 | great use of list with both the question and the answer | good use of for loop | | . James Armstrong | 1/1 | 1/1 | 0.85/1 | 0.92/1 | good use of list | | . Jeffrey Lee | 1/1 | 1/1 | 0.95/1 | 0.95/1 | great use of list with both the question and the answer | good use of for loop | | . Tirth Thakkar | 1/1 | 1/1 | 0.95/1 | 0.95/1 | great use of list with both the question and the answer | good use of for loop | | . Jonathan Wu | 1/1 | 1/1 | 0.9/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Alan Liu Sui | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Dhruva Iyer | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Utilized a list as well as other functions to make code more efficient | Very clear output of what happened;Printed correct answers, score, and questions | | . Ethan Truong | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Dash Penning | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Jeffery Fonesca | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Ahad Biabani | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Abdullah | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Aniket Charkadeo | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Tanay Patel | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Martin Nguyen | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Gene Chang | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions | Output is clear and specific, states question and answer | | . Jagger Klein | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions + good use of list | Output is clear and specific, states question and answer | | .",
            "url": "https://kcabralomana.github.io/Fastpages/lectures/2022/12/03/reference.html",
            "relUrl": "/lectures/2022/12/03/reference.html",
            "date": " • Dec 3, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "Title",
            "content": "const fruits = [&quot;apple&quot;, &quot;grape&quot;, &quot;strawberry&quot;]; print (fruits); . evalmachine.&lt;anonymous&gt;:2 print (fruits); ^ ReferenceError: print is not defined at evalmachine.&lt;anonymous&gt;:2:1 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) .",
            "url": "https://kcabralomana.github.io/Fastpages/2022/12/03/js-test.html",
            "relUrl": "/2022/12/03/js-test.html",
            "date": " • Dec 3, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Student Teaching Week 1 Review",
            "content": "Day 1 Topic: Variables, Assignments, and Data Abstraction . Variables . -dos when naming variable: make it simple Types of data . Integer: numbers | Text/string: words | Boolean: Data that determines if something is true or false Data can be stored in variables | so that you ca print retrieve specific values in the list w/o creating many variables | easy to remove/add/change items into the list | . Assignments . Operators: allows a program to change the value represented by a variable (=,+=,-=,*=,/=,**=) Values can be stored in a variable . Data Abstraction . Method used to represent data in a useful form, by taking wy of data that aren&#39;t being used int eh situation | Variables and lsts are tools usied in data abstraction | It provides a separation between the abstract properties of data type and concrete details of its representation | . Lists and Strings . list: ordered sequesnt of elements | element: individual value in a list that is assigned to a unique index | index: a way to reference the elements in a list or string using natural numebrs; each element of a string is referenced by an index | string: orderedsequanc of charaters (etters, numbers, special charaters) | lists can be used to store multiple elements | . Day 2 Topic: Mathematical Expressions and Strings . Algorithms . a set of instructions that can accomplish a task | Sequencing= order in which instructions are performed | Selection= choose which outcome based off a decision | Iteration= if a condition is true then the code can repeat | . Mathematical Expressions . Arithmetic operations exist in most programming languages | Subtraction (-), Addition (+), Multiplication (*), Division (/), Remainder(MOD) (%) Order of operations | parentheses are done first | then division and multiplication and modulus | addition and subtraction | . Variables . values can be stored in variables by setting a variable equal to certain values | sequencing w/ variables takes the most recent assignment | . Strings . collection of characters characters can be anything from numbers, letters, spaces, special symbols | . | len()= length of a string | lower()= converts to lowercase | used to handle textual data | . Algorithms and Logic . Truth table = has a designated column for each input variable and one column showing the possible results of the logical operation (and, or, xor, not) . console.log(&quot;AND: 7 &amp; 4&quot;) console.log(&quot;Thinking: 111 &amp; 100 --&gt; 100&quot;) console.log(&quot;Answer: 4&quot;) console.log(&quot;Test:&quot;) console.log(7 &amp; 4) console.log() console.log(&quot;OR: 5 | 3&quot;) console.log(&quot;Thinking: 101 | 011 --&gt; 111&quot;) console.log(&quot;Answer: 7&quot;) console.log(&quot;Test:&quot;) console.log(5 | 3) console.log() console.log(&quot;XOR: 2 ^ 8&quot;) console.log(&quot;Thinking: 0010 ^ 1000 --&gt; 1010&quot;) console.log(&quot;Answer: 10&quot;) console.log(&quot;Test:&quot;) console.log(9 ^ 3) console.log() console.log(&quot;NOT: ! 1&quot;) console.log(&quot;Thinking: false is 1 in binary, not true is false&quot;) console.log(&quot;Answer: true&quot;) console.log(&quot;Test:&quot;) console.log(! 1) . AND: 7 &amp; 4 Thinking: 111 &amp; 100 --&gt; 100 Answer: 4 Test: 4 OR: 5 | 3 Thinking: 101 | 011 --&gt; 111 Answer: 7 Test: 7 XOR: 2 ^ 8 Thinking: 0010 ^ 1000 --&gt; 1010 Answer: 10 Test: 10 NOT: ! 1 Thinking: false is 1 in binary, not true is false Answer: true Test: false .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%2012/2022/12/02/week1teaching.html",
            "relUrl": "/jupyter/code/week%2012/2022/12/02/week1teaching.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "Student Teaching Week 1 Review",
            "content": "Day 1 Topic: Variables, Assignments, and Data Abstraction . Variables . -dos when naming variable: make it simple Types of data . Integer: numbers | Text/string: words | Boolean: Data that determines if something is true or false Data can be stored in variables | so that you ca print retrieve specific values in the list w/o creating many variables | easy to remove/add/change items into the list | . Assignments . Operators: allows a program to change the value represented by a variable (=,+=,-=,*=,/=,**=) Values can be stored in a variable . Data Abstraction . Method used to represent data in a useful form, by taking wy of data that aren&#39;t being used int eh situation | Variables and lsts are tools usied in data abstraction | It provides a separation between the abstract properties of data type and concrete details of its representation | . Lists and Strings . list: ordered sequesnt of elements | element: individual value in a list that is assigned to a unique index | index: a way to reference the elements in a list or string using natural numebrs; each element of a string is referenced by an index | string: orderedsequanc of charaters (etters, numbers, special charaters) | lists can be used to store multiple elements | . Day 2 Topic: Mathematical Expressions and Strings . Algorithms . a set of instructions that can accomplish a task | Sequencing= order in which instructions are performed | Selection= choose which outcome based off a decision | Iteration= if a condition is true then the code can repeat | . Mathematical Expressions . Arithmetic operations exist in most programming languages | Subtraction (-), Addition (+), Multiplication (*), Division (/), Remainder(MOD) (%) Order of operations | parentheses are done first | then division and multiplication and modulus | addition and subtraction | . Variables . values can be stored in variables by setting a variable equal to certain values | sequencing w/ variables takes the most recent assignment | . Strings . collection of characters characters can be anything from numbers, letters, spaces, special symbols | . | len()= length of a string | lower()= converts to lowercase | used to handle textual data | . Algorithms and Logic . Truth table = has a designated column for each input variable and one column showing the possible results of the logical operation (and, or, xor, not) . console.log(&quot;AND: 7 &amp; 4&quot;) console.log(&quot;Thinking: 111 &amp; 100 --&gt; 100&quot;) console.log(&quot;Answer: 4&quot;) console.log(&quot;Test:&quot;) console.log(7 &amp; 4) console.log() console.log(&quot;OR: 5 | 3&quot;) console.log(&quot;Thinking: 101 | 011 --&gt; 111&quot;) console.log(&quot;Answer: 7&quot;) console.log(&quot;Test:&quot;) console.log(5 | 3) console.log() console.log(&quot;XOR: 2 ^ 8&quot;) console.log(&quot;Thinking: 0010 ^ 1000 --&gt; 1010&quot;) console.log(&quot;Answer: 10&quot;) console.log(&quot;Test:&quot;) console.log(9 ^ 3) console.log() console.log(&quot;NOT: ! 1&quot;) console.log(&quot;Thinking: false is 1 in binary, not true is false&quot;) console.log(&quot;Answer: true&quot;) console.log(&quot;Test:&quot;) console.log(! 1) . AND: 7 &amp; 4 Thinking: 111 &amp; 100 --&gt; 100 Answer: 4 Test: 4 OR: 5 | 3 Thinking: 101 | 011 --&gt; 111 Answer: 7 Test: 7 XOR: 2 ^ 8 Thinking: 0010 ^ 1000 --&gt; 1010 Answer: 10 Test: 10 NOT: ! 1 Thinking: false is 1 in binary, not true is false Answer: true Test: false .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%2012/2022/12/02/studen-teaching-week1.html",
            "relUrl": "/jupyter/code/week%2012/2022/12/02/studen-teaching-week1.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 print(num1) . 1 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 var = var1 + 5 var2 = var1 - var3 var1 = var2 var3 = (var1 + var2) / 2 var2 = 6 print(var1) print(var2) print(var3) . 7 6 7.0 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 print(Result) # it will print 20.4 . 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 print(Result) # it will print 0 . 0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) # it will print 13 . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) # it will print straightbrownhair (no spaces) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[0:4] yoda = abrev + &quot; &quot; + Verb + &quot; &quot; + Adjective2 + &quot; &quot; + Adjective print(yoda) . Mr.M is Very handsome . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[:7] yoda = Adjective2 + &quot; &quot; + Adjective + &quot; &quot; + abrev + &quot; &quot; + Verb + &quot;.&quot; print(yoda) . Very handsome Mr.Mort is. . Problem 2 . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 # 4 len2 = len(cookie2) * 45 #225 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = &quot;Chocolate has &quot; + str(len1) + &quot; votes&quot; + &quot; and Rasin has &quot; + str(len2) + &quot; votes&quot; print(votes) . Chocolate has 4.0 votes and Rasin has 225 votes . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len2 = len(cookie2) * 45 vote1 = (str(cookie) + &quot; vote &quot; + str(len2)) vote2 = (str(cookie2) + &quot; vote &quot; + str(len1)) votes = (str(vote1) + &quot; &quot; + str(vote2)) print(votes) . choclate vote 225 rasin vote 4.0 . Day 2 Topic: Mathematical Expressions and Strings . Algorithms . a set of instructions that can accomplish a task | Sequencing= order in which instructions are performed | Selection= choose which outcome based off a decision | Iteration= if a condition is true then the code can repeat | . Mathematical Expressions . Arithmetic operations exist in most programming languages | Subtraction (-), Addition (+), Multiplication (*), Division (/), Remainder(MOD) (%) Order of operations | parentheses are done first | then division and multiplication and modulus | addition and subtraction | . Variables . values can be stored in variables by setting a variable equal to certain values | sequencing w/ variables takes the most recent assignment | . Strings . collection of characters characters can be anything from numbers, letters, spaces, special symbols | . | len()= length of a string | lower()= converts to lowercase | used to handle textual data | .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 print(num1) . 1 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 var = var1 + 5 var2 = var1 - var3 var1 = var2 var3 = (var1 + var2) / 2 var2 = 6 print(var1) print(var2) print(var3) . 7 6 7.0 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 print(Result) # it will print 20.4 . 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 print(Result) # it will print 0 . 0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) # it will print 13 . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) # it will print straightbrownhair (no spaces) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[0:4] yoda = abrev + &quot; &quot; + Verb + &quot; &quot; + Adjective2 + &quot; &quot; + Adjective print(yoda) . Mr.M is Very handsome . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[:7] yoda = Adjective2 + &quot; &quot; + Adjective + &quot; &quot; + abrev + &quot; &quot; + Verb + &quot;.&quot; print(yoda) . Very handsome Mr.Mort is. . Problem 2 . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 # 4 len2 = len(cookie2) * 45 #225 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = &quot;Chocolate has &quot; + str(len1) + &quot; votes&quot; + &quot; and Rasin has &quot; + str(len2) + &quot; votes&quot; print(votes) . Chocolate has 4.0 votes and Rasin has 225 votes . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len2 = len(cookie2) * 45 vote1 = (str(cookie) + &quot; vote &quot; + str(len2)) vote2 = (str(cookie2) + &quot; vote &quot; + str(len1)) votes = (str(vote1) + &quot; &quot; + str(vote2)) print(votes) . choclate vote 225 rasin vote 4.0 . Day 2 Topic: Mathematical Expressions and Strings . Algorithms . a set of instructions that can accomplish a task | Sequencing= order in which instructions are performed | Selection= choose which outcome based off a decision | Iteration= if a condition is true then the code can repeat | . Mathematical Expressions . Arithmetic operations exist in most programming languages | Subtraction (-), Addition (+), Multiplication (*), Division (/), Remainder(MOD) (%) Order of operations | parentheses are done first | then division and multiplication and modulus | addition and subtraction | . Variables . values can be stored in variables by setting a variable equal to certain values | sequencing w/ variables takes the most recent assignment | . Strings . collection of characters characters can be anything from numbers, letters, spaces, special symbols | . | len()= length of a string | lower()= converts to lowercase | used to handle textual data | .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Student Teaching Day 2 (Variables, Assignments, and Data Abstractions)",
            "content": "",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2022/11/29/student-day-2.html",
            "relUrl": "/markdown/final/2022/11/29/student-day-2.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 print(num1) . 1 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 var = var1 + 5 var2 = var1 - var3 var1 = var2 var3 = (var1 + var2) / 2 var2 = 6 print(var1) print(var2) print(var3) . 7 6 7.0 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 print(Result) # it will print 20.4 . 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 print(Result) # it will print 0 . 0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) # it will print 13 . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) # it will print straightbrownhair (no spaces) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[0:4] yoda = abrev + &quot; &quot; + Verb + &quot; &quot; + Adjective2 + &quot; &quot; + Adjective print(yoda) . Mr.M is Very handsome . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[:7] yoda = Adjective2 + &quot; &quot; + Adjective + &quot; &quot; + abrev + &quot; &quot; + Verb + &quot;.&quot; print(yoda) . Very handsome Mr.Mort is. . Problem 2 . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 # 4 len2 = len(cookie2) * 45 #225 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = &quot;Chocolate has &quot; + str(len1) + &quot; votes&quot; + &quot; and Rasin has &quot; + str(len2) + &quot; votes&quot; print(votes) . Chocolate has 4.0 votes and Rasin has 225 votes . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len2 = len(cookie2) * 45 vote1 = (str(cookie) + &quot; vote &quot; + str(len2)) vote2 = (str(cookie2) + &quot; vote &quot; + str(len1)) votes = (str(vote1) + &quot; &quot; + str(vote2)) print(votes) . choclate vote 225 rasin vote 4.0 . Day 2 Topic: Mathematical Expressions and Strings . Algorithms . a set of instructions that can accomplish a task | Sequencing= order in which instructions are performed | Selection= choose which outcome based off a decision | Iteration= if a condition is true then the code can repeat | . Mathematical Expressions . Arithmetic operations exist in most programming languages | Subtraction (-), Addition (+), Multiplication (*), Division (/), Remainder(MOD) (%) Order of operations | parentheses are done first | then division and multiplication and modulus | addition and subtraction | . Variables . values can be stored in variables by setting a variable equal to certain values | sequencing w/ variables takes the most recent assignment | . Strings . collection of characters characters can be anything from numbers, letters, spaces, special symbols | . | len()= length of a string | lower()= converts to lowercase | used to handle textual data | .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "Student Teaching Day 1 (Variables, Assignments, and Data Abstractions)",
            "content": "Variables . -dos when naming variable: make it simple . Types of data . Integer: numbers | Text/string: words | Boolean: Data that determines if something is true or false | . Data can be stored in variables . so that you ca print retrieve specific values in the list w/o creating many variables | easy to remove/add/change items into the list | . Assignments . Operators: allows a program to change the value represented by a variable (=,+=,-=,*=,/=,**=) Values can be stored in a variable . *DO THE 3 HW PROBLEMS ON ASSIGNMENTS . Data Abtraction . Method used to represent data in a useful form, by taking wy of data that aren’t being used int eh situation | Variables and lsts are tools usied in data abstraction | It provides a separation between the abstract properties of data type and concrete details of its representation | . Lists and strings . list: ordered sequesnt of elements | element: individual value in a list that is assigned to a unique index | index: a way to reference the elements in a list or string using natural numebrs; each element of a string is referenced by an index | string: orderedsequanc of charaters (etters, numbers, special charaters) | lists can be used to store multiple elements | . *DO THE DATA ABSTRACTON PRACTICE hint use for loop . Homework . LOOK AT WEBSITE .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2022/11/28/week-14-monday.html",
            "relUrl": "/markdown/final/2022/11/28/week-14-monday.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "Student Teaching Day 1",
            "content": "Changing Values . num1 = 5 num2 = 9 num1 = num2 print(num1) print(num2) . 9 9 . num1 = 15 num2 = 25 num3 = 42 num2 = num3 num3 = num1 num1 = num2 print(num1) print(num2) print(num3) . 42 42 15 . num2 += num1 print(num1) print(num2) print(str(num1)+ str(num2)) print(num1 + num2) . 42 84 4284 126 . quesCount = 0 score = 0 # Use a dictionary for the questions quesList = [&quot;Question1&quot;, &quot;Question2&quot;, &quot;Question3&quot;, &quot;Question4&quot;] # Use a dictionary for the correct solutions soluList = [&quot;Solution1&quot;, &quot;Solution2&quot;, &quot;Solution3&quot;, &quot;Solution4&quot;] quesAmount= len(quesList) def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg: print(&quot;Correct Answer&quot;) global correct correct+=1 else: print (&quot;Incorrect Answer&quot;) def quesCount (quesAmount): print(quesList[quescount] + &quot; n&quot;) guess = input() if(guess == soluList[quesAmount]): score+=1 print(&quot;Correct! Score: &quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList(quesCount) + &quot; n&quot;) quesCount += 1 print(&quot;Final score: &quot; + str(score)) . Final score: 0 . quesCount = 0 score = 0 # Use a dictionary for the questions quesList = [&quot;What high school do you attend?&quot;, &quot;What is Del Norte&#39;s Mascot?&quot;, &quot;What period was this lesson taught?&quot;, &quot;What student teaching day is this?&quot;] # Use a dictionary for the correct solutions soluList = [&quot;Del Norte&quot;, &quot;NightHawk&quot;, &quot;Period 3&quot;, &quot;Day 1&quot;] quesAmount= len(quesList) while quesCount &lt; quesAmount: print(quesList[quesCount] + &quot; n&quot;) guess = input() if(guess == soluList[quesCount]): score += 1 print(&quot;Correct! Score: &quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList[quesCount] + &quot; n&quot;) print(quesCount, &quot;of&quot;, quesAmount) quesCount += 1 . What high school do you attend? Correct! Score: 0 of 4 What is Del Norte&#39;s Mascot? Incorrect! The correct answer was NightHawk 1 of 4 What period was this lesson taught? Correct! Score: 2 of 4 What student teaching day is this? Correct! Score: 3 of 4 .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%2014/2022/11/28/student-teaching-1.html",
            "relUrl": "/jupyter/code/week%2014/2022/11/28/student-teaching-1.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Tools Check",
            "content": "Local Server . . Screenshot of my local server running on my own machine. Running a local server allows me to make edits and see the instant results of my edits | . Running local server in terminal . . Screenshot creating the server using make server command, you can see server working and an address to the local server | . Jupyter Notebook using python . . Screenshot displaying python interpreter for python reading my python code | . Conda and NodeJS . . Screenshot showing the base or conda and the use of NodeJS, aswell as different version of python | . Javascript Markdown . . Screenshot displaying binary code that we were able to work in class, using javascript and markdown to put out this page in shich the lightbulbs light up and represent binary. Showcasing javascript and markdown tools | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2022/11/17/t2-tools-check.html",
            "relUrl": "/markdown/final/2022/11/17/t2-tools-check.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "Binary usage",
            "content": "Type a decimal number and press tab to convert to binary: Binary :",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2022/11/17/binary-test.html",
            "relUrl": "/markdown/final/2022/11/17/binary-test.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | . | | | .",
            "url": "https://kcabralomana.github.io/Fastpages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 15, 2022"
        }
        
    
  
    
        ,"post66": {
            "title": "Final Blog Post for N@M",
            "content": "Project: Stiver . We made Striver, a program that acts as a website where can view various motivational and inspirational quotes. Essentially our website operated like a social media site for motivation and self gain. . . Other Projects . Scheduler . We viewed a different project called Scheduler, made by a group from the other P4 class. Their program helps user build a schedule and plan their future events for future reference . Art projects . . After presenting I walked around the other projects and found my way into the art room. I saw some really nice paintings and drawing and found this one really cool. I really liked the concept of global warming through the form of art. . Overall thoughts . I really enjoys N@M because we got to see all of our peers hard work and the excitement of being able to showcase our work | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2022/11/04/n@m.html",
            "relUrl": "/markdown/final/2022/11/04/n@m.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post67": {
            "title": "Final Blog Post Trimester 1",
            "content": "Reflection: . I thought that this final mc wasn’t as bad as I thought it would be. This mc was similar to the practice mc quizzes that are college boards and had similar structured questions. Questions Missed:8, 11, 28, 30, 45 . Question 8: . . The procedure does not interchange the values of j and k. Rather, it returns a new list with the values at indices j and k interchanged. -Video Notes: Topic is Program Design and Development How is a program developed? Programs are developed with a specific purpose in mind Developers follow specific steps and stick to their plan Sometimes the development is more exploratory than anything, and the steps are dictated by what happens Investigation is an important step in the process Developers must: Determine the requirements of the program Understand the constraints Understand the user concerns and interests How do developers investigate Surveys User testing Interviews Direct observation Developers design program by Brainstorming Storyboarding the program Planning the user experience Laying out the user interface Organizing into modules | . Question 11 . . The inner loop iterates from index j + 1 to the end of the list, so each element is only compared with the elements that follow it. | . Question 28 . . This code segment incorrectly charges customers who use more than 25 units of electricity. These customers are charged $7 per unit for all units, when they should be charged this rate only for the number of units above 25. For examples, if a customer used 32 units of electricity, they should be charged $5 for the first 25 and $7 for the additional 7 units (32 – 25 = 7 units), for a total charge of $174. This code segment would incorrectly charge the customer $224 for the 32 units. -Video Notes Topic: Conditionals Algorithm: a finite set of instructions that accomplish a specific task Selection: Given a parameter the algorithm uses its instructions to determine if it needs to return true or false. EX: If statements Evaluates a conditional and return true or false statement | . Question 30 . . Introducing a list to a program makes it more likely that the program will attempt to access an index beyond the length of the list, not less likely. -Video Notes: Topic is Data Abstraction Strings An ordered sequence of characters May contain letters, numbers and all other special characters Ex: Words, phrases, sentences, ID numbers, etc. Lists An ordered sequence of elements Each element is a variable Ex: Playlists of songs, Names of students in a school, contacts in your phone, etc List Index Each element of a string is referenced by an index The index starts at 1 | . Question 45 . . The code segment iterates through each element in the list, incrementing count1 for each positive value and incrementing count2 otherwise. There are two positive values and three nonpositive values in the list. | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/final/2022/11/04/final-blog-post.html",
            "relUrl": "/markdown/final/2022/11/04/final-blog-post.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post68": {
            "title": "Implement Quote and Like fetching",
            "content": "Quote . Get new quote # generates random quote from dictionary . . # displays the new quote here . Like # when button pressed adds 1 to like total . N/A . # displays like total . Dislike # when button pressed adds 1 to dislike total . N/A . # displays dislike total . this strictly ntoes .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/10/25/frontend-striver-wk2.html",
            "relUrl": "/markdown/2022/10/25/frontend-striver-wk2.html",
            "date": " • Oct 25, 2022"
        }
        
    
  
    
        ,"post69": {
            "title": "CTE Standards",
            "content": "Standards hit . So far throughout this year we have completed many of the standards. For example we just started our online project which would satisfy the standards. The development of online project can help apply our skills and learnings to real world applications. I also saw on the standards that it mentions robotics. ALthough we haven’t worked on any applications to rbotics in this class I have used some of the coade that we learned in javascript and applied it to my own robotics club. | . Standards looking forward to . After looking at the standards I’m really looking forward to developing software for devices and robotics. I think that this standard would really appeal to a lot of students since our lives are so involved with variety of devices and oter technology. I really think that this would be useful to a lot of students since we all use technology and could really learn fromt he things that we practically use every second of our lives. | . Careers . I think that the carrer that applies to the standards the most would be computer science or some type of development of devices ro websites. Since most of these standards involves the relation between technology and humans any career involving the modification of technology would be a really good career for this pathway. | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/10/23/CTE.html",
            "relUrl": "/markdown/2022/10/23/CTE.html",
            "date": " • Oct 23, 2022"
        }
        
    
  
    
        ,"post70": {
            "title": "Python Web API Endpoints using Jokes",
            "content": "Model for API . We will begin our journey into APIs by creating and thinking about data. We have learned about Python Lists and dictionaries. In this data example, we are going to make &quot;the best computer jokes ever ;)&quot; and serve them over the Internet. The ultimate objective is to allow our viewers to provide a like or dislike on each of our jokes. . This code planning begins by coming up with some jokes and defining a data &quot;model&quot; to keep and manage the jokes. . jokes_data contains a list of dictionary records containing joke and reactions:haha or boohoo - joke_list contains collection of jokes we will put into jokes_data | . | Next comes some functions to interact with our jokes . def initJokes(): initializes jokes_data | def getJokes(): returns the complete list of jokes | def getJoke(): returns a single joke from our list | ... many more function can be examined by reading comments below ... | . | . import random jokes_data = [] joke_list = [ &quot;If you give someone a program... you will frustrate them for a day; if you teach them how to program... you will &quot; &quot;frustrate them for a lifetime.&quot;, &quot;Q: Why did I divide sin by tan? A: Just cos.&quot;, &quot;UNIX is basically a simple operating system... but you have to be a genius to understand the simplicity.&quot;, &quot;Enter any 11-digit prime number to continue.&quot;, &quot;If at first you don&#39;t succeed; call it version 1.0.&quot;, &quot;Java programmers are some of the most materialistic people I know, very object-oriented&quot;, &quot;The oldest computer can be traced back to Adam and Eve. It was an apple but with extremely limited memory. Just &quot; &quot;1 byte. And then everything crashed.&quot;, &quot;Q: Why did Wi-Fi and the computer get married? A: Because they had a connection&quot;, &quot;Bill Gates teaches a kindergarten class to count to ten. 1, 2, 3, 3.1, 95, 98, ME, 2000, XP, Vista, 7, 8, 10.&quot;, &quot;Q: What’s a aliens favorite computer key? A: the space bar!&quot;, &quot;There are 10 types of people in the world: those who understand binary, and those who don’t.&quot;, &quot;If it wasn&#39;t for C, we’d all be programming in BASI and OBOL.&quot;, &quot;Computers make very fast, very accurate mistakes.&quot;, &quot;Q: Why is it that programmers always confuse Halloween with Christmas? A: Because 31 OCT = 25 DEC.&quot;, &quot;Q: How many programmers does it take to change a light bulb? A: None. It’s a hardware problem.&quot;, &quot;The programmer got stuck in the shower because the instructions on the shampoo bottle said: Lather, Rinse, Repeat.&quot;, &quot;Q: What is the biggest lie in the entire universe? A: I have read and agree to the Terms and Conditions.&quot;, &#39;An SQL statement walks into a bar and sees two tables. It approaches, and asks may I join you?&#39; ] # Initialize jokes def initJokes(): # setup jokes into a dictionary with id, joke, haha, boohoo item_id = 0 for item in joke_list: jokes_data.append({&quot;id&quot;: item_id, &quot;joke&quot;: item, &quot;haha&quot;: 0, &quot;boohoo&quot;: 0}) item_id += 1 # prime some haha responses for i in range(200): id = getRandomJoke()[&#39;id&#39;] addJokeHaHa(id) # prime some haha responses for i in range(50): id = getRandomJoke()[&#39;id&#39;] addJokeBooHoo(id) # Return all jokes from jokes_data def getJokes(): return(jokes_data) # Joke getter def getJoke(id): return(jokes_data[id]) # Return random joke from jokes_data def getRandomJoke(): return(random.choice(jokes_data)) # Liked joke def favoriteJoke(): best = 0 bestID = -1 for joke in getJokes(): if joke[&#39;haha&#39;] &gt; best: best = joke[&#39;haha&#39;] bestID = joke[&#39;id&#39;] return jokes_data[bestID] # Jeered joke def jeeredJoke(): worst = 0 worstID = -1 for joke in getJokes(): if joke[&#39;boohoo&#39;] &gt; worst: worst = joke[&#39;boohoo&#39;] worstID = joke[&#39;id&#39;] return jokes_data[worstID] # Add to haha for requested id def addJokeHaHa(id): jokes_data[id][&#39;haha&#39;] = jokes_data[id][&#39;haha&#39;] + 1 return jokes_data[id][&#39;haha&#39;] # Add to boohoo for requested id def addJokeBooHoo(id): jokes_data[id][&#39;boohoo&#39;] = jokes_data[id][&#39;boohoo&#39;] + 1 return jokes_data[id][&#39;boohoo&#39;] # Pretty Print joke def printJoke(joke): print(joke[&#39;id&#39;], joke[&#39;joke&#39;], &quot; n&quot;, &quot;haha:&quot;, joke[&#39;haha&#39;], &quot; n&quot;, &quot;boohoo:&quot;, joke[&#39;boohoo&#39;], &quot; n&quot;) # Number of jokes def countJokes(): return len(jokes_data) # Test Joke Model if __name__ == &quot;__main__&quot;: initJokes() # initialize jokes # Most likes and most jeered best = favoriteJoke() print(&quot;Most liked&quot;, best[&#39;haha&#39;]) printJoke(best) worst = jeeredJoke() print(&quot;Most jeered&quot;, worst[&#39;boohoo&#39;]) printJoke(worst) # Random joke print(&quot;Random joke&quot;) printJoke(getRandomJoke()) # Count of Jokes print(&quot;Jokes Count: &quot; + str(countJokes())) . Backend Interface for Web API (Control) . An application programming interface (API) is the medium by which different systems of software interact. In our applications we have two big systems:1. Python Backend that stores data beyond a single Web page2. GH Pages/Fastpages Frontend that is responsible for presenting data . To communicate data between Frontend and Backend, this section Backend code provides and interface to the Frontend using a Web Service Endpoint. Examples of endpoints are listed below and can be typed within a browser, which will return JSON data: . https://flask.nighthawkcodingsociety.com/api/jokes | https://flask.nighthawkcodingsociety.com/api/jokes/2 | https://flask.nighthawkcodingsociety.com/api/jokes/random | . As you can see, these Endpoints return JSON. They are NOT that readable by normal humans. However, they are very effective in passing requested data across the Internet. The Frontend code is responsible for formatting and presenting and interface that allows the typical computer user to interact with this data. . The next cell of code is Creating Endpoints that return JSON. This allows developers in the Frontend to interact with Backend data. API is a contract between the Frontend and Backend on how to share data. . FYI, there is NO output from this section . . from flask import Blueprint, jsonify # jsonify creates an endpoint response object from flask_restful import Api, Resource # used for REST API building import requests # used for testing import random # Blueprints allow this code to be procedurally abstracted from main.py, meaning code is not all in one place app_api = Blueprint(&#39;api&#39;, __name__, url_prefix=&#39;/api/jokes&#39;) # endpoint prefix avoid redundantly typing /api/jokes over and over # API generator https://flask-restful.readthedocs.io/en/latest/api.html#id1 api = Api(app_api) class JokesAPI: # not implemented, this would be where we would allow creation of a new Joke class _Create(Resource): def post(self, joke): pass # getJokes() class _Read(Resource): def get(self): return jsonify(getJokes()) # getJoke(id) class _ReadID(Resource): def get(self, id): return jsonify(getJoke(id)) # getRandomJoke() class _ReadRandom(Resource): def get(self): return jsonify(getRandomJoke()) # getRandomJoke() class _ReadCount(Resource): def get(self): count = countJokes() countMsg = {&#39;count&#39;: count} return jsonify(countMsg) # put method: addJokeHaHa class _UpdateLike(Resource): def put(self, id): addJokeHaHa(id) return jsonify(getJoke(id)) # put method: addJokeBooHoo class _UpdateJeer(Resource): def put(self, id): addJokeBooHoo(id) return jsonify(getJoke(id)) # building RESTapi interfaces, these routes are added to Web Server http://&lt;server&lt;/api/jokes api.add_resource(_Create, &#39;/create/&lt;string:joke&gt;&#39;) api.add_resource(_Read, &#39;/&#39;) # default, which returns all jokes api.add_resource(_ReadID, &#39;/&lt;int:id&gt;&#39;) api.add_resource(_ReadRandom, &#39;/random&#39;) api.add_resource(_ReadCount, &#39;/count&#39;) api.add_resource(_UpdateLike, &#39;/like/&lt;int:id&gt;/&#39;) api.add_resource(_UpdateJeer, &#39;/jeer/&lt;int:id&gt;/&#39;) . Frontend (View Simulation) and Hacks . This python codes tests endpoints on a server. This can be handy for development and testing when making modifications to the Jokes Web APIs. This code works off of the server endpoint/url, not from code cells above it in this notebook. . To work with this code and make observation for learning... . Run a local server from flask_portfolio project and the change server variable to be local | Observe the requests endpoints and the output, see if you can observe what is happening/changing on put requests | The &quot;requests&quot; are captured into a List, the List is used in the for loop to extract from RESTful API format. | Try running this with Debugging and observe what data is being created at each step (Required) | Try to format this data in Python print statements to be more readable (Required) | Start and stop local server and observe errors | . # server = &quot;http://127.0.0.1:5000/&quot; # run local server = &#39;https://flask.nighthawkcodingsociety.com/&#39; # run from web server url = server + &quot;api/jokes/&quot; responses = [] # responses list # Get the count of jokes on server count_response = requests.get(url+&quot;count&quot;) count_json = count_response.json() count = count_json[&#39;count&#39;] # Update likes/dislikes test sequence using random joke num = str(random.randint(0, count-1)) # test a random record responses.append( requests.get(url+num) # Get/read joke by id ) responses.append( requests.put(url+&quot;like/&quot;+num) # Put/add to like count ) responses.append( requests.put(url+&quot;jeer/&quot;+num) # Put/add to jeer count ) # Get a random joke responses.append( requests.get(url+&quot;random&quot;) # Get/read a random joke ) # Cycle through and print responses for response in responses: print(response) try: print(response.json()) except: print(&quot;data error&quot;) .",
            "url": "https://kcabralomana.github.io/Fastpages/techtalk/webapi",
            "relUrl": "/techtalk/webapi",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post71": {
            "title": "Javascript Web Page using an API",
            "content": "The code below holds the info that is being generated into an HTML table. . Key things to know: . &lt; table &gt; creates a TABLE | &lt; tr &gt; creates a ROW | &lt; th &gt; makes the text a column HEADER | &lt; tbody id = &quot;results&quot; &gt; defines an element id, to be used within JavaScript | . &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Joke&lt;/th&gt; &lt;th&gt;HaHa&lt;/th&gt; &lt;th&gt;Boohoo&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- javascript generated data --&gt; &lt;/tbody&gt; &lt;/table&gt; . Constant variables are declared here with keyword const . Key things to know: . The document object &quot;result&quot; represents table body in the HTML above. | If you want to access any element in an HTML page in JavaScript, you always start by accessing the document object. In this case, we are accessing &quot;result&quot; and defining a &quot;resultContainer&quot; | In the code, in following cells, document elements are created and organized for each Joke, each is added to the &quot;resultContainer&quot; as a row in the table body. | Accessing the api is done using the variables url and options, this is setup to fetch the Jokes from the backend | . // prepare HTML defined &quot;result&quot; container for new output const resultContainer = document.getElementById(&quot;result&quot;); // keys for joke reactions const HAHA = &quot;haha&quot;; const BOOHOO = &quot;boohoo&quot;; // prepare fetch urls const url = &quot;https://flask.nighthawkcodingsociety.com/api/jokes&quot;; const like_url = url + &quot;/like/&quot;; // haha reaction const jeer_url = url + &quot;/jeer/&quot;; // boohoo reaction // prepare fetch GET options const options = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; // prepare fetch PUT options, clones with JS Spread Operator (...) const put_options = {...options, method: &#39;PUT&#39;}; // clones and replaces method . The below code uses a function called fetch to gather the data from the backend. . Key things to understand: . The &quot;url&quot; &quot;response&quot; is checked in case the site is down and returns an error | On successful fetch, the code places each Joke in the HTML table body using a &quot;for&quot; loop and creating document elements from each &quot;row&quot; of the fetched &quot;data&quot;. | The creation of each Haha and Boohoo &quot;onclick&quot; &quot;button&quot; is also done in the same loop. | Updates to backend are setup to occur with each onclick, each click calls the &quot;reaction&quot; function | . // fetch the API fetch(url, options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { error(&#39;GET API response failure: &#39; + response.status); return; } // valid response will have JSON data response.json().then(data =&gt; { console.log(data); for (const row of data) { // make &quot;tr element&quot; for each &quot;row of data&quot; const tr = document.createElement(&quot;tr&quot;); // td for joke cell const joke = document.createElement(&quot;td&quot;); joke.innerHTML = row.id + &quot;. &quot; + row.joke; // add fetched data to innerHTML // td for haha cell with onclick actions const haha = document.createElement(&quot;td&quot;); const haha_but = document.createElement(&#39;button&#39;); haha_but.id = HAHA+row.id // establishes a HAHA JS id for cell haha_but.innerHTML = row.haha; // add fetched &quot;haha count&quot; to innerHTML haha_but.onclick = function () { // onclick function call with &quot;like parameters&quot; reaction(HAHA, like_url+row.id, haha_but.id); }; haha.appendChild(haha_but); // add &quot;haha button&quot; to haha cell // td for boohoo cell with onclick actions const boohoo = document.createElement(&quot;td&quot;); const boohoo_but = document.createElement(&#39;button&#39;); boohoo_but.id = BOOHOO+row.id // establishes a BOOHOO JS id for cell boohoo_but.innerHTML = row.boohoo; // add fetched &quot;boohoo count&quot; to innerHTML boohoo_but.onclick = function () { // onclick function call with &quot;jeer parameters&quot; reaction(BOOHOO, jeer_url+row.id, boohoo_but.id); }; boohoo.appendChild(boohoo_but); // add &quot;boohoo button&quot; to boohoo cell // this builds ALL td&#39;s (cells) into tr (row) element tr.appendChild(joke); tr.appendChild(haha); tr.appendChild(boohoo); // this adds all the tr (row) work above to the HTML &quot;result&quot; container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie Nginx ACCESS to server blocked) .catch(err =&gt; { error(err + &quot; &quot; + url); }); . The below code uses fetch to update backend data using &quot;put_options&quot;. The purpose is to update Hahaa and Bohoo counters in backend. . Key things to understand: . The &quot;url&quot; &quot;response&quot; is checked to verify update occurred | The element id of button clicked is updated with the data returned from the API. | Note, the elemID is received as parameter. This data was setup when the button was created in former cell. | . // Reaction function to likes or jeers user actions function reaction(type, put_url, elemID) { // fetch the API fetch(put_url, put_options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { error(&quot;PUT API response failure: &quot; + response.status) return; // api failure } // valid response will have JSON data response.json().then(data =&gt; { console.log(data); // Likes or Jeers updated/incremented if (type === HAHA) // like data element document.getElementById(elemID).innerHTML = data.haha; // fetched haha data assigned to haha Document Object Model (DOM) else if (type === BOOHOO) // jeer data element document.getElementById(elemID).innerHTML = data.boohoo; // fetched boohoo data assigned to boohoo Document Object Model (DOM) else error(&quot;unknown type: &quot; + type); // should never occur }) }) // catch fetch errors (ie Nginx ACCESS to server blocked) .catch(err =&gt; { error(err + &quot; &quot; + put_url); }); } // Something went wrong with actions or responses function error(err) { // log as Error in console console.error(err); // append error to resultContainer const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); } . Hacks . The code below relates to the rapidapi you worked with last week. . What are some similarities you see with the javascript for the jokes api? | In a blogpost, break up the code in cells like done above and try to describe what this code is doing. | . &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Time&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;td id=&quot;time&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_cases&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_deaths&quot;&gt;&lt;/td&gt; &lt;td id=&quot;active_cases&quot;&gt;&lt;/td&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Country&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- generated rows --&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;!-- Script is layed out in a sequence (no function) and will execute when page is loaded --&gt; &lt;script&gt; // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare fetch options const url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot;; const headers = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; // fetch the API fetch(url, headers) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will have json data response.json().then(data =&gt; { console.log(data); console.log(data.world_total) // World Data document.getElementById(&quot;time&quot;).innerHTML = data.world_total.statistic_taken_at; document.getElementById(&quot;total_cases&quot;).innerHTML = data.world_total.total_cases; document.getElementById(&quot;total_deaths&quot;).innerHTML = data.world_total.total_deaths; document.getElementById(&quot;active_cases&quot;).innerHTML = data.world_total.active_cases; // Country data for (const row of data.countries_stat) { console.log(row); // tr for each row const tr = document.createElement(&quot;tr&quot;); // td for each column const name = document.createElement(&quot;td&quot;); const cases = document.createElement(&quot;td&quot;); const deaths = document.createElement(&quot;td&quot;); const active = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.country_name; cases.innerHTML = row.cases; deaths.innerHTML = row.deaths; active.innerHTML = row.active_cases; // this builds td&#39;s into tr tr.appendChild(name); tr.appendChild(cases); tr.appendChild(deaths); tr.appendChild(active); // add HTML to container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); }); &lt;/script&gt; .",
            "url": "https://kcabralomana.github.io/Fastpages/techtalk/webfrontend",
            "relUrl": "/techtalk/webfrontend",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post72": {
            "title": "The Internet 4.1",
            "content": "Video Notes . 4.1.1 Notes . All computing devices work together in a network | Computer devices are physical aritfacts that can run a progra, Like servers, routers, computers, and tablets | . | Computing system is a group of computing devices and programs that work together for a common purpose | A computer network is a group of computing devices that send and recive data. A type of computer network | A packet is a small amount of data sent over a network | Message file is broken up into packets and sent through various paths (that can include a router) into the reciever. | . | A path between 2 computing devices in a network is a sequence of a sending computer device and a reciever. | routing is finding a path between sender and reciever | Bandwidth of a computer netweork is the maximum amount of data that can be sent in a fixed amount of time. Bandwidth is measured in bits per second. | . | . 4.1.2 Notes . Computer networks facilitate the transfer of data | How the internet works The internet is a computer network consinting of interconnected networks tha tuse standardized, non-proprieary communication ports | Access to the internet depends on the abilitty to connect a computing device to an internet connected device. | . | Data is sent through internet via packets Information is passed through the internet as a data stream Chunks of data encapsulated in packets | . | Packets contain a chunk of data and metadata used for routing the Packet between tge origin and te destination | Packets can arrive at the destination in order, out of order, or not at all | IP, TCP, UDP are common protocls used on the internet | . | Difference between internet and World wide Web The world wide web is a system of linked pages programs and files | HTTP is a protocol used on the WWW | The WWW uses the internet. | . | Protocols are an agreed upon set of rules that specify the behavior of a system THe protocols in the internet are open and allows users to easily connect additional computing devices. | . | Routing on the internet is dynamic | The scalability of a system is the capacity for it to change in size and scales to meet new demands internet was designed to be scaleable. | . | . Quiz . .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/10/16/unit-4.1-notes.html",
            "relUrl": "/markdown/2022/10/16/unit-4.1-notes.html",
            "date": " • Oct 16, 2022"
        }
        
    
  
    
        ,"post73": {
            "title": "Program Design for Final Project",
            "content": "Purpose . Our plan is to make a platform, called Striver, where can view various motivational and inspirational quotes. Essentially our website would operate like a social media site for motivation and self gain. . Planning . We decided to plan this by contributing on a google drawing to get an idea of how we will attack this idea. We decided to also meet up with each other over the week end so that we can collaborate on a more intimate level so we could effectively share our ideas. . . Purpose and Function . Website that displays inspirational quotes | Users can view these quotes to find motivation and can like the quotes and share | . Data Abstraction . We will store user data comments, like patterns and quotes. | . Managing Complexity . The program we will be creating lists to contain data to organize our data | . Procedural Abstraction . We will use different HTML templates for different views for the users | . Algorithm Implementation . Our program will involve lists and arrays to determine the path and options for users to navigate the through the website | . Testing . We will use print statements for debugging to make sure everything works orderly | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/10/09/final-overview.html",
            "relUrl": "/markdown/2022/10/09/final-overview.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post74": {
            "title": "Identifying and Correcting Errors Unit 1.4",
            "content": "1.4 College Board Video Notes . 1.4.1 . Errors are innevitable in programming | In errors in an algorithm or program, there are 4 types of errors: Logic Error:A mistake in the algorithm that causes it behave incorrectly or unexpectedly | Syntax Error: A mistake in the program where the rules in the programming language are not followed | Run-time error: Mistake in the program that occurs during the excecution of the program. Dependent on the language. Usually refered to as a bug. | Overflow error: error that occurs when a computer attempts to handle a number that is outside of the defined range of values. | . | . 1.4.2 . Understanding how to correct errors is essential to programming | Best ways to correct errors Test cases | Hand tracing | Visualizations | Debuggers | adding extra output statements. | . | The syntax error is usually the easiest error to fix it tells the programmer which line and what the error was. | . | Logic errors are difficult to find and fix. | . 1.4.3 . Programmers should come up with testing schemes to ensure that their program works. Identify inputs and correspondng exprected outputs or behaviors check the correctness of the algorithm or program. | . | Defined inputs used to test a program should demonstrate the different exprected outcomes that are at or just beyond the min and max of input data | Program requirements identify appropriate defined inputs for testing. | As soon as they start programming, they should constantly be testing. | . Quiz . .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/10/07/unit-1.4-notes.html",
            "relUrl": "/markdown/2022/10/07/unit-1.4-notes.html",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post75": {
            "title": "API Implementation",
            "content": "Graditude Questions . # Begin Rapid API Code import requests url = &quot;https://gratitude-questions.p.rapidapi.com/question&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;618474c20emshb969af58dc7ea8fp142551jsn4e58bb034dc2&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;gratitude-questions.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json()) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#39;question&#39;: &#39;What happened today/this week/this month/this year for which I’m grateful?&#39;} .",
            "url": "https://kcabralomana.github.io/Fastpages/apiimplementation",
            "relUrl": "/apiimplementation",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post76": {
            "title": "AWS Deployment",
            "content": "Docker . We created 4 containers with each site in one of the containers bound to 8080 with their own unique ports. . . Docker Compose File . Inside this file is instructions to build container that contain personal flask. . . Nginx . . . cURL Command . Tests if the personal flask is working on local machine . .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/10/04/aws-deployment.html",
            "relUrl": "/markdown/2022/10/04/aws-deployment.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post77": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;618474c20emshb969af58dc7ea8fp142551jsn4e58bb034dc2&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;618474c20emshb969af58dc7ea8fp142551jsn4e58bb034dc2&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;status&#34;:&#34;success&#34;,&#34;data&#34;:{&#34;stats&#34;:{&#34;total&#34;:1498,&#34;totalCoins&#34;:15880,&#34;totalMarkets&#34;:29495,&#34;totalExchanges&#34;:173,&#34;totalMarketCap&#34;:&#34;983455823290&#34;,&#34;total24hVolume&#34;:&#34;62383417797&#34;},&#34;coins&#34;:[{&#34;uuid&#34;:&#34;Qwsogvtv82FCd&#34;,&#34;symbol&#34;:&#34;BTC&#34;,&#34;name&#34;:&#34;Bitcoin&#34;,&#34;color&#34;:&#34;#f7931A&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg&#34;,&#34;marketCap&#34;:&#34;384261925458&#34;,&#34;price&#34;:&#34;20043.550686742812&#34;,&#34;listedAt&#34;:1330214400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.19&#34;,&#34;rank&#34;:1,&#34;sparkline&#34;:[&#34;20049.815416539706&#34;,&#34;20094.393545497052&#34;,&#34;20158.58698671382&#34;,&#34;20232.898003614322&#34;,&#34;20293.618431388033&#34;,&#34;20355.557600474516&#34;,&#34;20337.9076796474&#34;,&#34;20378.945224236224&#34;,&#34;20339.414870489745&#34;,&#34;20264.990263682765&#34;,&#34;20214.108582714292&#34;,&#34;20193.761930672114&#34;,&#34;20158.951877271087&#34;,&#34;20136.89567880366&#34;,&#34;20148.0982758071&#34;,&#34;20216.514371856883&#34;,&#34;20200.289873786565&#34;,&#34;20114.64889949858&#34;,&#34;20013.833027178112&#34;,&#34;20064.500867424038&#34;,&#34;20055.394308319686&#34;,&#34;20099.910720100273&#34;,&#34;20073.04610540898&#34;,&#34;20038.091723195073&#34;,&#34;20039.125781049443&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc&#34;,&#34;24hVolume&#34;:&#34;35071687070&#34;,&#34;btcPrice&#34;:&#34;1&#34;},{&#34;uuid&#34;:&#34;razxDUgYGNAdQ&#34;,&#34;symbol&#34;:&#34;ETH&#34;,&#34;name&#34;:&#34;Ethereum&#34;,&#34;color&#34;:&#34;#3C3C3D&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rk4RKHOuW/eth.svg&#34;,&#34;marketCap&#34;:&#34;166708694201&#34;,&#34;price&#34;:&#34;1362.9253643080083&#34;,&#34;listedAt&#34;:1438905600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.01&#34;,&#34;rank&#34;:2,&#34;sparkline&#34;:[&#34;1349.0384567537553&#34;,&#34;1350.486586991934&#34;,&#34;1353.0627871586412&#34;,&#34;1361.5377625273948&#34;,&#34;1374.2027236665588&#34;,&#34;1375.7214408982059&#34;,&#34;1373.1173416682698&#34;,&#34;1375.6203205822255&#34;,&#34;1374.5833968999716&#34;,&#34;1369.002110485522&#34;,&#34;1366.1188984768796&#34;,&#34;1363.745025823938&#34;,&#34;1360.3770675480944&#34;,&#34;1358.4329430526363&#34;,&#34;1359.8137982327592&#34;,&#34;1368.3883772574375&#34;,&#34;1369.125079203522&#34;,&#34;1365.0271243860136&#34;,&#34;1362.4695763330856&#34;,&#34;1364.5539706587408&#34;,&#34;1363.1033233537237&#34;,&#34;1364.3554683087928&#34;,&#34;1361.7063757927622&#34;,&#34;1358.8381283825643&#34;,&#34;1360.3494896776085&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth&#34;,&#34;24hVolume&#34;:&#34;11771417668&#34;,&#34;btcPrice&#34;:&#34;0.06799819980047114&#34;},{&#34;uuid&#34;:&#34;HIVsRcGKkPFtW&#34;,&#34;symbol&#34;:&#34;USDT&#34;,&#34;name&#34;:&#34;Tether USD&#34;,&#34;color&#34;:&#34;#22a079&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mgHqwlCLj/usdt.svg&#34;,&#34;marketCap&#34;:&#34;68224275095&#34;,&#34;price&#34;:&#34;1.0001715321495874&#34;,&#34;listedAt&#34;:1420761600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.13&#34;,&#34;rank&#34;:3,&#34;sparkline&#34;:[&#34;1.0007218035748657&#34;,&#34;0.9998195240120525&#34;,&#34;1.0001942073599759&#34;,&#34;0.999198242906088&#34;,&#34;0.999970326331934&#34;,&#34;0.9999578602237212&#34;,&#34;1.0002749344768964&#34;,&#34;0.9998618718046304&#34;,&#34;1.0006329886842509&#34;,&#34;1.0010446040777476&#34;,&#34;1.0004916026440913&#34;,&#34;1.0007888640527003&#34;,&#34;1.0002640858839233&#34;,&#34;1.0005846915246637&#34;,&#34;1.0000905108537632&#34;,&#34;0.9994968342509783&#34;,&#34;1.0011082125129211&#34;,&#34;1.0015062761537357&#34;,&#34;0.99991903402945&#34;,&#34;1.0002947247279268&#34;,&#34;0.9999857036550877&#34;,&#34;0.9998206366656677&#34;,&#34;1.0007565219107768&#34;,&#34;1.000382762100078&#34;,&#34;1.000150515797916&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt&#34;,&#34;24hVolume&#34;:&#34;41646216899&#34;,&#34;btcPrice&#34;:&#34;0.000049899917822999&#34;},{&#34;uuid&#34;:&#34;aKzUVe4Hh_CON&#34;,&#34;symbol&#34;:&#34;USDC&#34;,&#34;name&#34;:&#34;USDC&#34;,&#34;color&#34;:&#34;#7894b4&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/jkDf8sQbY/usdc.svg&#34;,&#34;marketCap&#34;:&#34;46280630009&#34;,&#34;price&#34;:&#34;1.0003473267455394&#34;,&#34;listedAt&#34;:1539043200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.07&#34;,&#34;rank&#34;:4,&#34;sparkline&#34;:[&#34;1.0005863270210245&#34;,&#34;0.9998825447125274&#34;,&#34;1.0001565051935892&#34;,&#34;0.9992645129007548&#34;,&#34;0.9998675462392212&#34;,&#34;0.9998272931691644&#34;,&#34;1.0002224153445407&#34;,&#34;0.9999317743533871&#34;,&#34;1.0006585942367816&#34;,&#34;1.000952432863041&#34;,&#34;1.0003989295505482&#34;,&#34;1.000638496717557&#34;,&#34;1.0002352785325133&#34;,&#34;1.0005941664435252&#34;,&#34;1.0001179673001188&#34;,&#34;0.9994925842454877&#34;,&#34;1.0009754698769568&#34;,&#34;1.0014336424001&#34;,&#34;1.000039268414544&#34;,&#34;1.0002099832307998&#34;,&#34;1.00012589477054&#34;,&#34;0.9998248228490436&#34;,&#34;1.000699890105951&#34;,&#34;1.000340215196537&#34;,&#34;1.0001150874319509&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc&#34;,&#34;24hVolume&#34;:&#34;3365540517&#34;,&#34;btcPrice&#34;:&#34;0.000049908688454446&#34;},{&#34;uuid&#34;:&#34;WcwrkfNI4FUAe&#34;,&#34;symbol&#34;:&#34;BNB&#34;,&#34;name&#34;:&#34;Binance Coin&#34;,&#34;color&#34;:&#34;#e8b342&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1N19L_dZ/bnb.svg&#34;,&#34;marketCap&#34;:&#34;41820751271&#34;,&#34;price&#34;:&#34;288.66628530690264&#34;,&#34;listedAt&#34;:1503014400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.42&#34;,&#34;rank&#34;:5,&#34;sparkline&#34;:[&#34;293.0648258481622&#34;,&#34;293.07747587851765&#34;,&#34;293.8892235863702&#34;,&#34;294.692062571157&#34;,&#34;297.0994193910956&#34;,&#34;296.5460033456306&#34;,&#34;296.5992676846958&#34;,&#34;296.31121173116384&#34;,&#34;295.9763936716012&#34;,&#34;295.45727286275803&#34;,&#34;294.73322587331967&#34;,&#34;295.1813004084462&#34;,&#34;294.52442391454343&#34;,&#34;294.3063124553447&#34;,&#34;294.21373025374237&#34;,&#34;294.75035855506684&#34;,&#34;294.44940982235465&#34;,&#34;293.9815395477355&#34;,&#34;293.6440321116512&#34;,&#34;294.01889977490123&#34;,&#34;293.68331743186303&#34;,&#34;293.4934818966126&#34;,&#34;293.237747035524&#34;,&#34;293.09977258234545&#34;,&#34;290.53744555276114&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb&#34;,&#34;24hVolume&#34;:&#34;805768248&#34;,&#34;btcPrice&#34;:&#34;0.014401953517039877&#34;},{&#34;uuid&#34;:&#34;-l8Mn2pVlRs-p&#34;,&#34;symbol&#34;:&#34;XRP&#34;,&#34;name&#34;:&#34;XRP&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1oPuTyfX/xrp.svg&#34;,&#34;marketCap&#34;:&#34;24966436288&#34;,&#34;price&#34;:&#34;0.5007450761516665&#34;,&#34;listedAt&#34;:1421798400,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.17&#34;,&#34;rank&#34;:6,&#34;sparkline&#34;:[&#34;0.4938981661775617&#34;,&#34;0.49343949277953586&#34;,&#34;0.49137790768876555&#34;,&#34;0.4914838199245121&#34;,&#34;0.49555594870572434&#34;,&#34;0.4951890037750714&#34;,&#34;0.495754600642816&#34;,&#34;0.49961106217113954&#34;,&#34;0.5027605293364544&#34;,&#34;0.49962279916372687&#34;,&#34;0.4953862217102938&#34;,&#34;0.49411321871723957&#34;,&#34;0.49379968350472936&#34;,&#34;0.4946781782257021&#34;,&#34;0.49668492450937674&#34;,&#34;0.4980449756635561&#34;,&#34;0.4988427519496724&#34;,&#34;0.49595508147106043&#34;,&#34;0.49529670080659266&#34;,&#34;0.4959093546110407&#34;,&#34;0.4965287083276942&#34;,&#34;0.4972253140887907&#34;,&#34;0.49684091430008437&#34;,&#34;0.49591972510691007&#34;,&#34;0.49994566065984875&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp&#34;,&#34;24hVolume&#34;:&#34;2024557136&#34;,&#34;btcPrice&#34;:&#34;0.000024982852787798&#34;},{&#34;uuid&#34;:&#34;vSo2fu9iE1s0Y&#34;,&#34;symbol&#34;:&#34;BUSD&#34;,&#34;name&#34;:&#34;Binance USD&#34;,&#34;color&#34;:&#34;#f0b90b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/6SJHRfClq/busd.svg&#34;,&#34;marketCap&#34;:&#34;21381904916&#34;,&#34;price&#34;:&#34;1.0000123532969556&#34;,&#34;listedAt&#34;:1563197940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.14&#34;,&#34;rank&#34;:7,&#34;sparkline&#34;:[&#34;1.0006911778549377&#34;,&#34;0.9998223006382758&#34;,&#34;1.0001331288898294&#34;,&#34;0.9991026459307589&#34;,&#34;0.9998674015440719&#34;,&#34;0.9998433930969712&#34;,&#34;1.0001634369759003&#34;,&#34;0.999743197805345&#34;,&#34;1.0005842712581856&#34;,&#34;1.0010101947902401&#34;,&#34;1.0003801992349832&#34;,&#34;1.000693822164607&#34;,&#34;1.0001716820530642&#34;,&#34;1.0004873849756009&#34;,&#34;0.9999973782619707&#34;,&#34;0.9994223622813375&#34;,&#34;1.0009911799051412&#34;,&#34;1.001418278872234&#34;,&#34;0.9999440421681933&#34;,&#34;1.0002616666743402&#34;,&#34;0.9998929494511372&#34;,&#34;0.9996520830568972&#34;,&#34;1.0006716767140225&#34;,&#34;1.000354378405346&#34;,&#34;1.0001279201895084&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd&#34;,&#34;24hVolume&#34;:&#34;6172846651&#34;,&#34;btcPrice&#34;:&#34;0.000049891976173582&#34;},{&#34;uuid&#34;:&#34;qzawljRxB5bYu&#34;,&#34;symbol&#34;:&#34;ADA&#34;,&#34;name&#34;:&#34;Cardano&#34;,&#34;color&#34;:&#34;#3cc8c8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ryY28nXhW/ada.svg&#34;,&#34;marketCap&#34;:&#34;13367734900&#34;,&#34;price&#34;:&#34;0.42965822273410903&#34;,&#34;listedAt&#34;:1506902400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.07&#34;,&#34;rank&#34;:8,&#34;sparkline&#34;:[&#34;0.42935079509289215&#34;,&#34;0.42999716955939554&#34;,&#34;0.43113793091933544&#34;,&#34;0.43164235605366286&#34;,&#34;0.4351709066340561&#34;,&#34;0.4357776886667802&#34;,&#34;0.43477220488691914&#34;,&#34;0.435032637484956&#34;,&#34;0.43469659246229525&#34;,&#34;0.43367955301045125&#34;,&#34;0.4325764108641088&#34;,&#34;0.4320905081460968&#34;,&#34;0.43129495367629755&#34;,&#34;0.43111268550308746&#34;,&#34;0.430158477187354&#34;,&#34;0.43192082025335765&#34;,&#34;0.4318813080231911&#34;,&#34;0.4305808119251774&#34;,&#34;0.42933152537844466&#34;,&#34;0.42999164634507475&#34;,&#34;0.4297017943321375&#34;,&#34;0.4300182000032324&#34;,&#34;0.42942447696635627&#34;,&#34;0.428848003593003&#34;,&#34;0.4291040903865556&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada&#34;,&#34;24hVolume&#34;:&#34;445785221&#34;,&#34;btcPrice&#34;:&#34;0.000021436233003282&#34;},{&#34;uuid&#34;:&#34;zNZHO_Sjf&#34;,&#34;symbol&#34;:&#34;SOL&#34;,&#34;name&#34;:&#34;Solana&#34;,&#34;color&#34;:&#34;#9cddec&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/yvUG4Qex5/solana.svg&#34;,&#34;marketCap&#34;:&#34;11990770244&#34;,&#34;price&#34;:&#34;33.75573896585963&#34;,&#34;listedAt&#34;:1586539320,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.06&#34;,&#34;rank&#34;:9,&#34;sparkline&#34;:[&#34;33.76194937947399&#34;,&#34;33.83018839969452&#34;,&#34;34.013048292328065&#34;,&#34;34.22695861442601&#34;,&#34;34.302948506263874&#34;,&#34;34.36117055139888&#34;,&#34;34.33297730862471&#34;,&#34;34.37725515202584&#34;,&#34;34.38122367897517&#34;,&#34;34.2550563983116&#34;,&#34;34.0192701316118&#34;,&#34;34.03538298798629&#34;,&#34;34.021627294260924&#34;,&#34;33.98686067812641&#34;,&#34;33.967205892391455&#34;,&#34;34.10939467413966&#34;,&#34;34.070165431736925&#34;,&#34;33.91930206986467&#34;,&#34;33.91151583417362&#34;,&#34;33.9043511309003&#34;,&#34;33.87901060721445&#34;,&#34;33.78369211116179&#34;,&#34;33.71997962675008&#34;,&#34;33.69090443012692&#34;,&#34;33.71623046280206&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/zNZHO_Sjf+solana-sol&#34;,&#34;24hVolume&#34;:&#34;1122776480&#34;,&#34;btcPrice&#34;:&#34;0.001684119719775315&#34;},{&#34;uuid&#34;:&#34;a91GCGd_u96cF&#34;,&#34;symbol&#34;:&#34;DOGE&#34;,&#34;name&#34;:&#34;Dogecoin&#34;,&#34;color&#34;:&#34;#c2a633&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/H1arXIuOZ/doge.svg&#34;,&#34;marketCap&#34;:&#34;8493930545&#34;,&#34;price&#34;:&#34;0.06402262465188333&#34;,&#34;listedAt&#34;:1391212800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.79&#34;,&#34;rank&#34;:10,&#34;sparkline&#34;:[&#34;0.06433091677136754&#34;,&#34;0.06433630601076162&#34;,&#34;0.06451575976472833&#34;,&#34;0.0650019016600869&#34;,&#34;0.06499257008710045&#34;,&#34;0.06506417867247787&#34;,&#34;0.06570475320958324&#34;,&#34;0.06606716612821471&#34;,&#34;0.06581607679725353&#34;,&#34;0.06558476365046208&#34;,&#34;0.06535626375793624&#34;,&#34;0.06514220430063168&#34;,&#34;0.0652554256706354&#34;,&#34;0.06508627169601806&#34;,&#34;0.065071133950613&#34;,&#34;0.06534515755253277&#34;,&#34;0.06526490146098139&#34;,&#34;0.06491687069450776&#34;,&#34;0.06439252809452549&#34;,&#34;0.06435646052140642&#34;,&#34;0.06399725778730381&#34;,&#34;0.06396797107291348&#34;,&#34;0.0638868184143223&#34;,&#34;0.06395160058327058&#34;,&#34;0.06390259648154385&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge&#34;,&#34;24hVolume&#34;:&#34;595030474&#34;,&#34;btcPrice&#34;:&#34;0.0000031941758051&#34;},{&#34;uuid&#34;:&#34;uW2tk-ILY0ii&#34;,&#34;symbol&#34;:&#34;MATIC&#34;,&#34;name&#34;:&#34;Polygon&#34;,&#34;color&#34;:&#34;#8247e5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WulYRq14o/polygon.png&#34;,&#34;marketCap&#34;:&#34;7352194181&#34;,&#34;price&#34;:&#34;0.8397064959901155&#34;,&#34;listedAt&#34;:1558961160,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.30&#34;,&#34;rank&#34;:11,&#34;sparkline&#34;:[&#34;0.8432829962954229&#34;,&#34;0.849181551492284&#34;,&#34;0.8536201943011714&#34;,&#34;0.8541813180047458&#34;,&#34;0.8515224098574884&#34;,&#34;0.850265179544537&#34;,&#34;0.847322542943578&#34;,&#34;0.8476972952771256&#34;,&#34;0.8471467304336225&#34;,&#34;0.844702158937144&#34;,&#34;0.8449149090388831&#34;,&#34;0.8477264619612334&#34;,&#34;0.8464360624186148&#34;,&#34;0.8435578343312881&#34;,&#34;0.8408577666895115&#34;,&#34;0.8417763852043721&#34;,&#34;0.8402724477206464&#34;,&#34;0.8394910131272694&#34;,&#34;0.8422499081060874&#34;,&#34;0.8433600566558104&#34;,&#34;0.8441214660335867&#34;,&#34;0.8449033953802154&#34;,&#34;0.8423323790199002&#34;,&#34;0.8400413323772581&#34;,&#34;0.8391761182935571&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic&#34;,&#34;24hVolume&#34;:&#34;368144731&#34;,&#34;btcPrice&#34;:&#34;0.000041894098960496&#34;},{&#34;uuid&#34;:&#34;25W7FG7om&#34;,&#34;symbol&#34;:&#34;DOT&#34;,&#34;name&#34;:&#34;Polkadot&#34;,&#34;color&#34;:&#34;#d64cA8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/RsljYqnbu/polkadot.svg&#34;,&#34;marketCap&#34;:&#34;7331427980&#34;,&#34;price&#34;:&#34;6.3728697554070655&#34;,&#34;listedAt&#34;:1598365200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.37&#34;,&#34;rank&#34;:12,&#34;sparkline&#34;:[&#34;6.399701718761633&#34;,&#34;6.405337242113671&#34;,&#34;6.4266248804229384&#34;,&#34;6.451455659600661&#34;,&#34;6.483491915376635&#34;,&#34;6.501811546262432&#34;,&#34;6.498760844193182&#34;,&#34;6.4976323368143705&#34;,&#34;6.477581013777311&#34;,&#34;6.479927431264483&#34;,&#34;6.44825138763542&#34;,&#34;6.445035181012187&#34;,&#34;6.445523861596261&#34;,&#34;6.437132477606484&#34;,&#34;6.433784796155034&#34;,&#34;6.461347613817356&#34;,&#34;6.45359701099763&#34;,&#34;6.425445253315296&#34;,&#34;6.39160085877377&#34;,&#34;6.391093720701694&#34;,&#34;6.384943624903759&#34;,&#34;6.392553223171491&#34;,&#34;6.381634769644093&#34;,&#34;6.386531769957386&#34;,&#34;6.3726444498480515&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/25W7FG7om+polkadot-dot&#34;,&#34;24hVolume&#34;:&#34;379976430&#34;,&#34;btcPrice&#34;:&#34;0.000317951138249283&#34;},{&#34;uuid&#34;:&#34;xz24e0BjL&#34;,&#34;symbol&#34;:&#34;SHIB&#34;,&#34;name&#34;:&#34;Shiba Inu&#34;,&#34;color&#34;:&#34;#fda32b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/D69LfI-tm/shib.png&#34;,&#34;marketCap&#34;:&#34;6652358295&#34;,&#34;price&#34;:&#34;0.000011283672136356&#34;,&#34;listedAt&#34;:1620650373,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.71&#34;,&#34;rank&#34;:13,&#34;sparkline&#34;:[&#34;0.000011384972187891&#34;,&#34;0.00001139313280198&#34;,&#34;0.000011429580139168&#34;,&#34;0.000011482444529902&#34;,&#34;0.000011517178722671&#34;,&#34;0.000011525811358147&#34;,&#34;0.000011555785322931&#34;,&#34;0.000011591429783261&#34;,&#34;0.000011505189155736&#34;,&#34;0.000011477778399831&#34;,&#34;0.000011435059536425&#34;,&#34;0.000011440807594404&#34;,&#34;0.000011458315362184&#34;,&#34;0.00001147552224329&#34;,&#34;0.000011470428630138&#34;,&#34;0.000011471399104906&#34;,&#34;0.000011432350597095&#34;,&#34;0.00001137306433665&#34;,&#34;0.00001135436977918&#34;,&#34;0.000011335712607523&#34;,&#34;0.0000112856679044&#34;,&#34;0.000011278240158878&#34;,&#34;0.000011288521225872&#34;,&#34;0.000011277331662152&#34;,&#34;0.000011272877294086&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/xz24e0BjL+shibainu-shib&#34;,&#34;24hVolume&#34;:&#34;302112350&#34;,&#34;btcPrice&#34;:&#34;5.62957747e-10&#34;},{&#34;uuid&#34;:&#34;MoTuySvg7&#34;,&#34;symbol&#34;:&#34;DAI&#34;,&#34;name&#34;:&#34;Dai&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg&#34;,&#34;marketCap&#34;:&#34;6330376496&#34;,&#34;price&#34;:&#34;0.9999569400125321&#34;,&#34;listedAt&#34;:1585574040,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.10&#34;,&#34;rank&#34;:14,&#34;sparkline&#34;:[&#34;1.000345680785842&#34;,&#34;0.9996768088644196&#34;,&#34;0.9997620874678727&#34;,&#34;0.9991192679426156&#34;,&#34;0.9994334358286668&#34;,&#34;0.9995689641224628&#34;,&#34;0.999907059929403&#34;,&#34;0.9994838161730176&#34;,&#34;1.0000962236419397&#34;,&#34;1.0004931721027528&#34;,&#34;1.0001541324782575&#34;,&#34;1.000218091437778&#34;,&#34;1.0000775986106687&#34;,&#34;1.0001745233050123&#34;,&#34;0.9998284891927446&#34;,&#34;0.9992089913834684&#34;,&#34;1.0003350729355822&#34;,&#34;1.000837274076466&#34;,&#34;1.000174196146555&#34;,&#34;0.9998246186091285&#34;,&#34;0.9999456345235549&#34;,&#34;0.9996364141592559&#34;,&#34;1.0002967167854473&#34;,&#34;1.0001570627449197&#34;,&#34;0.999904577449903&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/MoTuySvg7+dai-dai&#34;,&#34;24hVolume&#34;:&#34;135956333&#34;,&#34;btcPrice&#34;:&#34;0.000049889211529468&#34;},{&#34;uuid&#34;:&#34;qUhEFk1I61atv&#34;,&#34;symbol&#34;:&#34;TRX&#34;,&#34;name&#34;:&#34;TRON&#34;,&#34;color&#34;:&#34;#eb0029&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/behejNqQs/trx.svg&#34;,&#34;marketCap&#34;:&#34;5776721712&#34;,&#34;price&#34;:&#34;0.06256176177306583&#34;,&#34;listedAt&#34;:1505260800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.45&#34;,&#34;rank&#34;:15,&#34;sparkline&#34;:[&#34;0.06235487176617015&#34;,&#34;0.06246245556557078&#34;,&#34;0.06240660740134105&#34;,&#34;0.0623051569646796&#34;,&#34;0.06218981455801479&#34;,&#34;0.06255572539146104&#34;,&#34;0.0628439660805138&#34;,&#34;0.06274927695509415&#34;,&#34;0.0627107369451555&#34;,&#34;0.06257675995151533&#34;,&#34;0.06246244963639836&#34;,&#34;0.06246648153200279&#34;,&#34;0.06255515010008444&#34;,&#34;0.0626855538363504&#34;,&#34;0.06269431118943376&#34;,&#34;0.06269622421769963&#34;,&#34;0.06271032651338038&#34;,&#34;0.06263147559996256&#34;,&#34;0.06255657870269374&#34;,&#34;0.06260234733818545&#34;,&#34;0.0626327865123358&#34;,&#34;0.06265965842332524&#34;,&#34;0.06259846428043739&#34;,&#34;0.0625527668144495&#34;,&#34;0.06255814071224475&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qUhEFk1I61atv+tron-trx&#34;,&#34;24hVolume&#34;:&#34;466081385&#34;,&#34;btcPrice&#34;:&#34;0.00000312129136952&#34;},{&#34;uuid&#34;:&#34;Mtfb0obXVh59u&#34;,&#34;symbol&#34;:&#34;WETH&#34;,&#34;name&#34;:&#34;Wrapped Ether&#34;,&#34;color&#34;:&#34;#303030&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/KIviQyZlt/weth.svg&#34;,&#34;marketCap&#34;:&#34;5503321293&#34;,&#34;price&#34;:&#34;1362.397502144277&#34;,&#34;listedAt&#34;:1600259445,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.83&#34;,&#34;rank&#34;:16,&#34;sparkline&#34;:[&#34;1349.1540983542507&#34;,&#34;1350.9005820344698&#34;,&#34;1354.6594355436337&#34;,&#34;1358.5734173716921&#34;,&#34;1372.2393635736669&#34;,&#34;1375.4133500184457&#34;,&#34;1373.8416709111418&#34;,&#34;1374.2684069108268&#34;,&#34;1374.1400838469938&#34;,&#34;1371.4603171603485&#34;,&#34;1367.1477871246873&#34;,&#34;1364.9284617619362&#34;,&#34;1361.7201714566988&#34;,&#34;1361.1063241134766&#34;,&#34;1360.3248820272122&#34;,&#34;1366.892809174286&#34;,&#34;1371.6197874234629&#34;,&#34;1366.9159200066226&#34;,&#34;1362.8988600409152&#34;,&#34;1366.8689057181552&#34;,&#34;1362.432558815354&#34;,&#34;1363.6142123853183&#34;,&#34;1361.516713910733&#34;,&#34;1358.2861519471487&#34;,&#34;1359.081763092871&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth&#34;,&#34;24hVolume&#34;:&#34;60613639&#34;,&#34;btcPrice&#34;:&#34;0.06797186403930881&#34;},{&#34;uuid&#34;:&#34;_H5FVG9iW&#34;,&#34;symbol&#34;:&#34;UNI&#34;,&#34;name&#34;:&#34;Uniswap&#34;,&#34;color&#34;:&#34;#ff007a&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;5414073497&#34;,&#34;price&#34;:&#34;6.971980114788267&#34;,&#34;listedAt&#34;:1600323371,&#34;tier&#34;:1,&#34;change&#34;:&#34;3.33&#34;,&#34;rank&#34;:17,&#34;sparkline&#34;:[&#34;6.77237184675032&#34;,&#34;6.752824244485618&#34;,&#34;6.78903586558007&#34;,&#34;6.852613624649713&#34;,&#34;6.922872589387299&#34;,&#34;6.9800437339156405&#34;,&#34;6.955259833823376&#34;,&#34;6.928956756162565&#34;,&#34;6.908183341801451&#34;,&#34;6.885823479955376&#34;,&#34;6.88302492770328&#34;,&#34;6.90951236907857&#34;,&#34;6.8662924076116925&#34;,&#34;6.832387980086888&#34;,&#34;6.8358287528435735&#34;,&#34;6.899610932300125&#34;,&#34;6.903413648605297&#34;,&#34;6.852584875134188&#34;,&#34;6.834124932563927&#34;,&#34;6.885688487328152&#34;,&#34;6.893482992926548&#34;,&#34;6.899689058136804&#34;,&#34;6.896256768869965&#34;,&#34;6.914609761551383&#34;,&#34;6.9343013341059585&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/_H5FVG9iW+uniswap-uni&#34;,&#34;24hVolume&#34;:&#34;181671673&#34;,&#34;btcPrice&#34;:&#34;0.000347841568779511&#34;},{&#34;uuid&#34;:&#34;dvUj0CzDZ&#34;,&#34;symbol&#34;:&#34;AVAX&#34;,&#34;name&#34;:&#34;Avalanche&#34;,&#34;color&#34;:&#34;#e84242&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png&#34;,&#34;marketCap&#34;:&#34;5073965317&#34;,&#34;price&#34;:&#34;17.1362582942352&#34;,&#34;listedAt&#34;:1600961596,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.54&#34;,&#34;rank&#34;:18,&#34;sparkline&#34;:[&#34;17.251404114211134&#34;,&#34;17.298879643442053&#34;,&#34;17.34808667709875&#34;,&#34;17.426941656132254&#34;,&#34;17.524712176181612&#34;,&#34;17.559899454169962&#34;,&#34;17.523659347405594&#34;,&#34;17.56377672754574&#34;,&#34;17.524960240775005&#34;,&#34;17.446353003633845&#34;,&#34;17.39331328781568&#34;,&#34;17.38090327063859&#34;,&#34;17.338426491525652&#34;,&#34;17.31874848940939&#34;,&#34;17.31874788822459&#34;,&#34;17.36905514019651&#34;,&#34;17.377346974392708&#34;,&#34;17.342553655687343&#34;,&#34;17.293655934579245&#34;,&#34;17.282071615104556&#34;,&#34;17.237339963653017&#34;,&#34;17.233044795101893&#34;,&#34;17.19067306889497&#34;,&#34;17.15822630767925&#34;,&#34;17.140672641632765&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax&#34;,&#34;24hVolume&#34;:&#34;210839028&#34;,&#34;btcPrice&#34;:&#34;0.000854951229053915&#34;},{&#34;uuid&#34;:&#34;x4WXHge-vvFY&#34;,&#34;symbol&#34;:&#34;WBTC&#34;,&#34;name&#34;:&#34;Wrapped BTC&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/o3-8cvCHu/wbtc[1].svg&#34;,&#34;marketCap&#34;:&#34;4904538777&#34;,&#34;price&#34;:&#34;20038.435620622542&#34;,&#34;listedAt&#34;:1549894980,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.26&#34;,&#34;rank&#34;:19,&#34;sparkline&#34;:[&#34;20049.66642497842&#34;,&#34;20092.89008901448&#34;,&#34;20156.31521210076&#34;,&#34;20228.25012076666&#34;,&#34;20291.50619456924&#34;,&#34;20351.79757539001&#34;,&#34;20336.52367461082&#34;,&#34;20376.3859154279&#34;,&#34;20335.913915665704&#34;,&#34;20261.657124758975&#34;,&#34;20210.790114424715&#34;,&#34;20191.615756843777&#34;,&#34;20154.36188290003&#34;,&#34;20132.073748759834&#34;,&#34;20147.171142671203&#34;,&#34;20214.145570074834&#34;,&#34;20203.167863028528&#34;,&#34;20116.131327302173&#34;,&#34;20015.300157602727&#34;,&#34;20068.49381930057&#34;,&#34;20057.021271217996&#34;,&#34;20102.828919149106&#34;,&#34;20073.861018847732&#34;,&#34;20038.403097690614&#34;,&#34;20038.08311468349&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/x4WXHge-vvFY+wrappedbtc-wbtc&#34;,&#34;24hVolume&#34;:&#34;52193282&#34;,&#34;btcPrice&#34;:&#34;0.999744802395533&#34;},{&#34;uuid&#34;:&#34;Knsels4_Ol-Ny&#34;,&#34;symbol&#34;:&#34;ATOM&#34;,&#34;name&#34;:&#34;Cosmos&#34;,&#34;color&#34;:&#34;#5064fb&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HJzHboruM/atom.svg&#34;,&#34;marketCap&#34;:&#34;4082597258&#34;,&#34;price&#34;:&#34;13.114687648013726&#34;,&#34;listedAt&#34;:1552520100,&#34;tier&#34;:1,&#34;change&#34;:&#34;2.05&#34;,&#34;rank&#34;:20,&#34;sparkline&#34;:[&#34;12.863612619895465&#34;,&#34;12.963444525296714&#34;,&#34;12.997678258298611&#34;,&#34;13.048598156795691&#34;,&#34;13.119145598919278&#34;,&#34;13.159252370152213&#34;,&#34;13.179334515109312&#34;,&#34;13.162812288821586&#34;,&#34;13.137523424001765&#34;,&#34;13.080422952609398&#34;,&#34;13.018181428331529&#34;,&#34;13.01816072627863&#34;,&#34;12.997563332431673&#34;,&#34;13.00040911300239&#34;,&#34;12.96103537416014&#34;,&#34;13.049347223483762&#34;,&#34;13.10883296707332&#34;,&#34;13.109861122849475&#34;,&#34;13.118013715638133&#34;,&#34;13.323369152698012&#34;,&#34;13.364068556649237&#34;,&#34;13.360583645725319&#34;,&#34;13.192765331800494&#34;,&#34;13.129317631598813&#34;,&#34;13.118222991495855&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom&#34;,&#34;24hVolume&#34;:&#34;749708768&#34;,&#34;btcPrice&#34;:&#34;0.000654309600777872&#34;},{&#34;uuid&#34;:&#34;PDKcptVnzJTmN&#34;,&#34;symbol&#34;:&#34;OKB&#34;,&#34;name&#34;:&#34;OKB&#34;,&#34;color&#34;:&#34;#2d60e0&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xcZdYtX6E/okx.png&#34;,&#34;marketCap&#34;:&#34;3937759115&#34;,&#34;price&#34;:&#34;15.64915348672489&#34;,&#34;listedAt&#34;:1538524800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.02&#34;,&#34;rank&#34;:21,&#34;sparkline&#34;:[&#34;15.57172097704591&#34;,&#34;15.554456620212141&#34;,&#34;15.531152169350191&#34;,&#34;15.556004685562852&#34;,&#34;15.616987172488637&#34;,&#34;15.741110499745083&#34;,&#34;15.721654408590974&#34;,&#34;15.754592996825584&#34;,&#34;15.721445252830843&#34;,&#34;15.68570643031886&#34;,&#34;15.65823383824178&#34;,&#34;15.65274198879639&#34;,&#34;15.638152113591332&#34;,&#34;15.64058447581103&#34;,&#34;15.628759017587337&#34;,&#34;15.757353975199504&#34;,&#34;15.773668660699586&#34;,&#34;15.735195225903052&#34;,&#34;15.72396624159747&#34;,&#34;15.715830909975708&#34;,&#34;15.643744434845082&#34;,&#34;15.660195060932544&#34;,&#34;15.658999022239795&#34;,&#34;15.655856778151282&#34;,&#34;15.654867179386539&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb&#34;,&#34;24hVolume&#34;:&#34;17591161&#34;,&#34;btcPrice&#34;:&#34;0.000780757547966566&#34;},{&#34;uuid&#34;:&#34;D7B1x_ks7WhV5&#34;,&#34;symbol&#34;:&#34;LTC&#34;,&#34;name&#34;:&#34;Litecoin&#34;,&#34;color&#34;:&#34;#345d9d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg&#34;,&#34;marketCap&#34;:&#34;3812919293&#34;,&#34;price&#34;:&#34;53.80516063162182&#34;,&#34;listedAt&#34;:1382572800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.21&#34;,&#34;rank&#34;:22,&#34;sparkline&#34;:[&#34;54.296108361372866&#34;,&#34;54.32415717238681&#34;,&#34;54.49439018324316&#34;,&#34;54.67152392574348&#34;,&#34;54.83000909463735&#34;,&#34;54.86255398531216&#34;,&#34;54.86130988251709&#34;,&#34;54.79707265341012&#34;,&#34;54.775144150456796&#34;,&#34;54.544338354633034&#34;,&#34;54.34839240630121&#34;,&#34;54.36453194625638&#34;,&#34;54.412236016477905&#34;,&#34;54.44769705538203&#34;,&#34;54.483256266826224&#34;,&#34;54.54506340505375&#34;,&#34;54.62803114302299&#34;,&#34;54.459797222345856&#34;,&#34;54.21787091912681&#34;,&#34;54.42668212343763&#34;,&#34;54.208931708912175&#34;,&#34;54.30377964719304&#34;,&#34;54.1510765896623&#34;,&#34;54.05333720555051&#34;,&#34;53.85039125291704&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc&#34;,&#34;24hVolume&#34;:&#34;396687017&#34;,&#34;btcPrice&#34;:&#34;0.002684412630902247&#34;},{&#34;uuid&#34;:&#34;NfeOYfNcl&#34;,&#34;symbol&#34;:&#34;FTT&#34;,&#34;name&#34;:&#34;FTX Token&#34;,&#34;color&#34;:&#34;#77d9ed&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg&#34;,&#34;marketCap&#34;:&#34;3292553913&#34;,&#34;price&#34;:&#34;24.665477602034645&#34;,&#34;listedAt&#34;:1566222960,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.15&#34;,&#34;rank&#34;:23,&#34;sparkline&#34;:[&#34;24.686262825924107&#34;,&#34;24.708977698495474&#34;,&#34;24.76275391167715&#34;,&#34;24.88064501336108&#34;,&#34;24.989982623495205&#34;,&#34;25.02527690133806&#34;,&#34;25.03308663631069&#34;,&#34;25.096481543960365&#34;,&#34;25.064183863901825&#34;,&#34;24.97596757960783&#34;,&#34;24.905569462633494&#34;,&#34;24.89019154037575&#34;,&#34;24.8445613227375&#34;,&#34;24.8292849347889&#34;,&#34;24.84149925415407&#34;,&#34;24.952282814824464&#34;,&#34;24.932063335978345&#34;,&#34;24.822069539426963&#34;,&#34;24.733351334137495&#34;,&#34;24.785653785837024&#34;,&#34;24.76947017933385&#34;,&#34;24.784914942129383&#34;,&#34;24.73965728872184&#34;,&#34;24.690109754341304&#34;,&#34;24.66935385291404&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt&#34;,&#34;24hVolume&#34;:&#34;46028479&#34;,&#34;btcPrice&#34;:&#34;0.001230594218934915&#34;},{&#34;uuid&#34;:&#34;hnfQfsYfeIGUQ&#34;,&#34;symbol&#34;:&#34;ETC&#34;,&#34;name&#34;:&#34;Ethereum Classic&#34;,&#34;color&#34;:&#34;#699070&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rJfyor__W/etc.svg&#34;,&#34;marketCap&#34;:&#34;3268898435&#34;,&#34;price&#34;:&#34;28.1042534488605&#34;,&#34;listedAt&#34;:1469577600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.98&#34;,&#34;rank&#34;:24,&#34;sparkline&#34;:[&#34;27.575456313117428&#34;,&#34;27.57803108679598&#34;,&#34;27.626107083587126&#34;,&#34;27.70394559563783&#34;,&#34;28.153092540695052&#34;,&#34;28.733080515456265&#34;,&#34;28.47990216316137&#34;,&#34;28.460572165061098&#34;,&#34;28.431061767116237&#34;,&#34;28.30996933550255&#34;,&#34;28.14880107797775&#34;,&#34;28.147232527457117&#34;,&#34;28.23587113396939&#34;,&#34;28.318610538497257&#34;,&#34;28.301077005756913&#34;,&#34;28.319715581518935&#34;,&#34;28.2863733832489&#34;,&#34;28.157107329408806&#34;,&#34;28.0337933743752&#34;,&#34;28.0347678850247&#34;,&#34;27.985651572532504&#34;,&#34;27.99967898622159&#34;,&#34;27.982387854306214&#34;,&#34;27.96664744200696&#34;,&#34;28.004800136899878&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc&#34;,&#34;24hVolume&#34;:&#34;732390041&#34;,&#34;btcPrice&#34;:&#34;0.001402159422155137&#34;},{&#34;uuid&#34;:&#34;3mVx2FX_iJFp5&#34;,&#34;symbol&#34;:&#34;XMR&#34;,&#34;name&#34;:&#34;Monero&#34;,&#34;color&#34;:&#34;#ff7519&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg&#34;,&#34;marketCap&#34;:&#34;2704741771&#34;,&#34;price&#34;:&#34;148.74687260845832&#34;,&#34;listedAt&#34;:1422489600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.73&#34;,&#34;rank&#34;:25,&#34;sparkline&#34;:[&#34;146.0756556475053&#34;,&#34;146.16539235107626&#34;,&#34;146.17871227201726&#34;,&#34;146.7928043004359&#34;,&#34;147.49601518947418&#34;,&#34;147.78321950861786&#34;,&#34;148.13781758186698&#34;,&#34;149.1182492747765&#34;,&#34;148.11631640525192&#34;,&#34;146.22011551363667&#34;,&#34;145.48374160519077&#34;,&#34;145.4605505013132&#34;,&#34;145.1586337789315&#34;,&#34;145.01493067411195&#34;,&#34;145.03711128039956&#34;,&#34;145.49345796227092&#34;,&#34;145.02611908621574&#34;,&#34;144.61288004369027&#34;,&#34;144.03164405964102&#34;,&#34;144.07844173365186&#34;,&#34;143.9103757491713&#34;,&#34;143.993617802683&#34;,&#34;144.76695721516563&#34;,&#34;145.81285596759292&#34;,&#34;146.21974602320358&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr&#34;,&#34;24hVolume&#34;:&#34;111782890&#34;,&#34;btcPrice&#34;:&#34;0.007421183747989439&#34;},{&#34;uuid&#34;:&#34;TpHE2IShQw-sJ&#34;,&#34;symbol&#34;:&#34;ALGO&#34;,&#34;name&#34;:&#34;Algorand&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/lzbmCkUGB/algo.svg&#34;,&#34;marketCap&#34;:&#34;2463465853&#34;,&#34;price&#34;:&#34;0.3511650422184013&#34;,&#34;listedAt&#34;:1562082540,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.13&#34;,&#34;rank&#34;:26,&#34;sparkline&#34;:[&#34;0.35156176000955314&#34;,&#34;0.3519023270261265&#34;,&#34;0.3528916179200212&#34;,&#34;0.35409161420668545&#34;,&#34;0.356162056262963&#34;,&#34;0.35693330326162703&#34;,&#34;0.3563907953585324&#34;,&#34;0.35750984328530744&#34;,&#34;0.35767252929986604&#34;,&#34;0.35751711842440254&#34;,&#34;0.3558727664559972&#34;,&#34;0.35502576789344964&#34;,&#34;0.35443443094387755&#34;,&#34;0.3542043091822441&#34;,&#34;0.35451487254498265&#34;,&#34;0.35595645150091704&#34;,&#34;0.3550166370140654&#34;,&#34;0.3532171781108639&#34;,&#34;0.3524588059359943&#34;,&#34;0.35338459261762273&#34;,&#34;0.3530591012387088&#34;,&#34;0.3519876831605432&#34;,&#34;0.35133779862985864&#34;,&#34;0.350369179522118&#34;,&#34;0.35078893949386675&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo&#34;,&#34;24hVolume&#34;:&#34;122221360&#34;,&#34;btcPrice&#34;:&#34;0.000017520101488339&#34;},{&#34;uuid&#34;:&#34;f3iaFeCKEmkaZ&#34;,&#34;symbol&#34;:&#34;XLM&#34;,&#34;name&#34;:&#34;Stellar&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg&#34;,&#34;marketCap&#34;:&#34;2434108606&#34;,&#34;price&#34;:&#34;0.12046748494413159&#34;,&#34;listedAt&#34;:1484611200,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.13&#34;,&#34;rank&#34;:27,&#34;sparkline&#34;:[&#34;0.11889747925878968&#34;,&#34;0.11895767320851787&#34;,&#34;0.11904150834797811&#34;,&#34;0.11902199852210672&#34;,&#34;0.11927188129997995&#34;,&#34;0.1193386399802927&#34;,&#34;0.11934469276243408&#34;,&#34;0.1196520921041987&#34;,&#34;0.11983688261385989&#34;,&#34;0.11932664504934419&#34;,&#34;0.11894538588331029&#34;,&#34;0.1191377486726544&#34;,&#34;0.11883068387398256&#34;,&#34;0.11871457015480089&#34;,&#34;0.11869976708522932&#34;,&#34;0.11970212293120151&#34;,&#34;0.11966415505513138&#34;,&#34;0.11925782467280538&#34;,&#34;0.11953196796977514&#34;,&#34;0.11947862039947245&#34;,&#34;0.12001460511010423&#34;,&#34;0.12024648180408562&#34;,&#34;0.12015554671534558&#34;,&#34;0.12014362932061814&#34;,&#34;0.12018777537490634&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm&#34;,&#34;24hVolume&#34;:&#34;268015695&#34;,&#34;btcPrice&#34;:&#34;0.000006010286641668&#34;},{&#34;uuid&#34;:&#34;ZlZpzOJo43mIo&#34;,&#34;symbol&#34;:&#34;BCH&#34;,&#34;name&#34;:&#34;Bitcoin Cash&#34;,&#34;color&#34;:&#34;#8dc451&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/By8ziihX7/bch.svg&#34;,&#34;marketCap&#34;:&#34;2275339161&#34;,&#34;price&#34;:&#34;118.93218340005522&#34;,&#34;listedAt&#34;:1541808000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.79&#34;,&#34;rank&#34;:28,&#34;sparkline&#34;:[&#34;122.31669276815146&#34;,&#34;122.20221632323882&#34;,&#34;122.27062280612596&#34;,&#34;122.55422874145354&#34;,&#34;123.18638724378391&#34;,&#34;123.08308366724447&#34;,&#34;122.75420528237959&#34;,&#34;122.64408519732375&#34;,&#34;122.29556101291895&#34;,&#34;121.67236415586021&#34;,&#34;121.09760099075169&#34;,&#34;121.07402729292667&#34;,&#34;121.3308006968375&#34;,&#34;121.33543159737839&#34;,&#34;121.4165007079705&#34;,&#34;121.79251148020586&#34;,&#34;121.83878634048158&#34;,&#34;121.49073996107514&#34;,&#34;120.72111575922996&#34;,&#34;121.0116341886658&#34;,&#34;120.80463163491193&#34;,&#34;120.70155668283728&#34;,&#34;120.39286719656228&#34;,&#34;119.46060315102883&#34;,&#34;118.90781992190092&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch&#34;,&#34;24hVolume&#34;:&#34;191687557&#34;,&#34;btcPrice&#34;:&#34;0.00593368835985329&#34;},{&#34;uuid&#34;:&#34;9_jH48RBW&#34;,&#34;symbol&#34;:&#34;BTCB&#34;,&#34;name&#34;:&#34;Bitcoin BEP2&#34;,&#34;color&#34;:&#34;#ff9d14&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Swr_SeZio/4023.png&#34;,&#34;marketCap&#34;:&#34;2256326310&#34;,&#34;price&#34;:&#34;20056.05558921233&#34;,&#34;listedAt&#34;:1629334963,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.33&#34;,&#34;rank&#34;:29,&#34;sparkline&#34;:[&#34;20062.922923808146&#34;,&#34;20068.861677407906&#34;,&#34;20151.07969183831&#34;,&#34;20194.09983970884&#34;,&#34;20305.40629467228&#34;,&#34;20343.061967792306&#34;,&#34;20336.436454110953&#34;,&#34;20366.199044829194&#34;,&#34;20353.223182216174&#34;,&#34;20294.402282813175&#34;,&#34;20238.157621291528&#34;,&#34;20222.48623264246&#34;,&#34;20158.081080167794&#34;,&#34;20150.098083292793&#34;,&#34;20140.151248718423&#34;,&#34;20189.026739752426&#34;,&#34;20223.043574030315&#34;,&#34;20141.500488887716&#34;,&#34;20003.562519895528&#34;,&#34;20060.755154122107&#34;,&#34;20033.23621927189&#34;,&#34;20092.4032138555&#34;,&#34;20103.168326479234&#34;,&#34;20047.78028200608&#34;,&#34;20049.12266475747&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb&#34;,&#34;24hVolume&#34;:&#34;22599214&#34;,&#34;btcPrice&#34;:&#34;1.000452163550595&#34;},{&#34;uuid&#34;:&#34;DCrsaMv68&#34;,&#34;symbol&#34;:&#34;NEAR&#34;,&#34;name&#34;:&#34;NEAR Protocol&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Cth83dCnl/near.png&#34;,&#34;marketCap&#34;:&#34;2207285349&#34;,&#34;price&#34;:&#34;3.6313332745364115&#34;,&#34;listedAt&#34;:1615164591,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.41&#34;,&#34;rank&#34;:30,&#34;sparkline&#34;:[&#34;3.676484006822928&#34;,&#34;3.6852601908489664&#34;,&#34;3.6962394641805405&#34;,&#34;3.703159890046674&#34;,&#34;3.7307432286844002&#34;,&#34;3.7313215421676786&#34;,&#34;3.7270747900297017&#34;,&#34;3.7312649322104274&#34;,&#34;3.719144760199497&#34;,&#34;3.6910824300924796&#34;,&#34;3.67193896045483&#34;,&#34;3.6718584377778054&#34;,&#34;3.681569582110444&#34;,&#34;3.682003775707856&#34;,&#34;3.6730232572401142&#34;,&#34;3.686482852048306&#34;,&#34;3.681889488410369&#34;,&#34;3.6602078142241883&#34;,&#34;3.646008662741072&#34;,&#34;3.6540159712077847&#34;,&#34;3.6514182366794388&#34;,&#34;3.6572356414722913&#34;,&#34;3.6510677534150116&#34;,&#34;3.6420121540385253&#34;,&#34;3.6369873371662327&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/DCrsaMv68+nearprotocol-near&#34;,&#34;24hVolume&#34;:&#34;165402487&#34;,&#34;btcPrice&#34;:&#34;0.000181172155138074&#34;},{&#34;uuid&#34;:&#34;65PHZTpmE55b&#34;,&#34;symbol&#34;:&#34;CRO&#34;,&#34;name&#34;:&#34;Cronos&#34;,&#34;color&#34;:&#34;#01275d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/2o91jm73M/cro.svg&#34;,&#34;marketCap&#34;:&#34;2206824410&#34;,&#34;price&#34;:&#34;0.1097271300620471&#34;,&#34;listedAt&#34;:1548953220,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.11&#34;,&#34;rank&#34;:31,&#34;sparkline&#34;:[&#34;0.10961438985623642&#34;,&#34;0.1098841249543377&#34;,&#34;0.11025473159449753&#34;,&#34;0.11062336581339045&#34;,&#34;0.11096926990753721&#34;,&#34;0.11112616986390883&#34;,&#34;0.11111054399289587&#34;,&#34;0.11123574172601472&#34;,&#34;0.11099926911576126&#34;,&#34;0.11063982901865921&#34;,&#34;0.11050965745439092&#34;,&#34;0.11045095222645547&#34;,&#34;0.11017549059501121&#34;,&#34;0.11016734688761708&#34;,&#34;0.11022026683815063&#34;,&#34;0.11068489829349991&#34;,&#34;0.11062776144990603&#34;,&#34;0.1103967719055346&#34;,&#34;0.1101055340281511&#34;,&#34;0.11021340607044186&#34;,&#34;0.11023448571177163&#34;,&#34;0.11038410371678713&#34;,&#34;0.1100857906587621&#34;,&#34;0.10978971382514593&#34;,&#34;0.10968147719562468&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/65PHZTpmE55b+cronos-cro&#34;,&#34;24hVolume&#34;:&#34;22257554&#34;,&#34;btcPrice&#34;:&#34;0.000005474435731321&#34;},{&#34;uuid&#34;:&#34;AaQUAs2Mc&#34;,&#34;symbol&#34;:&#34;LUNC&#34;,&#34;name&#34;:&#34;Terra Classic&#34;,&#34;color&#34;:&#34;#0E3CA5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg&#34;,&#34;marketCap&#34;:&#34;1913992789&#34;,&#34;price&#34;:&#34;0.000290403608018928&#34;,&#34;listedAt&#34;:1565957940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.85&#34;,&#34;rank&#34;:32,&#34;sparkline&#34;:[&#34;0.000297671672254111&#34;,&#34;0.000298963973156913&#34;,&#34;0.000301720935856393&#34;,&#34;0.000300113265231995&#34;,&#34;0.000298930284162236&#34;,&#34;0.000301416052150239&#34;,&#34;0.000303244352601534&#34;,&#34;0.000301825527661809&#34;,&#34;0.00030045732086974&#34;,&#34;0.000299635878097677&#34;,&#34;0.000296177179356234&#34;,&#34;0.000294359789811536&#34;,&#34;0.000296200844720792&#34;,&#34;0.000295887381729173&#34;,&#34;0.000296261248957328&#34;,&#34;0.00029695599789668&#34;,&#34;0.000296406217932157&#34;,&#34;0.000295000757723728&#34;,&#34;0.00029565516360448&#34;,&#34;0.000295593404968822&#34;,&#34;0.000294434193736599&#34;,&#34;0.000292263816481774&#34;,&#34;0.000290645791060663&#34;,&#34;0.000291875516993992&#34;,&#34;0.00029218728728002&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc&#34;,&#34;24hVolume&#34;:&#34;74526330&#34;,&#34;btcPrice&#34;:&#34;1.448863091e-8&#34;},{&#34;uuid&#34;:&#34;08CsQa-Ov&#34;,&#34;symbol&#34;:&#34;WEMIX&#34;,&#34;name&#34;:&#34;WEMIX TOKEN&#34;,&#34;color&#34;:&#34;#9bdc70&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1N84MQsoO/7548.png&#34;,&#34;marketCap&#34;:&#34;1808838364&#34;,&#34;price&#34;:&#34;1.8088383642082868&#34;,&#34;listedAt&#34;:1638249982,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.02&#34;,&#34;rank&#34;:33,&#34;sparkline&#34;:[&#34;1.8205505524134962&#34;,&#34;1.8242876171474678&#34;,&#34;1.8291343031327176&#34;,&#34;1.8320876869529952&#34;,&#34;1.839386569721581&#34;,&#34;1.834064344910821&#34;,&#34;1.8333753181908716&#34;,&#34;1.8376513295883161&#34;,&#34;1.840233968382716&#34;,&#34;1.8324791678774568&#34;,&#34;1.8232583602123347&#34;,&#34;1.8132643937437805&#34;,&#34;1.8119472585308702&#34;,&#34;1.8090163301680255&#34;,&#34;1.8060426601302288&#34;,&#34;1.8182680306522165&#34;,&#34;1.820594742691741&#34;,&#34;1.8152667672239315&#34;,&#34;1.8077629072924724&#34;,&#34;1.8199553421430261&#34;,&#34;1.8150270056970825&#34;,&#34;1.8112994257344677&#34;,&#34;1.8120289219530683&#34;,&#34;1.802734311661105&#34;,&#34;1.804570864355095&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix&#34;,&#34;24hVolume&#34;:&#34;12129611&#34;,&#34;btcPrice&#34;:&#34;0.000090245405740645&#34;},{&#34;uuid&#34;:&#34;QQ0NCmjVq&#34;,&#34;symbol&#34;:&#34;FLOW&#34;,&#34;name&#34;:&#34;Flow&#34;,&#34;color&#34;:&#34;#9efad7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xh8X8QBss/flow.png&#34;,&#34;marketCap&#34;:&#34;1768455076&#34;,&#34;price&#34;:&#34;1.7066734952451308&#34;,&#34;listedAt&#34;:1614963736,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.40&#34;,&#34;rank&#34;:34,&#34;sparkline&#34;:[&#34;1.6879637940199872&#34;,&#34;1.6907794219662977&#34;,&#34;1.6944343024351958&#34;,&#34;1.7026071417666502&#34;,&#34;1.7114262181583197&#34;,&#34;1.7143682061268322&#34;,&#34;1.7143997727258644&#34;,&#34;1.7187065908839465&#34;,&#34;1.7113103990166811&#34;,&#34;1.706894909097403&#34;,&#34;1.699364495550604&#34;,&#34;1.7008536378119747&#34;,&#34;1.6971201519957864&#34;,&#34;1.6933155308815548&#34;,&#34;1.6919551440844665&#34;,&#34;1.7002389743593525&#34;,&#34;1.6997584145254834&#34;,&#34;1.6903684560400438&#34;,&#34;1.6857952597429327&#34;,&#34;1.7013464274735857&#34;,&#34;1.7011609882478398&#34;,&#34;1.7066497944706445&#34;,&#34;1.7038258896228677&#34;,&#34;1.699099958838675&#34;,&#34;1.7039657259463465&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/QQ0NCmjVq+flow-flow&#34;,&#34;24hVolume&#34;:&#34;96184516&#34;,&#34;btcPrice&#34;:&#34;0.000085148261499094&#34;},{&#34;uuid&#34;:&#34;SbWqqTui-&#34;,&#34;symbol&#34;:&#34;ENS&#34;,&#34;name&#34;:&#34;EnergySwap&#34;,&#34;color&#34;:&#34;#ffda55&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png&#34;,&#34;marketCap&#34;:&#34;1721646846&#34;,&#34;price&#34;:&#34;17.216468455023016&#34;,&#34;listedAt&#34;:1626134763,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.77&#34;,&#34;rank&#34;:35,&#34;sparkline&#34;:[&#34;17.081778286859773&#34;,&#34;17.067893912066662&#34;,&#34;17.159396834446234&#34;,&#34;17.409304028654628&#34;,&#34;17.350424599499906&#34;,&#34;17.386714429272285&#34;,&#34;17.38858738165633&#34;,&#34;17.59776912523738&#34;,&#34;17.615975294855826&#34;,&#34;17.448303583422675&#34;,&#34;17.32282156665203&#34;,&#34;17.45217875290083&#34;,&#34;17.3201524697605&#34;,&#34;17.37188836117317&#34;,&#34;17.34961857367158&#34;,&#34;17.39732106885539&#34;,&#34;17.40479905360241&#34;,&#34;17.35216582547696&#34;,&#34;17.40256516285308&#34;,&#34;17.566927968143226&#34;,&#34;17.41304480399479&#34;,&#34;17.3605187617024&#34;,&#34;17.153359676722275&#34;,&#34;17.24576945727861&#34;,&#34;17.266518018674518&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/SbWqqTui-+energyswap-ens&#34;,&#34;24hVolume&#34;:&#34;19824373&#34;,&#34;btcPrice&#34;:&#34;0.00085895302304947&#34;},{&#34;uuid&#34;:&#34;ymQub4fuB&#34;,&#34;symbol&#34;:&#34;FIL&#34;,&#34;name&#34;:&#34;Filecoin&#34;,&#34;color&#34;:&#34;#0090ff&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;1629847419&#34;,&#34;price&#34;:&#34;5.545448462680433&#34;,&#34;listedAt&#34;:1602839473,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.51&#34;,&#34;rank&#34;:36,&#34;sparkline&#34;:[&#34;5.564490867810681&#34;,&#34;5.566111951296787&#34;,&#34;5.573081005993705&#34;,&#34;5.597638107569036&#34;,&#34;5.622372212071733&#34;,&#34;5.621678478547102&#34;,&#34;5.635046338359381&#34;,&#34;5.636819831411602&#34;,&#34;5.621680148394719&#34;,&#34;5.606495156648643&#34;,&#34;5.592319378976973&#34;,&#34;5.593133992474709&#34;,&#34;5.578979507838225&#34;,&#34;5.57060347855348&#34;,&#34;5.56988332957902&#34;,&#34;5.585637764164166&#34;,&#34;5.587779222544867&#34;,&#34;5.569394483098339&#34;,&#34;5.555860681648574&#34;,&#34;5.5657058777971935&#34;,&#34;5.560079505677699&#34;,&#34;5.556640885063307&#34;,&#34;5.544057534440066&#34;,&#34;5.539256395617048&#34;,&#34;5.542528306381236&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ymQub4fuB+filecoin-fil&#34;,&#34;24hVolume&#34;:&#34;138346991&#34;,&#34;btcPrice&#34;:&#34;0.000276669964785645&#34;},{&#34;uuid&#34;:&#34;aMNLwaUbY&#34;,&#34;symbol&#34;:&#34;ICP&#34;,&#34;name&#34;:&#34;Internet Computer (DFINITY)&#34;,&#34;color&#34;:&#34;#00042b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png&#34;,&#34;marketCap&#34;:&#34;1579483455&#34;,&#34;price&#34;:&#34;6.014622469643834&#34;,&#34;listedAt&#34;:1601555742,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.09&#34;,&#34;rank&#34;:37,&#34;sparkline&#34;:[&#34;6.017430234811706&#34;,&#34;6.02397822813975&#34;,&#34;6.026022506481912&#34;,&#34;6.036706330465778&#34;,&#34;6.0617952393602765&#34;,&#34;6.082059364245906&#34;,&#34;6.119003490105678&#34;,&#34;6.121522161601521&#34;,&#34;6.114804820768077&#34;,&#34;6.099161118790063&#34;,&#34;6.060918970841281&#34;,&#34;6.056658651875394&#34;,&#34;6.04440103957183&#34;,&#34;6.040821790391322&#34;,&#34;6.031174470833535&#34;,&#34;6.049477994019767&#34;,&#34;6.05426717892797&#34;,&#34;6.041379962293601&#34;,&#34;6.029851672781251&#34;,&#34;6.029558427355942&#34;,&#34;6.0311271218149605&#34;,&#34;6.046335431217927&#34;,&#34;6.041224463133169&#34;,&#34;6.044501108247701&#34;,&#34;6.026325410969371&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp&#34;,&#34;24hVolume&#34;:&#34;46512222&#34;,&#34;btcPrice&#34;:&#34;0.000300077693999697&#34;},{&#34;uuid&#34;:&#34;FEbS54wxo4oIl&#34;,&#34;symbol&#34;:&#34;VET&#34;,&#34;name&#34;:&#34;VeChain&#34;,&#34;color&#34;:&#34;#4bc0fa&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg&#34;,&#34;marketCap&#34;:&#34;1572320794&#34;,&#34;price&#34;:&#34;0.02355157781586008&#34;,&#34;listedAt&#34;:1533427200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.78&#34;,&#34;rank&#34;:38,&#34;sparkline&#34;:[&#34;0.0237503648773653&#34;,&#34;0.023780799909472596&#34;,&#34;0.023856466417581195&#34;,&#34;0.02395339578538322&#34;,&#34;0.024027726003664374&#34;,&#34;0.02406287804956785&#34;,&#34;0.024029150650035552&#34;,&#34;0.02403165474416971&#34;,&#34;0.024007492514989702&#34;,&#34;0.023892749313038426&#34;,&#34;0.0237918988352485&#34;,&#34;0.02383663125658556&#34;,&#34;0.023815944952803175&#34;,&#34;0.02375987595684638&#34;,&#34;0.023747958190055547&#34;,&#34;0.023865382445108305&#34;,&#34;0.023886060705063935&#34;,&#34;0.023777291343685534&#34;,&#34;0.023683636546103736&#34;,&#34;0.023735592242398316&#34;,&#34;0.02368280508302678&#34;,&#34;0.02367337299793166&#34;,&#34;0.023608947936034432&#34;,&#34;0.023559309178789255&#34;,&#34;0.023545909556068136&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet&#34;,&#34;24hVolume&#34;:&#34;117681089&#34;,&#34;btcPrice&#34;:&#34;0.000001175020243865&#34;},{&#34;uuid&#34;:&#34;ncYFcP709&#34;,&#34;symbol&#34;:&#34;CAKE&#34;,&#34;name&#34;:&#34;PancakeSwap&#34;,&#34;color&#34;:&#34;#fe9555&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png&#34;,&#34;marketCap&#34;:&#34;1556441781&#34;,&#34;price&#34;:&#34;4.679829633557056&#34;,&#34;listedAt&#34;:1613642379,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.41&#34;,&#34;rank&#34;:39,&#34;sparkline&#34;:[&#34;4.661700930843492&#34;,&#34;4.662153786655901&#34;,&#34;4.669629519650637&#34;,&#34;4.6965206988350126&#34;,&#34;4.729693628603321&#34;,&#34;4.7140657358610465&#34;,&#34;4.72362675311866&#34;,&#34;4.726446209779176&#34;,&#34;4.717613624950668&#34;,&#34;4.704697941989018&#34;,&#34;4.698207502891328&#34;,&#34;4.7021832565717405&#34;,&#34;4.692520565338738&#34;,&#34;4.678139048018588&#34;,&#34;4.690446866999542&#34;,&#34;4.720676195685006&#34;,&#34;4.723733692086486&#34;,&#34;4.711911967477252&#34;,&#34;4.721038716505375&#34;,&#34;4.7278197954085766&#34;,&#34;4.7261855548331395&#34;,&#34;4.730859273583328&#34;,&#34;4.724423267167681&#34;,&#34;4.721094329268203&#34;,&#34;4.698009240688784&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ncYFcP709+pancakeswap-cake&#34;,&#34;24hVolume&#34;:&#34;45667758&#34;,&#34;btcPrice&#34;:&#34;0.000233483064288224&#34;},{&#34;uuid&#34;:&#34;tEf7-dnwV3BXS&#34;,&#34;symbol&#34;:&#34;MANA&#34;,&#34;name&#34;:&#34;Decentraland&#34;,&#34;color&#34;:&#34;#f47e33&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg&#34;,&#34;marketCap&#34;:&#34;1535839449&#34;,&#34;price&#34;:&#34;0.700177411016985&#34;,&#34;listedAt&#34;:1500336000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.28&#34;,&#34;rank&#34;:40,&#34;sparkline&#34;:[&#34;0.701977034723851&#34;,&#34;0.7011237829156313&#34;,&#34;0.7022081935423256&#34;,&#34;0.704347215334535&#34;,&#34;0.7057336965233337&#34;,&#34;0.7090636534769581&#34;,&#34;0.7106615358646469&#34;,&#34;0.7109962681888046&#34;,&#34;0.7099719076767776&#34;,&#34;0.7082023207228123&#34;,&#34;0.7050468491660892&#34;,&#34;0.7072911038373654&#34;,&#34;0.7052069405945084&#34;,&#34;0.7045672897680095&#34;,&#34;0.7039823074677339&#34;,&#34;0.7064319311458693&#34;,&#34;0.7061251224914128&#34;,&#34;0.7035537471979324&#34;,&#34;0.70119909731761&#34;,&#34;0.7012006334450854&#34;,&#34;0.700378912113366&#34;,&#34;0.7006616578748375&#34;,&#34;0.7002263140262767&#34;,&#34;0.7005970156301706&#34;,&#34;0.7000471371939851&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana&#34;,&#34;24hVolume&#34;:&#34;181028008&#34;,&#34;btcPrice&#34;:&#34;0.000034932803172449&#34;},{&#34;uuid&#34;:&#34;Z96jIvLU7&#34;,&#34;symbol&#34;:&#34;IMX&#34;,&#34;name&#34;:&#34;Immutable X&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/naRGT2Y_X/10603.png&#34;,&#34;marketCap&#34;:&#34;1528710252&#34;,&#34;price&#34;:&#34;0.764355126097645&#34;,&#34;listedAt&#34;:1649387294,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.84&#34;,&#34;rank&#34;:41,&#34;sparkline&#34;:[&#34;0.7863788485157178&#34;,&#34;0.7855541947236996&#34;,&#34;0.7859794469303182&#34;,&#34;0.7910897411189671&#34;,&#34;0.793054017744364&#34;,&#34;0.7920608982909317&#34;,&#34;0.7932732662277912&#34;,&#34;0.7937358349094242&#34;,&#34;0.7899013972015532&#34;,&#34;0.7873715826948282&#34;,&#34;0.7828939261430061&#34;,&#34;0.7830596769363658&#34;,&#34;0.781549984261565&#34;,&#34;0.7776641064358721&#34;,&#34;0.774477413274178&#34;,&#34;0.7796249547306316&#34;,&#34;0.7785003478970451&#34;,&#34;0.7744517162811705&#34;,&#34;0.7716980943097198&#34;,&#34;0.7718465182090138&#34;,&#34;0.7695939089125774&#34;,&#34;0.7675475383081616&#34;,&#34;0.7659261335369044&#34;,&#34;0.7647132288808262&#34;,&#34;0.7647155542326465&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Z96jIvLU7+immutablex-imx&#34;,&#34;24hVolume&#34;:&#34;59830761&#34;,&#34;btcPrice&#34;:&#34;0.00003813471664994&#34;},{&#34;uuid&#34;:&#34;jad286TjB&#34;,&#34;symbol&#34;:&#34;HBAR&#34;,&#34;name&#34;:&#34;Hedera&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/dSCnSLilQ/hedera.svg&#34;,&#34;marketCap&#34;:&#34;1413343448&#34;,&#34;price&#34;:&#34;0.058052505411859745&#34;,&#34;listedAt&#34;:1568704980,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.60&#34;,&#34;rank&#34;:42,&#34;sparkline&#34;:[&#34;0.057704389710771006&#34;,&#34;0.057720764112458633&#34;,&#34;0.05789434173084646&#34;,&#34;0.05809746344437125&#34;,&#34;0.058189441306718125&#34;,&#34;0.05837589581493919&#34;,&#34;0.058390643995986855&#34;,&#34;0.05842359197073168&#34;,&#34;0.058297064663280294&#34;,&#34;0.05820470132737367&#34;,&#34;0.05807440260764427&#34;,&#34;0.05815803410400219&#34;,&#34;0.05809704013369458&#34;,&#34;0.05804303598748368&#34;,&#34;0.05807196376127004&#34;,&#34;0.05825313502134361&#34;,&#34;0.05829341549445707&#34;,&#34;0.05821978196200451&#34;,&#34;0.05798861981613355&#34;,&#34;0.05802915704007855&#34;,&#34;0.05803221909522417&#34;,&#34;0.05809617434017486&#34;,&#34;0.05803719408534143&#34;,&#34;0.05798158873479129&#34;,&#34;0.05799300122328515&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/jad286TjB+hedera-hbar&#34;,&#34;24hVolume&#34;:&#34;43752405&#34;,&#34;btcPrice&#34;:&#34;0.000002896318437744&#34;},{&#34;uuid&#34;:&#34;KfWtaeV1W&#34;,&#34;symbol&#34;:&#34;FRAX&#34;,&#34;name&#34;:&#34;Frax&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BpVNCX-NM/frax.png&#34;,&#34;marketCap&#34;:&#34;1360008693&#34;,&#34;price&#34;:&#34;1.0014307404744005&#34;,&#34;listedAt&#34;:1615299931,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.12&#34;,&#34;rank&#34;:43,&#34;sparkline&#34;:[&#34;1.0000268231187786&#34;,&#34;0.9993388779781252&#34;,&#34;0.9994407930086252&#34;,&#34;0.9986229045501516&#34;,&#34;0.9990744412957507&#34;,&#34;0.9990768091269389&#34;,&#34;0.999533163749183&#34;,&#34;0.9992798589768088&#34;,&#34;0.9998864958466837&#34;,&#34;1.0002316433678111&#34;,&#34;0.9997435605750601&#34;,&#34;0.9999510736256771&#34;,&#34;0.9995877887400998&#34;,&#34;0.999783294319345&#34;,&#34;0.9993800980597954&#34;,&#34;0.9989024781788758&#34;,&#34;1.0002727567604988&#34;,&#34;1.0007528006058746&#34;,&#34;0.9996998053122591&#34;,&#34;0.999539311284952&#34;,&#34;0.9995986423076254&#34;,&#34;0.9991918993229284&#34;,&#34;0.9999917500713156&#34;,&#34;0.999743821552415&#34;,&#34;1.0010968947138141&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/KfWtaeV1W+frax-frax&#34;,&#34;24hVolume&#34;:&#34;7124767&#34;,&#34;btcPrice&#34;:&#34;0.00004996274143866&#34;},{&#34;uuid&#34;:&#34;bauj_21eYVwso&#34;,&#34;symbol&#34;:&#34;QNT&#34;,&#34;name&#34;:&#34;Quant&#34;,&#34;color&#34;:&#34;#585e63&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/a-i9Dl392/quant.png&#34;,&#34;marketCap&#34;:&#34;1352742654&#34;,&#34;price&#34;:&#34;138.35634673022093&#34;,&#34;listedAt&#34;:1533945600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.10&#34;,&#34;rank&#34;:44,&#34;sparkline&#34;:[&#34;136.86641854250846&#34;,&#34;137.61943864188262&#34;,&#34;138.02288004406574&#34;,&#34;138.71450262820792&#34;,&#34;139.15753412769195&#34;,&#34;139.0288846982766&#34;,&#34;139.1402037166419&#34;,&#34;138.93629469593716&#34;,&#34;138.16451460952393&#34;,&#34;137.36487381286946&#34;,&#34;137.47323036753917&#34;,&#34;139.47069461255214&#34;,&#34;138.96967914045058&#34;,&#34;139.3198390416663&#34;,&#34;139.64725230463458&#34;,&#34;140.750058199524&#34;,&#34;139.82120238160806&#34;,&#34;139.62012734518615&#34;,&#34;139.11349157404445&#34;,&#34;139.65833844203283&#34;,&#34;139.23347469831282&#34;,&#34;139.1817083994535&#34;,&#34;138.8991730119048&#34;,&#34;138.13998261945733&#34;,&#34;138.13266569202622&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/bauj_21eYVwso+quant-qnt&#34;,&#34;24hVolume&#34;:&#34;34365668&#34;,&#34;btcPrice&#34;:&#34;0.006902786282359267&#34;},{&#34;uuid&#34;:&#34;omwkOTglq&#34;,&#34;symbol&#34;:&#34;EGLD&#34;,&#34;name&#34;:&#34;Elrond&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg&#34;,&#34;marketCap&#34;:&#34;1306510109&#34;,&#34;price&#34;:&#34;55.29726372307632&#34;,&#34;listedAt&#34;:1612524044,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.38&#34;,&#34;rank&#34;:45,&#34;sparkline&#34;:[&#34;54.53200689084205&#34;,&#34;54.12891435002389&#34;,&#34;54.19623024858422&#34;,&#34;54.633815523213606&#34;,&#34;55.27290146147566&#34;,&#34;55.13168195216286&#34;,&#34;55.385084460868484&#34;,&#34;55.204117457272815&#34;,&#34;55.02695582682979&#34;,&#34;54.88507503357054&#34;,&#34;54.61644563280285&#34;,&#34;54.70849443349061&#34;,&#34;55.03535127585458&#34;,&#34;55.12708543041666&#34;,&#34;55.12441377248144&#34;,&#34;55.100996636927164&#34;,&#34;55.0414585858571&#34;,&#34;54.89583474520678&#34;,&#34;54.830907515321&#34;,&#34;55.07520330106215&#34;,&#34;55.35219440814218&#34;,&#34;55.0085050792647&#34;,&#34;54.82982283174939&#34;,&#34;54.94795813298924&#34;,&#34;55.073705982029324&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/omwkOTglq+elrond-egld&#34;,&#34;24hVolume&#34;:&#34;101315795&#34;,&#34;btcPrice&#34;:&#34;0.002758855683172492&#34;},{&#34;uuid&#34;:&#34;fsIbGOEJWbzxG&#34;,&#34;symbol&#34;:&#34;XTZ&#34;,&#34;name&#34;:&#34;Tezos&#34;,&#34;color&#34;:&#34;#2c7df7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HkLUdilQ7/xtz.svg&#34;,&#34;marketCap&#34;:&#34;1299027273&#34;,&#34;price&#34;:&#34;1.4303529448198662&#34;,&#34;listedAt&#34;:1530662400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.40&#34;,&#34;rank&#34;:46,&#34;sparkline&#34;:[&#34;1.422154065982087&#34;,&#34;1.4244295761005363&#34;,&#34;1.4277505791732141&#34;,&#34;1.4331687835452782&#34;,&#34;1.443452302749013&#34;,&#34;1.44654853894898&#34;,&#34;1.4430883131864&#34;,&#34;1.4486591676627363&#34;,&#34;1.4453351430074377&#34;,&#34;1.4406990621963756&#34;,&#34;1.4357528630214837&#34;,&#34;1.4364879120875458&#34;,&#34;1.4341300033627156&#34;,&#34;1.433556473760653&#34;,&#34;1.4327812160186728&#34;,&#34;1.438628684956135&#34;,&#34;1.4388288665247424&#34;,&#34;1.4322711706987314&#34;,&#34;1.4239909372154902&#34;,&#34;1.4246489366303339&#34;,&#34;1.4219137536482624&#34;,&#34;1.4281196230913553&#34;,&#34;1.431206588730244&#34;,&#34;1.4310841397804643&#34;,&#34;1.4307637472117907&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz&#34;,&#34;24hVolume&#34;:&#34;42631922&#34;,&#34;btcPrice&#34;:&#34;0.000071362253483657&#34;},{&#34;uuid&#34;:&#34;GSCt2y6YSgO26&#34;,&#34;symbol&#34;:&#34;CHZ&#34;,&#34;name&#34;:&#34;Chiliz&#34;,&#34;color&#34;:&#34;#d05e72&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/gTsOlSnwR/4066.png&#34;,&#34;marketCap&#34;:&#34;1281908888&#34;,&#34;price&#34;:&#34;0.21577787378252844&#34;,&#34;listedAt&#34;:1562332440,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.51&#34;,&#34;rank&#34;:47,&#34;sparkline&#34;:[&#34;0.2156861139378023&#34;,&#34;0.21533849342523834&#34;,&#34;0.21637084202032117&#34;,&#34;0.2172780853626793&#34;,&#34;0.2185663393777442&#34;,&#34;0.21930091082116046&#34;,&#34;0.21987321663135242&#34;,&#34;0.21925549598692895&#34;,&#34;0.218446742092016&#34;,&#34;0.21799923484351233&#34;,&#34;0.21702029272708792&#34;,&#34;0.2161097068576463&#34;,&#34;0.2157993116882586&#34;,&#34;0.21590901819560568&#34;,&#34;0.21566164758114145&#34;,&#34;0.21624178021000806&#34;,&#34;0.215892046849503&#34;,&#34;0.21496977646657472&#34;,&#34;0.21502311258804033&#34;,&#34;0.21704355142688964&#34;,&#34;0.21765173879422026&#34;,&#34;0.2168903690807956&#34;,&#34;0.2161411090221284&#34;,&#34;0.21595613155613003&#34;,&#34;0.2160416191418896&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz&#34;,&#34;24hVolume&#34;:&#34;300782991&#34;,&#34;btcPrice&#34;:&#34;0.000010765451548724&#34;},{&#34;uuid&#34;:&#34;pxtKbG5rg&#34;,&#34;symbol&#34;:&#34;SAND&#34;,&#34;name&#34;:&#34;The Sandbox&#34;,&#34;color&#34;:&#34;#00adef&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/kd_vwOcnI/sandbox.png&#34;,&#34;marketCap&#34;:&#34;1273569087&#34;,&#34;price&#34;:&#34;0.8493460426374936&#34;,&#34;listedAt&#34;:1613583024,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.48&#34;,&#34;rank&#34;:48,&#34;sparkline&#34;:[&#34;0.8593672603083095&#34;,&#34;0.8592673257045527&#34;,&#34;0.8609659832018245&#34;,&#34;0.8648971108758887&#34;,&#34;0.8663731911826474&#34;,&#34;0.8667122213039231&#34;,&#34;0.8663886523811145&#34;,&#34;0.8668792238690509&#34;,&#34;0.8649624385349067&#34;,&#34;0.8611180516082279&#34;,&#34;0.8585412818383397&#34;,&#34;0.8661515489489221&#34;,&#34;0.8593039298345546&#34;,&#34;0.8547774111127597&#34;,&#34;0.8526806084120415&#34;,&#34;0.8563535288027431&#34;,&#34;0.8564092645541592&#34;,&#34;0.8530767457147056&#34;,&#34;0.8502167147455565&#34;,&#34;0.8516834566430094&#34;,&#34;0.8511666186198831&#34;,&#34;0.8510769601275632&#34;,&#34;0.8485446381486353&#34;,&#34;0.8475518785122093&#34;,&#34;0.8480963950511211&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand&#34;,&#34;24hVolume&#34;:&#34;88280834&#34;,&#34;btcPrice&#34;:&#34;0.000042375029051079&#34;},{&#34;uuid&#34;:&#34;Pe93bIOD2&#34;,&#34;symbol&#34;:&#34;LDO&#34;,&#34;name&#34;:&#34;Lido DAO Token&#34;,&#34;color&#34;:&#34;#77cced&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png&#34;,&#34;marketCap&#34;:&#34;1214419931&#34;,&#34;price&#34;:&#34;1.509867291755627&#34;,&#34;listedAt&#34;:1627361901,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.48&#34;,&#34;rank&#34;:49,&#34;sparkline&#34;:[&#34;1.5152205100915535&#34;,&#34;1.5169429140699267&#34;,&#34;1.52442883963002&#34;,&#34;1.5352051807886449&#34;,&#34;1.5507771914692972&#34;,&#34;1.5584198947059793&#34;,&#34;1.5611709741306992&#34;,&#34;1.5622734158186&#34;,&#34;1.563158380319883&#34;,&#34;1.5530023128237487&#34;,&#34;1.5394541532334183&#34;,&#34;1.5415345344528264&#34;,&#34;1.5397346514776398&#34;,&#34;1.5529429534884351&#34;,&#34;1.5579757035793522&#34;,&#34;1.560667950492334&#34;,&#34;1.5577382798650414&#34;,&#34;1.54511103614271&#34;,&#34;1.527483697189044&#34;,&#34;1.5299531579297556&#34;,&#34;1.5250857787869663&#34;,&#34;1.5243751296124086&#34;,&#34;1.5162105499958185&#34;,&#34;1.5081580664187493&#34;,&#34;1.505515094483018&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo&#34;,&#34;24hVolume&#34;:&#34;9393011&#34;,&#34;btcPrice&#34;:&#34;0.00007532933237993&#34;},{&#34;uuid&#34;:&#34;iAzbfXiBBKkR6&#34;,&#34;symbol&#34;:&#34;EOS&#34;,&#34;name&#34;:&#34;EOS&#34;,&#34;color&#34;:&#34;#443f54&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/PqOYrWSje/eos2.svg&#34;,&#34;marketCap&#34;:&#34;1157005829&#34;,&#34;price&#34;:&#34;1.1704482714528321&#34;,&#34;listedAt&#34;:1498694400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.09&#34;,&#34;rank&#34;:50,&#34;sparkline&#34;:[&#34;1.1694363470738518&#34;,&#34;1.1705864439187568&#34;,&#34;1.1738525342149835&#34;,&#34;1.178558922119085&#34;,&#34;1.1837969319466126&#34;,&#34;1.1858090386610416&#34;,&#34;1.1862130969952875&#34;,&#34;1.1884443612524698&#34;,&#34;1.1872550267419892&#34;,&#34;1.1834269966357152&#34;,&#34;1.1774580582186247&#34;,&#34;1.176233833106269&#34;,&#34;1.1771650081760523&#34;,&#34;1.1771210586603023&#34;,&#34;1.1806485771743869&#34;,&#34;1.1831210652488116&#34;,&#34;1.182431907948135&#34;,&#34;1.1787638124236466&#34;,&#34;1.1765484036088025&#34;,&#34;1.177234556211267&#34;,&#34;1.1757269076583845&#34;,&#34;1.1752701437192155&#34;,&#34;1.1731499477132676&#34;,&#34;1.1704139722460736&#34;,&#34;1.169172194454326&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/iAzbfXiBBKkR6+eos-eos&#34;,&#34;24hVolume&#34;:&#34;259725164&#34;,&#34;btcPrice&#34;:&#34;0.000058395255897798&#34;}]}} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://rapidapi.com/primisign-pBrt_l-Weeu/api/pquotes&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;618474c20emshb969af58dc7ea8fp142551jsn4e58bb034dc2&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://kcabralomana.github.io/Fastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post78": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i +1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 0 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [0, 2, 4, 6, 8, 10] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 0): odds.append(numbers[i]) print(odds) . [0, 2, 4, 6, 8, 10] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 0, 2, 4, 5, 6, 8, 10, 10, 12, 14, 15, 16, 18, 20, 20, 22, 24, 25, 26, 28, 30, 30, 32, 34, 35, 36, 38, 40, 40, 42, 44, 45, 46, 48, 50, 50, 52, 54, 55, 56, 58, 60, 60, 62, 64, 65, 66, 68, 70, 70, 72, 74, 75, 76, 78, 80, 80, 82, 84, 85, 86, 88, 90, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? count = input(&quot;How many items do you want?&quot;) i = 0 print(&quot;Your order&quot;) while i &lt; int(count): item = input(&quot;Please select from the menu&quot;) total = total + menu[item] print(item) i += 1 #ideally the code should prompt the user multiple times #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 Your order burger fries 5.98 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://kcabralomana.github.io/Fastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post79": {
            "title": "Program Design and Development Unit 1.3",
            "content": "Program Design and Development . Video 1: . Computer programs are developed with a systematic approach to meet design elements. starts with an idea | follow specific steps and stick to a plan | . | Dev Process can be ordered and intentional or exploratory. Phases of the dev process include: investigating/reflecting | designing | prototyping | testing | . | Developers must determine the program requirements and constraints | revisiting earlier phases of the process allows refinement and revision based on feedback and testing | Break down your problem/coding process into numerous pieces and make sure each piece works before combining the program as a whole. | investigation is useful to identify the program constraints and concerns for the user. Collecting data with survey | user testing | interviews | Direct Observations | . | Program requirements describe user interactions and program functions include user interactions and create an outline of them | . | Design phase of development outlines how they will accomplish a given program goal/specification brainstorming | planning and creating a storyboard | organizing the program into modules and functional components | creation of diagrams that represent the layouts of the user interface | dev of a testing strategy for the program. | . | . Video 2: . Programs are developed by groups of people and are expanded upon by individuals. Rarely developed solely by a single individual. (teams are more common) | Individuals work on a specific component of the program or code segment. Each member of a team should receive credit in the documentation of the program | . | . | Always acknowledge when you are using a code segment from an outside source. Do this by writing the original authors name in the program documentation. | Some languages have the ability to leave a comment within the code, to give credit. comments make it easy to find out who is responsible to fix a specific problem | After the program is completed, you can find additional bugs. | . | . | Sometimes developers use code segments, procedures, algorithms that were written by others. Even if they are not part of the project, they deserve credit, because it is considered intellectual property. | Documentation of contributors resembles a works cited list. | . | . Video 3: . Programs use comments and documentation to explain the purpose of their programs to themselves and others | Program documentation is a written description of a function of a code segment, event, procedure, or program and how it was developed. Describe the overall program specifications, its development, how other programs interact with yours, and the contributors. | . | You Should document your program throughout the development At the beginning, list specifications | During, keep track of your progress | After, explain the overall process | . | Documentation helps maintain correct programs, so you can easily review what you or collaborators did. Improves efficiency, and ability to test and refine your program. | . | If there is no comment feature in the language, you have to get creative Comments allow programmers to write text within the program, does not affect the program. | Python: # is a comment | Java: // is a single line comment, /* is multiple line, /** documentation comments | Javascript, C++, Swift use the same as java | HTML and XML use &lt;!””!&gt; | . | . Completed Program Design and Development Video Quiz: . .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/10/02/unit-1.3-notes.html",
            "relUrl": "/markdown/2022/10/02/unit-1.3-notes.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post80": {
            "title": "Program Function and Purpose Unit 1.2",
            "content": "Program Function and Purpose Notes . Video #1 . Programs are developed with a purpose (solve problems) | Innovation categories Applications (games) | Systems (email) | Physical Devices (gaming consoles, phones) | . | Being able to understand the purpose of a program is essential to improve a programmers ability to improve the function. | . Video #2 . Programs inputs are date sent to computers for processing by the program | Events are associated with an action and supplies input data to a program | Events are generated by a defined action | Program statements are executed when triggered | Program output is data sent from a programs input to a device in the form of visual/text/audio | . Video #3 . Program is a collection of statements that perform a task when run (software) | A code segment is a collection of code statements, according to the rules of a programming language To describe it: Simply state what the segment does, so someone else can use it without reading the whole thing | . | A program must work for a variety of inputs and situations | The behavior of a program is how a program functions during its execution (how a user interacts with it) | Programs are described by what the program does and how its statements accomplish the function. | . Program Function and Purpose of my teams final project . Do we have final project ideas for a PBL Web Project? . | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/09/25/unit-1.2-notes.html",
            "relUrl": "/markdown/2022/09/25/unit-1.2-notes.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post81": {
            "title": "Scrum Project Idea",
            "content": "Purpose . Our plan is to make a platform, called Striver, where peoples are able to track their own personal goals and be able to check on the goals of their peers. Essentially our website would operate like a social media site for motivation and self gain. . Planning . We decided to plan this by contributing on a google drawing to get an idea of how we will attack this idea. We decided to also meet up with each other over the week end so that we can collaborate on a more intimate level so we could effectively share our ideas. . . Goal . In the end we hope to come up with a good looking website that will allow the community to post about their goals for the near future and keep tabs on their friends and peers on their own goals . . My roles . With my role as the frontend operator I plan to take care of the asthetics of our website. I will ensure the functionality of our project and make sure all aspects are up to standards and work in a practical way. I will ensure an easy to understand and operational website that users will be able to function on. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/09/25/scrum-project-idea.html",
            "relUrl": "/markdown/2022/09/25/scrum-project-idea.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post82": {
            "title": "Random Number Generator",
            "content": "Click to Generate Number . The Number Will Appear Here .",
            "url": "https://kcabralomana.github.io/Fastpages/randomnum",
            "relUrl": "/randomnum",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post83": {
            "title": "Personal Usage of Jupyter JavaScript kernel",
            "content": "Using JavaScript for math . Math.max(x, y) method . used to find highest value of x and y | . Math.max(5, 10); . 10 . Math.min (x, y) method . used to find highest value of x and y | . Math.min(5, 10); . 5 . Math.round(x) method . used to round x to the closest integer | . Math.round(5.7) . 6 . Math.pow(x, y) method . used to take x to the power of y | . Math.pow(5, 3) . 125 . Math.sqrt(x) method . used to take the square root of x | . Math.sqrt(16) . 4 . Math.abs(x) method . used to take the absolute value of x | . Math.abs(-9) . 9 .",
            "url": "https://kcabralomana.github.io/Fastpages/personaluse",
            "relUrl": "/personaluse",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post84": {
            "title": "JavaScript Tutorial",
            "content": "console.log output . console.log command outputs the parameter to the console, so that you can see it in the Jupyter document. . console.log(&quot;Hello, World!&quot;); . Hello, World! . console.log output showing use of variable . This second example is a sequence of code, two or more lines forms a sequence. This example defines a variable, then outputs the msg to terminal. . var msg = &quot;Hello, Kalani!&quot;; console.log(msg); . Hello, Kalani! . console.log output showing use of a function . This example passes the previously defined variable &quot;msg&quot; to the newly defined &quot;function logIt(output)&quot;. . function logIt(output) { console.log(output); } logIt(&quot;yo&quot;); . yo . Showing reuse of a function . Now that a function is defined, it can be called from any of the subsequent cell in the Jupyter notebook. A function/method, is a process of creating a procedural abstraction. This a programming practice to promote reuse versus coding the same thing over and over. . First call sends a different string message | Second call sends a number | . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . Dynamic or Loosely typed language (string, number) . JavaScript is a loosely typed language, don&#39;t have to specify what type of information will be stored in a variable in advance. This is similar to Python and most interpretive languages. Java which is a compiled language is strongly typed, thus you will see string, integer, double, and object in the source code. In JavaScript, the &quot;typeof&quot; keyword returns the type. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;dynamic nature of types in JavaScript&quot;) logItType(&quot;hello bro&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . dynamic nature of types in JavaScript string ; hello bro number ; 2020 object ; [ 1, 2, 3 ] . Build a Person Function/Group object and JSON . JavaScript functions have special properties and syntax is shown in many ways. In fact, a Class in JavaScript is a special function. Jupyter Notebooks seems to be more friendly to &quot;function&quot; definitions versus &quot;Class&quot;, thus this lesson uses &quot;function&quot; and &quot;prototype&quot; versus &quot;Class&quot;. . Definition of function allows for a collection of data | Definition of a prototype allow for the definition of a method associated with the function | Instance of a function | . // define a function to hold data for a Person function Person(name, sport, age) { this.name = name; this.sport = sport; this.age = age; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, sport: this.sport, age: this.age, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var thegoat = new Person(&quot;Kalani&quot;, &quot;soccer&quot;, 16); thegoat.setRole(&quot;GOAT&quot;); // output of Object and JSON/string associated with Teacher logItType(thegoat); // object type is easy to work with in JavaScript logItType(thegoat.toJSON()); // json/string is useful when passing data on internet . object ; Person { name: &#39;Kalani&#39;, sport: &#39;soccer&#39;, age: 16, role: &#39;GOAT&#39; } string ; {&#34;name&#34;:&#34;Kalani&#34;,&#34;sport&#34;:&#34;soccer&#34;,&#34;age&#34;:16,&#34;role&#34;:&#34;GOAT&#34;} . Build a Classroom Array/List of Persons and JSON . Many key elements are shown again. New elements include... . Building an Array, &quot;var students&quot; is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . // define a student Array of Person(s) var students = [ new Person(&quot;Navan&quot;, &quot;football&quot;, 15), new Person(&quot;Alex&quot;, &quot;basketball&quot;, 16), new Person(&quot;Safin&quot;, &quot;tennis&quot;, 16), ]; // define a classroom and build Classroom objects and json function Classroom(thegoat, students){ // 1 teacher, many student // start Classroom with Teacher thegoat.setRole(&quot;GOAT&quot;); this.thegoat = thegoat; this.classroom = [thegoat]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(thegoat, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Kalani&#39;, sport: &#39;soccer&#39;, age: 16, role: &#39;GOAT&#39; }, Person { name: &#39;Navan&#39;, sport: &#39;football&#39;, age: 15, role: &#39;Student&#39; }, Person { name: &#39;Alex&#39;, sport: &#39;basketball&#39;, age: 16, role: &#39;Student&#39; }, Person { name: &#39;Safin&#39;, sport: &#39;tennis&#39;, age: 16, role: &#39;Student&#39; } ] string ; Kalani string ; {&#34;name&#34;:&#34;Kalani&#34;,&#34;sport&#34;:&#34;soccer&#34;,&#34;age&#34;:16,&#34;role&#34;:&#34;GOAT&#34;} object ; { name: &#39;Kalani&#39;, sport: &#39;soccer&#39;, age: 16, role: &#39;GOAT&#39; } . IJavaScript and Table formatting using toHTML method . This example builds a Classroom method _toHTML which is passed to the IJavaScript interpreter $$.html which renders output similarly to a real website. . JavaScript in the _toHTML method is broken into three parts... Style part is building CSS inline formatting | Body part is constructing the Table Rows (tr), Table Headings (th), and Table Data (td). The table data is obtained from a Classroom object. The JavaScript for loop allows the construction of a new row of data for each person object in the Array. | Return part creates the HTML fragment for rendering | . | The last line in the example $$.html is IJavaScript HTML interpreter and by passing the parameter of the _toHTML method it obtains HTML to render. | . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;background:black;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Sport&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.sport + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameSportageRole . Kalani | soccer | 16 | GOAT | Navan | football | 15 | Student | Alex | basketball | 16 | Student | Safin | tennis | 16 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://kcabralomana.github.io/Fastpages/javatut",
            "relUrl": "/javatut",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post85": {
            "title": "Collaboration Unit 1.1",
            "content": "Collaboration Notes . The importance of collaboration . Multiple perspectives working together to find a better solution | Improves communication skills | Improves productivity and a chance to learn from one another | . Super Mario Example . Kensuke and Tanabe and Shigeru Miyambo worked together to make both games (collaborating) | Tanabe was level designer while Miyamoto was director (different roles in a team) | Collaboration between the two was able to make a good game including both of their talents and perspectives | . How to Collaborate . Pair programming Two Programmers work together as a pair. One writes the program while the other obeserves and navigates (reviews code as its typped in) | . | Think-Pair-Share Students think through a problem alone, pair with a partner to share ideas and they form a result to share with class | . | Collaboration tools Github (collaborate with repos), peer testing and feedback, shared documents and folders, repl.it (code together in same workspace) | . | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/09/19/collaboration-notes.html",
            "relUrl": "/markdown/2022/09/19/collaboration-notes.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post86": {
            "title": "Focus Habits and Gratitude",
            "content": "“Psychology and the Good Life” Notes and Insights . Insight #1: We can improve our well-being . The first insight that I took away from the video was controlling our well-being. I never knew how much control over our well-being we actually had. In a study talked about in the video, she states that around 50% of our well-being is determined by our genes. This means that people have the chance to control their well-being around half the time and affect their lives in a positive way . Insight #2: Stop worrying about the little things in life . Another insight I had while watching the video was how life circumstances don’t really affect our lives as much as we think. She talks about how these short instances in our life may affect our happiness present time when it happens but later on it takes zero control on our well-being. What we usually think will make us happy doesn’t make us as happy as we would think. . Insight #3: The importance of being with other people . In the video she mentions how happy people spend their time. It is discovered that happy people tend to spend their time around other while more unhappy people would rather spend their time alone and away from others and social interaction. She mentions a study where people that were put into a situation where they had to connect with strangers for a long period of time and they measured that their overall well being was more positive than the people that were stuck in solitary. . Insight #4: The importance of good deeds and helping other . Happy people tend to spend their time to help others. She mentions how treating and helping others has a greater affect on a persons well-being than it would if a person were to treat themselves. She mentions a study where people were given money to either help themselves or help other and the study shows that the people that helped others were significantly more happy in the end than the people that helps themselves. . Insight #5: Be present in the moment . In the video she talks about realizing what you are doing and focusing is important for you well-being. It also means taking time to realize you gratitude and what it really means to be where you are presently in that moment. . Gratitude List . Parents | Friends | Family | Community | Teammates | Coaches | Teachers | . Goals . Work on my well-being and mentality everyday | Get enough sleep | Being healthy | Be kind to others | Spread love | . Own Self Study . After we watched the video we decided to take our only little survey to see how school can affect students well-being here at Del Norte. . Below are some of the questions we asked and results that we recieved . Stress Levels . . As you can see by the data received from the students there is an incredibly high peak at the higher stress levels. Students are stressed out due to many factors that should be addressed. . Anxiety Levels . . We can see that there is a bell shaped curve residing around a level 4 anxiety. This may indicate that students aren’t too stressed out to have high anxiety but stressed out enough to relatively still have high anxiety. . Effect of homework . . As we can see by this pie chart a majority of students are overwhelmed by their homework whether it be the amount of homework or the difficulty of it. . Loneliness . . We can see that around two thirds of students that answered this survey responded yes to being lonely. This may suggest unhappy students to to social interactions and connections being important to a persons happiness. . Takeaway . From this little study we conducted as a team we were able to conclude that school does take a toll on the students mental health. But it is more about how the student handles it. The student may be able to handle everything and not be overwhelmed by work but did they answer yes on feeling lonely if that was the case. This survey gave us the chance to analyze students well-being while relating it to the video of the Psychology of a Good Life. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/09/15/phychology-and-the-good-life.html",
            "relUrl": "/markdown/2022/09/15/phychology-and-the-good-life.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post87": {
            "title": "Performance Task",
            "content": "Create Performance Task Draft . Baseball Statistics Generator . Creative Homepage welcoming user to generator with multiple ways to navigate throughout the generator | May be a page to enter players statistics/ a user can enter personal bests | Search tool so that a user can find other users and find their personal bests and other various statistics | Comparing page that will allow users to compare themselves with other users | Comparing other users to other users based on certain statistics and positions | . Program Purpose and Function . I will need to demonstrate a program that can take an input, possibly the user inputting their statistics. I will need to establish what the inputs and the outputs are and what the program is trying to achieve. . Data Abstraction . I will have to create a data structure to store data an then sue that data. I will have to describe how the list’s data would be used for in the program. I could possibly use the statistics that users inputted. . Managing Complexity . Using Lists from a dictionary of traits and statistics of users. I will use a list to help reduce complexity. . Procedural Abstraction . A procedure will be identified in the program, retrieving data from statistics of users, which contributes to the functionality of the program, storing statistics of users to be compared to each other. . Algorithm Implementation . I am not quite sure yet on how I will use sequencing and selection. But I may use iteration in my program by loops when outputing user statistics for each user. . Testing . Display the use of the program and how to navigate through the generator. Inputing statistics and searching for other user, also comparing different users. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/week%203/2022/09/11/performance-task.html",
            "relUrl": "/markdown/week%203/2022/09/11/performance-task.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post88": {
            "title": "AppLab Notes",
            "content": "AppLab Notes . Padres Quiz . 1 Program purpose) Purpose to test users knowledge about the Padres 2 Data abstraction) I set a variable called correct to 0 and as the user enter correct answers it would add to that variable giving a final score in the end. 3 managing complexity) I was not able to implement this my own function. 4 procedural abstraction) I was not able to implement my own function. 5 algorithm implementation) I used if statements to change an image to a smiley face or a sad face depending on how many question were answered correct. 6 testing) I used console.log to see if everything worked orderly. . Design Process . When we first started with Code.org we decided to plan out what we were going to make our quizzes about. Eventually we decided for one of us to do a Countries Quiz and the other do a Padres Quiz. For the Padres Quiz which is what I decided to create, I decided to have 3 different questions, 2 MC, and 1 free response. I decided to include a Main Screen, How to Play, Questions (1-3), and a Final screen. . Successes . I had a few successes through coding my apps in Code.org. I found success in being able to direct the player to certain screens and coding for the right and wrong answer. At first, I had trouble with the text input question but I was eventually able to figure it out. I also thought that I was successful in being able to make my quiz easy to understand and easy to navigate through. . Discoveries . Throughout the experience I became more familiar with the use of block coding while using the basics of Java. I see this experience as a fun way to navigate through block coding and the basics of Java. . Challenges . I ran into a few challenges when making this quiz. One being showing the player if they answered correct or incorrect. At first I took the long way and made two different screens for an incorrect answer and correct answer. Later I realized that I should have used if then else statements to just set a picture to show correct or incorrect after entering the answer. I later displayed that in the final screen so if a player earns 3/3 they get a smiley face and if not they get a frowny face . Calculator . Design Process . For a second app I decided to design a calculator. I went for more of a straight forward approach by just adding 1 screen with multiple buttons and text inputs. I decided to have the 4 main calculating functions that any calculator would have. But I also decided to have 3 buttons that allowed you to either put the previous answer in the 1st number spot, 2nd number spot, or both. . Successes . I found success in the 4 main functions since the block coding already had the math operators so I just had to add the retrieved numbers from the elements to get the answer. . Discoveries . Creating a calculator as one of my apps allowed me to get more familiar with math functions and operators. . Challenges . I had trouble trying to figure out how to insert the answer back into the calculator for it to be subtracted, added, etc., but eventually I figured it out by setting the text of the input as the answer. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/week%203/2022/09/10/applab-notes.html",
            "relUrl": "/markdown/week%203/2022/09/10/applab-notes.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post89": {
            "title": "Markdown Table",
            "content": "The Weeks Ahead . S.NO 9/5-9/9 9/12-9/16 9/19-9/23 Time . AP Physics | Unit 2 test | Start Unit 3 | Lab Week | 07 Jun 2023 | . Am Lit | Analyze poems | Create Poems | Recite Poems | - | . AP Calc AB | Unit 1 test | Start Unit 2 | Study for Unit 2 | - | . AP CSP | Creative Development | Frontend Development | Backend Development | - | .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2022/09/05/markdown-table.html",
            "relUrl": "/markdown/2022/09/05/markdown-table.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post90": {
            "title": "HTML Fragments",
            "content": "HTML Fragments . Changing Theme from Minima to Leap Day . . When I changed my theme from Minima to Leap Day, the first thing I noticed was that all the colors changed. I also noticed that all of my posts moved to the left of my fastpages site. I also noticed that the formatting and text font changed. I liked how the title of my site was centered at the top of my screen. The only thing that I didn’t liek was how there is empty space on the right side of the site. Overall I like how nicer and cleaner the theme is compared to minima. . Search Feature . . When using the search page I am able to type in any key word that shows up throughout my fastpages website. In this case, I typed in fastpages and the page outputs links to any post, notebook, page and/or markdown that contains fastpages in it. . Tags . . As you can see I have tags for notesbooks that incule code in them as well as corresponding weeks for the different assignments. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/week%202/2022/09/05/html-fragments.html",
            "relUrl": "/markdown/week%202/2022/09/05/html-fragments.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post91": {
            "title": "Dictionaries and Lists",
            "content": "name = &quot;Kalani Cabral-Omana&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) # variable of type float score = 100.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Kalani Cabral-Omana &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 100.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Kalani Cabral-Omana&#39;, &#39;age&#39;: 16, &#39;score&#39;: 100.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] Kalani Cabral-Omana &lt;class &#39;str&#39;&gt; . Shoe Dictionary . Shoes = [] # Append to List a Dictionary of key/values related to a person and cars Shoes.append({ &quot;Shoe&quot;: &quot;Nike&quot;, &quot;Model&quot;: &quot;Dunk&quot;, &quot;Year&quot;: &quot;2016&quot;, &quot;Color&quot;: &quot;Blue&quot;, }) Shoes.append({ &quot;Shoe&quot;: &quot;Vans&quot;, &quot;Model&quot;: &quot;Classic&quot;, &quot;Year&quot;: &quot;2020&quot;, &quot;Color&quot;: &quot;Black&quot;, }) Shoes.append({ &quot;Shoe&quot;: &quot;Converse&quot;, &quot;Model&quot;: &quot;High-Top&quot;, &quot;Year&quot;: &quot;2021&quot;, &quot;Color&quot;: &quot;Blck&quot;, }) Shoes.append({ &quot;Shoe&quot;: &quot;Nike&quot;, &quot;Model&quot;: &quot;Blazers&quot;, &quot;Year&quot;: &quot;2020&quot;, &quot;Color&quot;: &quot;White&quot;, }) Shoes.append({ &quot;Shoe&quot;: &quot;Adidas&quot;, &quot;Model&quot;: &quot;Yeezy&quot;, &quot;Year&quot;: &quot;2023&quot;, &quot;Color&quot;: &quot;White&quot;, }) Shoes.append({ &quot;Shoe&quot;: &quot;Adidas&quot;, &quot;Model&quot;: &quot;Yeezy&quot;, &quot;Year&quot;: &quot;2022&quot;, &quot;Color&quot;: &quot;Black&quot;, }) Shoes.append({ &quot;Shoe&quot;: &quot;Nike&quot;, &quot;Model&quot;: &quot;Trainers&quot;, &quot;Year&quot;: &quot;2021&quot;, &quot;Color&quot;: &quot;Red&quot;, }) # Print the data structure print(Shoes) . [{&#39;Shoe&#39;: &#39;Nike&#39;, &#39;Model&#39;: &#39;Dunk&#39;, &#39;Year&#39;: &#39;2016&#39;, &#39;Color&#39;: &#39;Blue&#39;}, {&#39;Shoe&#39;: &#39;Vans&#39;, &#39;Model&#39;: &#39;Classic&#39;, &#39;Year&#39;: &#39;2020&#39;, &#39;Color&#39;: &#39;Black&#39;}, {&#39;Shoe&#39;: &#39;Converse&#39;, &#39;Model&#39;: &#39;High-Top&#39;, &#39;Year&#39;: &#39;2021&#39;, &#39;Color&#39;: &#39;Blck&#39;}, {&#39;Shoe&#39;: &#39;Nike&#39;, &#39;Model&#39;: &#39;Blazers&#39;, &#39;Year&#39;: &#39;2020&#39;, &#39;Color&#39;: &#39;White&#39;}, {&#39;Shoe&#39;: &#39;Adidas&#39;, &#39;Model&#39;: &#39;Yeezy&#39;, &#39;Year&#39;: &#39;2023&#39;, &#39;Color&#39;: &#39;White&#39;}, {&#39;Shoe&#39;: &#39;Adidas&#39;, &#39;Model&#39;: &#39;Yeezy&#39;, &#39;Year&#39;: &#39;2022&#39;, &#39;Color&#39;: &#39;Black&#39;}, {&#39;Shoe&#39;: &#39;Nike&#39;, &#39;Model&#39;: &#39;Trainers&#39;, &#39;Year&#39;: &#39;2021&#39;, &#39;Color&#39;: &#39;Red&#39;}] . Adding Records to the InfoDb . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Kalani&quot;, &quot;LastName&quot;: &quot;Cabral-Omana&quot;, &quot;DOB&quot;: &quot;April 18&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;kcabralomana@gmail.com.com&quot;, &quot;Owns_Shoes&quot;: [&quot;Nike Dunks, Black Vans, Black Converse, Nike Blazers&quot;] }) # Partner # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Navan&quot;, &quot;LastName&quot;: &quot;Yatavelli&quot;, &quot;DOB&quot;: &quot;October 31&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;navany@gmail.com&quot;, &quot;Owns_Shoes&quot;: [&quot;White Yeezy, Yeezy Slides&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Kalani&#39;, &#39;LastName&#39;: &#39;Cabral-Omana&#39;, &#39;DOB&#39;: &#39;April 18&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;kcabralomana@gmail.com.com&#39;, &#39;Owns_Shoes&#39;: [&#39;Nike Dunks, Black Vans, Black Converse, Nike Blazers&#39;]}, {&#39;FirstName&#39;: &#39;Navan&#39;, &#39;LastName&#39;: &#39;Yatavelli&#39;, &#39;DOB&#39;: &#39;October 31&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;navany@gmail.com&#39;, &#39;Owns_Shoes&#39;: [&#39;White Yeezy, Yeezy Slides&#39;]}] . Using Index in For Loop . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Shoes: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Shoes&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for i in range(len(InfoDb)): print_data(InfoDb[i]) for_loop() . For loop output Kalani Cabral-Omana Residence: San Diego Birth Day: April 18 Shoes: Nike Dunks, Black Vans, Black Converse, Nike Blazers Navan Yatavelli Residence: San Diego Birth Day: October 31 Shoes: White Yeezy, Yeezy Slides . Using Index in While Loop . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Kalani Cabral-Omana Residence: San Diego Birth Day: April 18 Shoes: Nike Dunks, Black Vans, Black Converse, Nike Blazers Navan Yatavelli Residence: San Diego Birth Day: October 31 Shoes: White Yeezy, Yeezy Slides . Recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Kalani Cabral-Omana Residence: San Diego Birth Day: April 18 Shoes: Nike Dunks, Black Vans, Black Converse, Nike Blazers Navan Yatavelli Residence: San Diego Birth Day: October 31 Shoes: White Yeezy, Yeezy Slides . Reverse Order . list = [&quot;Vans&quot;,&quot;Converse&quot;,&quot;Yeezy&quot;,&quot;Blazers&quot;,&quot;Slides&quot;,&quot;Trainers&quot;] for i in list: print(i[::-1]) print(list[::-1]) . snaV [&#39;Trainers&#39;, &#39;Slides&#39;, &#39;Blazers&#39;, &#39;Yeezy&#39;, &#39;Converse&#39;, &#39;Vans&#39;] esrevnoC [&#39;Trainers&#39;, &#39;Slides&#39;, &#39;Blazers&#39;, &#39;Yeezy&#39;, &#39;Converse&#39;, &#39;Vans&#39;] yzeeY [&#39;Trainers&#39;, &#39;Slides&#39;, &#39;Blazers&#39;, &#39;Yeezy&#39;, &#39;Converse&#39;, &#39;Vans&#39;] srezalB [&#39;Trainers&#39;, &#39;Slides&#39;, &#39;Blazers&#39;, &#39;Yeezy&#39;, &#39;Converse&#39;, &#39;Vans&#39;] sedilS [&#39;Trainers&#39;, &#39;Slides&#39;, &#39;Blazers&#39;, &#39;Yeezy&#39;, &#39;Converse&#39;, &#39;Vans&#39;] sreniarT [&#39;Trainers&#39;, &#39;Slides&#39;, &#39;Blazers&#39;, &#39;Yeezy&#39;, &#39;Converse&#39;, &#39;Vans&#39;] . Quiz That Stores In a List of Dictionaries . def question_with_response(prompt): print(&quot;Question: &quot; + prompt) word = &quot; &quot; questions = 4 # number of questions correct = 0 questions_answers = [{&quot;What command is used to include other functions that were previously developed?&quot; : &quot;import&quot;, &quot;What command is used to evaluate correct or incorrect response in this example?&quot; : &quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot; : &quot;expression&quot;, &quot;Variables for the values the function needs. Is passed as an argument when the function is called&quot; : &quot;parameters&quot;}] # dictionary # questions_answers.append = ({&quot;What command is used to include other functions that were previously developed?&quot; : &quot;import&quot;, # &quot;What command is used to evaluate correct or incorrect response in this example?&quot; : &quot;if&quot;, # &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot; : &quot;expression&quot;, # &quot;Variables for the values the function needs. Is passed as an argument when the function is called&quot; : &quot;parameters&quot;}) # dictionary for i in questions_answers: for question, answer in i.items(): question_with_response(question) # printing the questions word = input(&quot;Answer: &quot;) # variable that connects to the user&#39;s input if word == answer: # if the answer provided is correct print(&quot;You got it right!!&quot;) correct += 1 else: # if the answer provided is wrong print(&quot;Your answer was wrong&quot;) print(str(correct) + &quot;/&quot; + str(questions)) # correct/len(questions_answers) . Question: What command is used to include other functions that were previously developed? You got it right!! Question: What command is used to evaluate correct or incorrect response in this example? You got it right!! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? You got it right!! Question: Variables for the values the function needs. Is passed as an argument when the function is called Your answer was wrong 3/4 .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%202/2022/08/29/TP120-python_lists.html",
            "relUrl": "/jupyter/code/week%202/2022/08/29/TP120-python_lists.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post92": {
            "title": "Picture Collage",
            "content": ". This is a photo of sticks that I tied up and arranged to spell out “ALOHA” when my family and I dropped my brother off at college. . . This is a photo of Bryce Canyon National Park when I went with my family in the summer of 2021. . . This is a photo my mom took of me and some other surfers, surfing in the evening. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/week%201/2022/08/28/picture-collage.html",
            "relUrl": "/markdown/week%201/2022/08/28/picture-collage.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post93": {
            "title": "Bash Tool Installation Checks",
            "content": "Python Checks . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . conda list . # packages in environment at /home/kcabralomana/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Checking Jupyter . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/kcabralomana/.local/share/jupyter/kernels/bash javascript /home/kcabralomana/.local/share/jupyter/kernels/javascript python3 /home/kcabralomana/.local/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /home/kcabralomana/.local/share/jupyter/kernels/python3 .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%201/2022/08/28/bash-tool-setup.html",
            "relUrl": "/jupyter/code/week%201/2022/08/28/bash-tool-setup.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post94": {
            "title": "American Literature",
            "content": "Thesis: . In her poem “Prayer for My Immigrant Relatives,” Bedikian establishes the usage of imagery to demonstrate how immigrants may feel unwelcome and unwanted rather than embraced and aided when entering America. . Paragraph: . The use of imagery demonstrates American culture as deterring, representing how Americans may disdain immigration. For example, when Bedikian writes, “peoples’ words resemble the buzz of beehives,” (lines 6-7). The writer implies that to the ears of her immigrant relatives, hearing the language intimidates them, similar to the effect that a beehive enacts on someone. The buzz of the beehive may also be interpreted as the chaos of the immigration process, helping to resemble the difficulties immigrants must face while achieving the American Dream. The author also writes, “help them to hear the music of home sung from balconies overflowing with woven rugs and bundled vegetables.” (lines 1-3). In these lines, Bedikian focuses more on her immigrant relatives missing home and distracting themselves. Bedikian writes about their home as a place of elegance and comfort. This helps exemplify how hard it may be for the immigrant relatives to assimilate into the new American culture while also maintaining balance with their own culture. Also, by formatting the poem as a prayer it helps represent the stressful situation, due to people dedicating prayer in times of distress. Overall, Bedikian’s usage of imagery assists her poem in validating the immigration process to America as somewhat unwelcoming and detering. .",
            "url": "https://kcabralomana.github.io/Fastpages/2022/08/27/AMERICAN-LITERATURE.html",
            "relUrl": "/2022/08/27/AMERICAN-LITERATURE.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post95": {
            "title": "Jupyter Notebook Quiz",
            "content": "import getpass, sys questions = 7 correct = 0 def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg: print(&quot;Correct Answer&quot;) global correct correct+=1 else: print (&quot;Incorrect Answer&quot;) question_and_answer(&quot;Fill in the blank ____ Musgrove&quot;, &quot;Joe&quot;) question_and_answer(&quot;Who is the starting first baseman for the Padres?&quot;, &quot;Josh Bell&quot;) question_and_answer(&quot;Who is the Manager for the Padres?&quot;, &quot;Bob Melvin&quot;) question_and_answer(&quot;Who is the starting third baseman for the Padres&quot;, &quot;Manny Machado&quot;) question_and_answer(&quot;What is the General Manager for the Padres?&quot;, &quot;A.J. Preller&quot;) question_and_answer(&quot;Who is the starting right fielder&quot;, &quot;Juan Soto&quot;) question_and_answer(&quot;What city are the Padres based in?&quot;, &quot;San Diego&quot;) print(correct, &quot;Answers correct&quot;) . Question: Fill in the blank ____ Musgrove Answer: Joe Correct Answer Question: Who is the starting first baseman for the Padres? Answer: idk Incorrect Answer Question: Who is the Manager for the Padres? Answer: Bob Melvin Correct Answer Question: Who is the starting third baseman for the Padres Answer: Manny Machado Correct Answer Question: What is the General Manager for the Padres? Answer: idk Incorrect Answer Question: Who is the starting right fielder Answer: Juan Soto Correct Answer Question: What city are the Padres based in? Answer: idk Incorrect Answer 4 Answers correct . import random num1 = random.randrange(1, 20) print(num1) . 6 .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%201/2022/08/21/notebook-quiz.html",
            "relUrl": "/jupyter/code/week%201/2022/08/21/notebook-quiz.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post96": {
            "title": "Goals",
            "content": "My goals for this year: . Learn how to navigate my way through code | I want to be successful in this class by communicating with my peers and learning from differeent experiences | I want to fufill my learning experience by preparing myself for any coding classes I take in the future | These are my goals for this class this year. .",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/week%200/2022/08/21/markdown.html",
            "relUrl": "/markdown/week%200/2022/08/21/markdown.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post97": {
            "title": "My first Python Jupyter Notebook",
            "content": "Python test by printing &quot;Sup Bro&quot; . print(&quot;Hello World, I am Kalani&quot;) . Hello World, I am Kalani .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/code/week%200/2022/08/21/csp-post1.html",
            "relUrl": "/jupyter/code/week%200/2022/08/21/csp-post1.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post98": {
            "title": "Title",
            "content": "html = &quot;&quot;&quot; &lt;html&gt; &lt;head&gt; &lt;style&gt; /* Add your CSS styles here */ &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;table&gt; {% for row in board %} &lt;tr&gt; {% for square in row %} &lt;td class=&quot;{{ square }}&quot;&gt;&lt;/td&gt; {% endfor %} &lt;/tr&gt; {% endfor %} &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; &quot;&quot;&quot; board = [ [&quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;], [&quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;], [&quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;], [&quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;], [&quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;], [&quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;], [&quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;], [&quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;, &quot;white&quot;, &quot;black&quot;], ] print(html.format(board=board)) . KeyError Traceback (most recent call last) /home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb Cell 1 in &lt;cell line: 32&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; html = &#34;&#34;&#34; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; &lt;html&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; &lt;head&gt; (...) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=18&#39;&gt;19&lt;/a&gt; &lt;/html&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=19&#39;&gt;20&lt;/a&gt; &#34;&#34;&#34; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=21&#39;&gt;22&lt;/a&gt; board = [ [&#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;], &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=22&#39;&gt;23&lt;/a&gt; [&#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;], &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=23&#39;&gt;24&lt;/a&gt; [&#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;], (...) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=28&#39;&gt;29&lt;/a&gt; [&#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;, &#34;white&#34;, &#34;black&#34;], &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=29&#39;&gt;30&lt;/a&gt; ] &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/kcabralomana/Fastpages/_notebooks/2022-01-06-chessboard.ipynb#W0sdnNjb2RlLXJlbW90ZQ%3D%3D?line=31&#39;&gt;32&lt;/a&gt; print(html.format(board=board)) KeyError: &#39;% for row in board %&#39; .",
            "url": "https://kcabralomana.github.io/Fastpages/2022/01/06/chessboard.html",
            "relUrl": "/2022/01/06/chessboard.html",
            "date": " • Jan 6, 2022"
        }
        
    
  
    
        ,"post99": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://kcabralomana.github.io/Fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post100": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kcabralomana.github.io/Fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "API",
          "content": "API Implementation . LINK .",
          "url": "https://kcabralomana.github.io/Fastpages/apisubmenu/",
          "relUrl": "/apisubmenu/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Java Script",
          "content": "Jupyter Individual Design Elements . | JavaScript Usage | HTML fragments and JavaScript data to build a table | .",
          "url": "https://kcabralomana.github.io/Fastpages/javascript/",
          "relUrl": "/javascript/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "I am Kalani Cabral-Omana, I am a junior in Del Norte High School. I like to surf, play soccer and hang out with friends in my free time. . Follow me on GitHub: kcabralomana [^1]. .",
          "url": "https://kcabralomana.github.io/Fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  

  

  

  

  
  

  
      ,"page19": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kcabralomana.github.io/Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}